

Microchip MPLAB XC8 Assembler V3.10 build 20250813170317 
                                                                                               Mon Oct 27 10:27:04 2025

Microchip MPLAB XC8 C Compiler v3.10 (Free license) build 20250813170317 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	idataEEDATA,global,class=EEDATA,space=3,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext14,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	stringtext15,global,class=STRCODE,space=0,delta=2,noexec
    22                           	psect	stringtext16,global,class=STRCODE,space=0,delta=2,noexec
    23                           	psect	stringtext17,global,class=STRCODE,space=0,delta=2,noexec
    24                           	psect	stringtext18,global,class=STRCODE,space=0,delta=2,noexec
    25                           	psect	stringtext19,global,class=STRCODE,space=0,delta=2,noexec
    26                           	psect	stringtext20,global,class=STRCODE,space=0,delta=2,noexec
    27                           	psect	stringtext21,global,class=STRCODE,space=0,delta=2,noexec
    28                           	psect	stringtext22,global,class=STRCODE,space=0,delta=2,noexec
    29                           	psect	stringtext23,global,class=STRCODE,space=0,delta=2,noexec
    30                           	psect	stringtext24,global,class=STRCODE,space=0,delta=2,noexec
    31                           	psect	stringtext25,global,class=STRCODE,space=0,delta=2,noexec
    32                           	psect	stringtext26,global,class=STRCODE,space=0,delta=2,noexec
    33                           	psect	stringtext27,global,class=STRCODE,space=0,delta=2,noexec
    34                           	psect	stringtext28,global,class=STRCODE,space=0,delta=2,noexec
    35                           	psect	stringtext29,global,class=STRCODE,space=0,delta=2,noexec
    36                           	psect	stringtext30,global,class=STRCODE,space=0,delta=2,noexec
    37                           	psect	stringtext31,global,class=STRCODE,space=0,delta=2,noexec
    38                           	psect	stringtext32,global,class=STRCODE,space=0,delta=2,noexec
    39                           	psect	stringtext33,global,class=STRCODE,space=0,delta=2,noexec
    40                           	psect	stringtext34,global,class=STRCODE,space=0,delta=2,noexec
    41                           	psect	stringtext35,global,class=STRCODE,space=0,delta=2,noexec
    42                           	psect	stringtext36,global,class=STRCODE,space=0,delta=2,noexec
    43                           	psect	stringtext37,global,class=STRCODE,space=0,delta=2,noexec
    44                           	psect	stringtext38,global,class=STRCODE,space=0,delta=2,noexec
    45                           	psect	stringtext39,global,class=STRCODE,space=0,delta=2,noexec
    46                           	psect	stringtext40,global,class=STRCODE,space=0,delta=2,noexec
    47                           	psect	stringtext41,global,class=STRCODE,space=0,delta=2,noexec
    48                           	psect	stringtext42,global,class=STRCODE,space=0,delta=2,noexec
    49                           	psect	stringtext43,global,class=STRCODE,space=0,delta=2,noexec
    50                           	psect	stringtext44,global,class=STRCODE,space=0,delta=2,noexec
    51                           	psect	stringtext45,global,class=STRCODE,space=0,delta=2,noexec
    52                           	psect	stringtext46,global,class=STRCODE,space=0,delta=2,noexec
    53                           	psect	stringtext47,global,class=STRCODE,space=0,delta=2,noexec
    54                           	psect	stringtext48,global,class=STRCODE,space=0,delta=2,noexec
    55                           	psect	stringtext49,global,class=STRCODE,space=0,delta=2,noexec
    56                           	psect	stringtext50,global,class=STRCODE,space=0,delta=2,noexec
    57                           	psect	stringtext51,global,class=STRCODE,space=0,delta=2,noexec
    58                           	psect	stringtext52,global,class=STRCODE,space=0,delta=2,noexec
    59                           	psect	stringtext53,global,class=STRCODE,space=0,delta=2,noexec
    60                           	psect	stringtext54,global,class=STRCODE,space=0,delta=2,noexec
    61                           	psect	stringtext55,global,class=STRCODE,space=0,delta=2,noexec
    62                           	psect	stringtext56,global,class=STRCODE,space=0,delta=2,noexec
    63                           	psect	stringtext57,global,class=STRCODE,space=0,delta=2,noexec
    64                           	psect	stringtext58,global,class=STRCODE,space=0,delta=2,noexec
    65                           	psect	stringtext59,global,class=STRCODE,space=0,delta=2,noexec
    66                           	psect	stringtext60,global,class=STRCODE,space=0,delta=2,noexec
    67                           	psect	stringtext61,global,class=STRCODE,space=0,delta=2,noexec
    68                           	psect	stringtext62,global,class=STRCODE,space=0,delta=2,noexec
    69                           	psect	stringtext63,global,class=STRCODE,space=0,delta=2,noexec
    70                           	psect	stringtext64,global,class=STRCODE,space=0,delta=2,noexec
    71                           	psect	stringtext65,global,class=STRCODE,space=0,delta=2,noexec
    72                           	psect	stringtext66,global,class=STRCODE,space=0,delta=2,noexec
    73                           	psect	stringtext67,global,class=STRCODE,space=0,delta=2,noexec
    74                           	psect	stringtext68,global,class=STRCODE,space=0,delta=2,noexec
    75                           	psect	stringtext69,global,class=STRCODE,space=0,delta=2,noexec
    76                           	psect	stringtext70,global,class=STRCODE,space=0,delta=2,noexec
    77                           	psect	stringtext71,global,class=STRCODE,space=0,delta=2,noexec
    78                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    79                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    80                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    81                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    82                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    83                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    84                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2,noexec
    85                           	psect	dataEEDATA,global,class=EEDATA,space=3,delta=2,noexec
    86                           	psect	inittext,global,class=CODE,space=0,delta=2
    87                           	psect	clrtext,global,class=CODE,space=0,delta=2
    88                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    89                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    90                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    91                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    92                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    96                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
   104                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
   105                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
   106                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
   110                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
   114                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
   117                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
   118                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
   121                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
   122                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
   125                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
   126                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
   127                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
   128                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
   129                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
   130                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
   131                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
   132                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
   133                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
   134                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
   135                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
   136                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
   137                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
   138                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
   139                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
   140                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
   141                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
   142                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
   143                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
   144                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
   145                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2,group=1
   146                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
   147                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
   148                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
   149                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2,group=1
   150                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
   151                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
   152                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
   153                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
   154                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2,group=1
   155                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2,group=1
   156                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2,group=1
   157                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   158                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   159                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   160                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
   161                           	psect	text70,local,class=CODE,space=0,merge=1,delta=2
   162                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   163                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   164                           	psect	text73,local,class=CODE,space=0,merge=1,delta=2
   165                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   166                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   167                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   168                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   169                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
   170                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   171                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2
   172                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   173                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
   174                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   175                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   176                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2,group=1
   177                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   178                           	psect	text87,local,class=CODE,space=0,merge=1,delta=2
   179                           	psect	intentry,global,class=CODE,space=0,delta=2
   180                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   181                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   182                           	dabs	1,0x7E,2
   183     0000                     
   184                           ; Version 2.40
   185                           ; Generated 17/11/2021 GMT
   186                           ; 
   187                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   188                           ; All rights reserved.
   189                           ; 
   190                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   191                           ; 
   192                           ; Redistribution and use in source and binary forms, with or without modification, are
   193                           ; permitted provided that the following conditions are met:
   194                           ; 
   195                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   196                           ;        conditions and the following disclaimer.
   197                           ; 
   198                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   199                           ;        of conditions and the following disclaimer in the documentation and/or other
   200                           ;        materials provided with the distribution. Publication is not required when
   201                           ;        this file is used in an embedded application.
   202                           ; 
   203                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   204                           ;        software without specific prior written permission.
   205                           ; 
   206                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   207                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   208                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   209                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   210                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   211                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   212                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   213                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   214                           ; 
   215                           ; 
   216                           ; Code-generator required, PIC16F1938 Definitions
   217                           ; 
   218                           ; SFR Addresses
   219     0008                     bsr             equ	8
   220     0005                     fsr0h           equ	5
   221     0004                     fsr0l           equ	4
   222     0007                     fsr1h           equ	7
   223     0006                     fsr1l           equ	6
   224     0000                     indf            equ	0
   225     0000                     indf0           equ	0
   226     0001                     indf1           equ	1
   227     000B                     intcon          equ	11
   228     0002                     pc              equ	2
   229     0002                     pcl             equ	2
   230     000A                     pclath          equ	10
   231     0003                     status          equ	3
   232     0009                     wreg            equ	9
   233     0000                     INDF0           equ	0	;# 
   234     0001                     INDF1           equ	1	;# 
   235     0002                     PCL             equ	2	;# 
   236     0003                     STATUS          equ	3	;# 
   237     0004                     FSR0L           equ	4	;# 
   238     0005                     FSR0H           equ	5	;# 
   239     0006                     FSR1L           equ	6	;# 
   240     0007                     FSR1H           equ	7	;# 
   241     0008                     BSR             equ	8	;# 
   242     0009                     WREG            equ	9	;# 
   243     000A                     PCLATH          equ	10	;# 
   244     000B                     INTCON          equ	11	;# 
   245     000C                     PORTA           equ	12	;# 
   246     000D                     PORTB           equ	13	;# 
   247     000E                     PORTC           equ	14	;# 
   248     0010                     PORTE           equ	16	;# 
   249     0011                     PIR1            equ	17	;# 
   250     0012                     PIR2            equ	18	;# 
   251     0013                     PIR3            equ	19	;# 
   252     0015                     TMR0            equ	21	;# 
   253     0016                     TMR1            equ	22	;# 
   254     0016                     TMR1L           equ	22	;# 
   255     0017                     TMR1H           equ	23	;# 
   256     0018                     T1CON           equ	24	;# 
   257     0019                     T1GCON          equ	25	;# 
   258     001A                     TMR2            equ	26	;# 
   259     001B                     PR2             equ	27	;# 
   260     001C                     T2CON           equ	28	;# 
   261     001E                     CPSCON0         equ	30	;# 
   262     001F                     CPSCON1         equ	31	;# 
   263     008C                     TRISA           equ	140	;# 
   264     008D                     TRISB           equ	141	;# 
   265     008E                     TRISC           equ	142	;# 
   266     0090                     TRISE           equ	144	;# 
   267     0091                     PIE1            equ	145	;# 
   268     0092                     PIE2            equ	146	;# 
   269     0093                     PIE3            equ	147	;# 
   270     0095                     OPTION_REG      equ	149	;# 
   271     0096                     PCON            equ	150	;# 
   272     0097                     WDTCON          equ	151	;# 
   273     0098                     OSCTUNE         equ	152	;# 
   274     0099                     OSCCON          equ	153	;# 
   275     009A                     OSCSTAT         equ	154	;# 
   276     009B                     ADRES           equ	155	;# 
   277     009B                     ADRESL          equ	155	;# 
   278     009C                     ADRESH          equ	156	;# 
   279     009D                     ADCON0          equ	157	;# 
   280     009E                     ADCON1          equ	158	;# 
   281     010C                     LATA            equ	268	;# 
   282     010D                     LATB            equ	269	;# 
   283     010E                     LATC            equ	270	;# 
   284     0110                     LATE            equ	272	;# 
   285     0111                     CM1CON0         equ	273	;# 
   286     0112                     CM1CON1         equ	274	;# 
   287     0113                     CM2CON0         equ	275	;# 
   288     0114                     CM2CON1         equ	276	;# 
   289     0115                     CMOUT           equ	277	;# 
   290     0116                     BORCON          equ	278	;# 
   291     0117                     FVRCON          equ	279	;# 
   292     0118                     DACCON0         equ	280	;# 
   293     0119                     DACCON1         equ	281	;# 
   294     011A                     SRCON0          equ	282	;# 
   295     011B                     SRCON1          equ	283	;# 
   296     011D                     APFCON          equ	285	;# 
   297     018C                     ANSELA          equ	396	;# 
   298     018D                     ANSELB          equ	397	;# 
   299     0191                     EEADR           equ	401	;# 
   300     0191                     EEADRL          equ	401	;# 
   301     0192                     EEADRH          equ	402	;# 
   302     0193                     EEDAT           equ	403	;# 
   303     0193                     EEDATL          equ	403	;# 
   304     0193                     EEDATA          equ	403	;# 
   305     0194                     EEDATH          equ	404	;# 
   306     0195                     EECON1          equ	405	;# 
   307     0196                     EECON2          equ	406	;# 
   308     0199                     RCREG           equ	409	;# 
   309     019A                     TXREG           equ	410	;# 
   310     019B                     SP1BRG          equ	411	;# 
   311     019B                     SP1BRGL         equ	411	;# 
   312     019B                     SPBRG           equ	411	;# 
   313     019B                     SPBRGL          equ	411	;# 
   314     019C                     SP1BRGH         equ	412	;# 
   315     019C                     SPBRGH          equ	412	;# 
   316     019D                     RCSTA           equ	413	;# 
   317     019E                     TXSTA           equ	414	;# 
   318     019F                     BAUDCON         equ	415	;# 
   319     020D                     WPUB            equ	525	;# 
   320     0210                     WPUE            equ	528	;# 
   321     0211                     SSPBUF          equ	529	;# 
   322     0212                     SSPADD          equ	530	;# 
   323     0213                     SSPMSK          equ	531	;# 
   324     0214                     SSPSTAT         equ	532	;# 
   325     0215                     SSPCON1         equ	533	;# 
   326     0215                     SSPCON          equ	533	;# 
   327     0216                     SSPCON2         equ	534	;# 
   328     0217                     SSPCON3         equ	535	;# 
   329     0291                     CCPR1           equ	657	;# 
   330     0291                     CCPR1L          equ	657	;# 
   331     0292                     CCPR1H          equ	658	;# 
   332     0293                     CCP1CON         equ	659	;# 
   333     0294                     PWM1CON         equ	660	;# 
   334     0295                     CCP1AS          equ	661	;# 
   335     0295                     ECCP1AS         equ	661	;# 
   336     0296                     PSTR1CON        equ	662	;# 
   337     0298                     CCPR2           equ	664	;# 
   338     0298                     CCPR2L          equ	664	;# 
   339     0299                     CCPR2H          equ	665	;# 
   340     029A                     CCP2CON         equ	666	;# 
   341     029B                     PWM2CON         equ	667	;# 
   342     029C                     CCP2AS          equ	668	;# 
   343     029C                     ECCP2AS         equ	668	;# 
   344     029D                     PSTR2CON        equ	669	;# 
   345     029E                     CCPTMRS0        equ	670	;# 
   346     029F                     CCPTMRS1        equ	671	;# 
   347     0311                     CCPR3           equ	785	;# 
   348     0311                     CCPR3L          equ	785	;# 
   349     0312                     CCPR3H          equ	786	;# 
   350     0313                     CCP3CON         equ	787	;# 
   351     0314                     PWM3CON         equ	788	;# 
   352     0315                     CCP3AS          equ	789	;# 
   353     0315                     ECCP3AS         equ	789	;# 
   354     0316                     PSTR3CON        equ	790	;# 
   355     0318                     CCPR4           equ	792	;# 
   356     0318                     CCPR4L          equ	792	;# 
   357     0319                     CCPR4H          equ	793	;# 
   358     031A                     CCP4CON         equ	794	;# 
   359     031C                     CCPR5           equ	796	;# 
   360     031C                     CCPR5L          equ	796	;# 
   361     031D                     CCPR5H          equ	797	;# 
   362     031E                     CCP5CON         equ	798	;# 
   363     0394                     IOCBP           equ	916	;# 
   364     0395                     IOCBN           equ	917	;# 
   365     0396                     IOCBF           equ	918	;# 
   366     0415                     TMR4            equ	1045	;# 
   367     0416                     PR4             equ	1046	;# 
   368     0417                     T4CON           equ	1047	;# 
   369     041C                     TMR6            equ	1052	;# 
   370     041D                     PR6             equ	1053	;# 
   371     041E                     T6CON           equ	1054	;# 
   372     0791                     LCDCON          equ	1937	;# 
   373     0792                     LCDPS           equ	1938	;# 
   374     0793                     LCDREF          equ	1939	;# 
   375     0794                     LCDCST          equ	1940	;# 
   376     0795                     LCDRL           equ	1941	;# 
   377     0798                     LCDSE0          equ	1944	;# 
   378     0799                     LCDSE1          equ	1945	;# 
   379     07A0                     LCDDATA0        equ	1952	;# 
   380     07A1                     LCDDATA1        equ	1953	;# 
   381     07A3                     LCDDATA3        equ	1955	;# 
   382     07A4                     LCDDATA4        equ	1956	;# 
   383     07A6                     LCDDATA6        equ	1958	;# 
   384     07A7                     LCDDATA7        equ	1959	;# 
   385     07A9                     LCDDATA9        equ	1961	;# 
   386     07AA                     LCDDATA10       equ	1962	;# 
   387     0FE4                     STATUS_SHAD     equ	4068	;# 
   388     0FE5                     WREG_SHAD       equ	4069	;# 
   389     0FE6                     BSR_SHAD        equ	4070	;# 
   390     0FE7                     PCLATH_SHAD     equ	4071	;# 
   391     0FE8                     FSR0L_SHAD      equ	4072	;# 
   392     0FE9                     FSR0H_SHAD      equ	4073	;# 
   393     0FEA                     FSR1L_SHAD      equ	4074	;# 
   394     0FEB                     FSR1H_SHAD      equ	4075	;# 
   395     0FED                     STKPTR          equ	4077	;# 
   396     0FEE                     TOSL            equ	4078	;# 
   397     0FEF                     TOSH            equ	4079	;# 
   398     0000                     INDF0           equ	0	;# 
   399     0001                     INDF1           equ	1	;# 
   400     0002                     PCL             equ	2	;# 
   401     0003                     STATUS          equ	3	;# 
   402     0004                     FSR0L           equ	4	;# 
   403     0005                     FSR0H           equ	5	;# 
   404     0006                     FSR1L           equ	6	;# 
   405     0007                     FSR1H           equ	7	;# 
   406     0008                     BSR             equ	8	;# 
   407     0009                     WREG            equ	9	;# 
   408     000A                     PCLATH          equ	10	;# 
   409     000B                     INTCON          equ	11	;# 
   410     000C                     PORTA           equ	12	;# 
   411     000D                     PORTB           equ	13	;# 
   412     000E                     PORTC           equ	14	;# 
   413     0010                     PORTE           equ	16	;# 
   414     0011                     PIR1            equ	17	;# 
   415     0012                     PIR2            equ	18	;# 
   416     0013                     PIR3            equ	19	;# 
   417     0015                     TMR0            equ	21	;# 
   418     0016                     TMR1            equ	22	;# 
   419     0016                     TMR1L           equ	22	;# 
   420     0017                     TMR1H           equ	23	;# 
   421     0018                     T1CON           equ	24	;# 
   422     0019                     T1GCON          equ	25	;# 
   423     001A                     TMR2            equ	26	;# 
   424     001B                     PR2             equ	27	;# 
   425     001C                     T2CON           equ	28	;# 
   426     001E                     CPSCON0         equ	30	;# 
   427     001F                     CPSCON1         equ	31	;# 
   428     008C                     TRISA           equ	140	;# 
   429     008D                     TRISB           equ	141	;# 
   430     008E                     TRISC           equ	142	;# 
   431     0090                     TRISE           equ	144	;# 
   432     0091                     PIE1            equ	145	;# 
   433     0092                     PIE2            equ	146	;# 
   434     0093                     PIE3            equ	147	;# 
   435     0095                     OPTION_REG      equ	149	;# 
   436     0096                     PCON            equ	150	;# 
   437     0097                     WDTCON          equ	151	;# 
   438     0098                     OSCTUNE         equ	152	;# 
   439     0099                     OSCCON          equ	153	;# 
   440     009A                     OSCSTAT         equ	154	;# 
   441     009B                     ADRES           equ	155	;# 
   442     009B                     ADRESL          equ	155	;# 
   443     009C                     ADRESH          equ	156	;# 
   444     009D                     ADCON0          equ	157	;# 
   445     009E                     ADCON1          equ	158	;# 
   446     010C                     LATA            equ	268	;# 
   447     010D                     LATB            equ	269	;# 
   448     010E                     LATC            equ	270	;# 
   449     0110                     LATE            equ	272	;# 
   450     0111                     CM1CON0         equ	273	;# 
   451     0112                     CM1CON1         equ	274	;# 
   452     0113                     CM2CON0         equ	275	;# 
   453     0114                     CM2CON1         equ	276	;# 
   454     0115                     CMOUT           equ	277	;# 
   455     0116                     BORCON          equ	278	;# 
   456     0117                     FVRCON          equ	279	;# 
   457     0118                     DACCON0         equ	280	;# 
   458     0119                     DACCON1         equ	281	;# 
   459     011A                     SRCON0          equ	282	;# 
   460     011B                     SRCON1          equ	283	;# 
   461     011D                     APFCON          equ	285	;# 
   462     018C                     ANSELA          equ	396	;# 
   463     018D                     ANSELB          equ	397	;# 
   464     0191                     EEADR           equ	401	;# 
   465     0191                     EEADRL          equ	401	;# 
   466     0192                     EEADRH          equ	402	;# 
   467     0193                     EEDAT           equ	403	;# 
   468     0193                     EEDATL          equ	403	;# 
   469     0193                     EEDATA          equ	403	;# 
   470     0194                     EEDATH          equ	404	;# 
   471     0195                     EECON1          equ	405	;# 
   472     0196                     EECON2          equ	406	;# 
   473     0199                     RCREG           equ	409	;# 
   474     019A                     TXREG           equ	410	;# 
   475     019B                     SP1BRG          equ	411	;# 
   476     019B                     SP1BRGL         equ	411	;# 
   477     019B                     SPBRG           equ	411	;# 
   478     019B                     SPBRGL          equ	411	;# 
   479     019C                     SP1BRGH         equ	412	;# 
   480     019C                     SPBRGH          equ	412	;# 
   481     019D                     RCSTA           equ	413	;# 
   482     019E                     TXSTA           equ	414	;# 
   483     019F                     BAUDCON         equ	415	;# 
   484     020D                     WPUB            equ	525	;# 
   485     0210                     WPUE            equ	528	;# 
   486     0211                     SSPBUF          equ	529	;# 
   487     0212                     SSPADD          equ	530	;# 
   488     0213                     SSPMSK          equ	531	;# 
   489     0214                     SSPSTAT         equ	532	;# 
   490     0215                     SSPCON1         equ	533	;# 
   491     0215                     SSPCON          equ	533	;# 
   492     0216                     SSPCON2         equ	534	;# 
   493     0217                     SSPCON3         equ	535	;# 
   494     0291                     CCPR1           equ	657	;# 
   495     0291                     CCPR1L          equ	657	;# 
   496     0292                     CCPR1H          equ	658	;# 
   497     0293                     CCP1CON         equ	659	;# 
   498     0294                     PWM1CON         equ	660	;# 
   499     0295                     CCP1AS          equ	661	;# 
   500     0295                     ECCP1AS         equ	661	;# 
   501     0296                     PSTR1CON        equ	662	;# 
   502     0298                     CCPR2           equ	664	;# 
   503     0298                     CCPR2L          equ	664	;# 
   504     0299                     CCPR2H          equ	665	;# 
   505     029A                     CCP2CON         equ	666	;# 
   506     029B                     PWM2CON         equ	667	;# 
   507     029C                     CCP2AS          equ	668	;# 
   508     029C                     ECCP2AS         equ	668	;# 
   509     029D                     PSTR2CON        equ	669	;# 
   510     029E                     CCPTMRS0        equ	670	;# 
   511     029F                     CCPTMRS1        equ	671	;# 
   512     0311                     CCPR3           equ	785	;# 
   513     0311                     CCPR3L          equ	785	;# 
   514     0312                     CCPR3H          equ	786	;# 
   515     0313                     CCP3CON         equ	787	;# 
   516     0314                     PWM3CON         equ	788	;# 
   517     0315                     CCP3AS          equ	789	;# 
   518     0315                     ECCP3AS         equ	789	;# 
   519     0316                     PSTR3CON        equ	790	;# 
   520     0318                     CCPR4           equ	792	;# 
   521     0318                     CCPR4L          equ	792	;# 
   522     0319                     CCPR4H          equ	793	;# 
   523     031A                     CCP4CON         equ	794	;# 
   524     031C                     CCPR5           equ	796	;# 
   525     031C                     CCPR5L          equ	796	;# 
   526     031D                     CCPR5H          equ	797	;# 
   527     031E                     CCP5CON         equ	798	;# 
   528     0394                     IOCBP           equ	916	;# 
   529     0395                     IOCBN           equ	917	;# 
   530     0396                     IOCBF           equ	918	;# 
   531     0415                     TMR4            equ	1045	;# 
   532     0416                     PR4             equ	1046	;# 
   533     0417                     T4CON           equ	1047	;# 
   534     041C                     TMR6            equ	1052	;# 
   535     041D                     PR6             equ	1053	;# 
   536     041E                     T6CON           equ	1054	;# 
   537     0791                     LCDCON          equ	1937	;# 
   538     0792                     LCDPS           equ	1938	;# 
   539     0793                     LCDREF          equ	1939	;# 
   540     0794                     LCDCST          equ	1940	;# 
   541     0795                     LCDRL           equ	1941	;# 
   542     0798                     LCDSE0          equ	1944	;# 
   543     0799                     LCDSE1          equ	1945	;# 
   544     07A0                     LCDDATA0        equ	1952	;# 
   545     07A1                     LCDDATA1        equ	1953	;# 
   546     07A3                     LCDDATA3        equ	1955	;# 
   547     07A4                     LCDDATA4        equ	1956	;# 
   548     07A6                     LCDDATA6        equ	1958	;# 
   549     07A7                     LCDDATA7        equ	1959	;# 
   550     07A9                     LCDDATA9        equ	1961	;# 
   551     07AA                     LCDDATA10       equ	1962	;# 
   552     0FE4                     STATUS_SHAD     equ	4068	;# 
   553     0FE5                     WREG_SHAD       equ	4069	;# 
   554     0FE6                     BSR_SHAD        equ	4070	;# 
   555     0FE7                     PCLATH_SHAD     equ	4071	;# 
   556     0FE8                     FSR0L_SHAD      equ	4072	;# 
   557     0FE9                     FSR0H_SHAD      equ	4073	;# 
   558     0FEA                     FSR1L_SHAD      equ	4074	;# 
   559     0FEB                     FSR1H_SHAD      equ	4075	;# 
   560     0FED                     STKPTR          equ	4077	;# 
   561     0FEE                     TOSL            equ	4078	;# 
   562     0FEF                     TOSH            equ	4079	;# 
   563     0000                     INDF0           equ	0	;# 
   564     0001                     INDF1           equ	1	;# 
   565     0002                     PCL             equ	2	;# 
   566     0003                     STATUS          equ	3	;# 
   567     0004                     FSR0L           equ	4	;# 
   568     0005                     FSR0H           equ	5	;# 
   569     0006                     FSR1L           equ	6	;# 
   570     0007                     FSR1H           equ	7	;# 
   571     0008                     BSR             equ	8	;# 
   572     0009                     WREG            equ	9	;# 
   573     000A                     PCLATH          equ	10	;# 
   574     000B                     INTCON          equ	11	;# 
   575     000C                     PORTA           equ	12	;# 
   576     000D                     PORTB           equ	13	;# 
   577     000E                     PORTC           equ	14	;# 
   578     0010                     PORTE           equ	16	;# 
   579     0011                     PIR1            equ	17	;# 
   580     0012                     PIR2            equ	18	;# 
   581     0013                     PIR3            equ	19	;# 
   582     0015                     TMR0            equ	21	;# 
   583     0016                     TMR1            equ	22	;# 
   584     0016                     TMR1L           equ	22	;# 
   585     0017                     TMR1H           equ	23	;# 
   586     0018                     T1CON           equ	24	;# 
   587     0019                     T1GCON          equ	25	;# 
   588     001A                     TMR2            equ	26	;# 
   589     001B                     PR2             equ	27	;# 
   590     001C                     T2CON           equ	28	;# 
   591     001E                     CPSCON0         equ	30	;# 
   592     001F                     CPSCON1         equ	31	;# 
   593     008C                     TRISA           equ	140	;# 
   594     008D                     TRISB           equ	141	;# 
   595     008E                     TRISC           equ	142	;# 
   596     0090                     TRISE           equ	144	;# 
   597     0091                     PIE1            equ	145	;# 
   598     0092                     PIE2            equ	146	;# 
   599     0093                     PIE3            equ	147	;# 
   600     0095                     OPTION_REG      equ	149	;# 
   601     0096                     PCON            equ	150	;# 
   602     0097                     WDTCON          equ	151	;# 
   603     0098                     OSCTUNE         equ	152	;# 
   604     0099                     OSCCON          equ	153	;# 
   605     009A                     OSCSTAT         equ	154	;# 
   606     009B                     ADRES           equ	155	;# 
   607     009B                     ADRESL          equ	155	;# 
   608     009C                     ADRESH          equ	156	;# 
   609     009D                     ADCON0          equ	157	;# 
   610     009E                     ADCON1          equ	158	;# 
   611     010C                     LATA            equ	268	;# 
   612     010D                     LATB            equ	269	;# 
   613     010E                     LATC            equ	270	;# 
   614     0110                     LATE            equ	272	;# 
   615     0111                     CM1CON0         equ	273	;# 
   616     0112                     CM1CON1         equ	274	;# 
   617     0113                     CM2CON0         equ	275	;# 
   618     0114                     CM2CON1         equ	276	;# 
   619     0115                     CMOUT           equ	277	;# 
   620     0116                     BORCON          equ	278	;# 
   621     0117                     FVRCON          equ	279	;# 
   622     0118                     DACCON0         equ	280	;# 
   623     0119                     DACCON1         equ	281	;# 
   624     011A                     SRCON0          equ	282	;# 
   625     011B                     SRCON1          equ	283	;# 
   626     011D                     APFCON          equ	285	;# 
   627     018C                     ANSELA          equ	396	;# 
   628     018D                     ANSELB          equ	397	;# 
   629     0191                     EEADR           equ	401	;# 
   630     0191                     EEADRL          equ	401	;# 
   631     0192                     EEADRH          equ	402	;# 
   632     0193                     EEDAT           equ	403	;# 
   633     0193                     EEDATL          equ	403	;# 
   634     0193                     EEDATA          equ	403	;# 
   635     0194                     EEDATH          equ	404	;# 
   636     0195                     EECON1          equ	405	;# 
   637     0196                     EECON2          equ	406	;# 
   638     0199                     RCREG           equ	409	;# 
   639     019A                     TXREG           equ	410	;# 
   640     019B                     SP1BRG          equ	411	;# 
   641     019B                     SP1BRGL         equ	411	;# 
   642     019B                     SPBRG           equ	411	;# 
   643     019B                     SPBRGL          equ	411	;# 
   644     019C                     SP1BRGH         equ	412	;# 
   645     019C                     SPBRGH          equ	412	;# 
   646     019D                     RCSTA           equ	413	;# 
   647     019E                     TXSTA           equ	414	;# 
   648     019F                     BAUDCON         equ	415	;# 
   649     020D                     WPUB            equ	525	;# 
   650     0210                     WPUE            equ	528	;# 
   651     0211                     SSPBUF          equ	529	;# 
   652     0212                     SSPADD          equ	530	;# 
   653     0213                     SSPMSK          equ	531	;# 
   654     0214                     SSPSTAT         equ	532	;# 
   655     0215                     SSPCON1         equ	533	;# 
   656     0215                     SSPCON          equ	533	;# 
   657     0216                     SSPCON2         equ	534	;# 
   658     0217                     SSPCON3         equ	535	;# 
   659     0291                     CCPR1           equ	657	;# 
   660     0291                     CCPR1L          equ	657	;# 
   661     0292                     CCPR1H          equ	658	;# 
   662     0293                     CCP1CON         equ	659	;# 
   663     0294                     PWM1CON         equ	660	;# 
   664     0295                     CCP1AS          equ	661	;# 
   665     0295                     ECCP1AS         equ	661	;# 
   666     0296                     PSTR1CON        equ	662	;# 
   667     0298                     CCPR2           equ	664	;# 
   668     0298                     CCPR2L          equ	664	;# 
   669     0299                     CCPR2H          equ	665	;# 
   670     029A                     CCP2CON         equ	666	;# 
   671     029B                     PWM2CON         equ	667	;# 
   672     029C                     CCP2AS          equ	668	;# 
   673     029C                     ECCP2AS         equ	668	;# 
   674     029D                     PSTR2CON        equ	669	;# 
   675     029E                     CCPTMRS0        equ	670	;# 
   676     029F                     CCPTMRS1        equ	671	;# 
   677     0311                     CCPR3           equ	785	;# 
   678     0311                     CCPR3L          equ	785	;# 
   679     0312                     CCPR3H          equ	786	;# 
   680     0313                     CCP3CON         equ	787	;# 
   681     0314                     PWM3CON         equ	788	;# 
   682     0315                     CCP3AS          equ	789	;# 
   683     0315                     ECCP3AS         equ	789	;# 
   684     0316                     PSTR3CON        equ	790	;# 
   685     0318                     CCPR4           equ	792	;# 
   686     0318                     CCPR4L          equ	792	;# 
   687     0319                     CCPR4H          equ	793	;# 
   688     031A                     CCP4CON         equ	794	;# 
   689     031C                     CCPR5           equ	796	;# 
   690     031C                     CCPR5L          equ	796	;# 
   691     031D                     CCPR5H          equ	797	;# 
   692     031E                     CCP5CON         equ	798	;# 
   693     0394                     IOCBP           equ	916	;# 
   694     0395                     IOCBN           equ	917	;# 
   695     0396                     IOCBF           equ	918	;# 
   696     0415                     TMR4            equ	1045	;# 
   697     0416                     PR4             equ	1046	;# 
   698     0417                     T4CON           equ	1047	;# 
   699     041C                     TMR6            equ	1052	;# 
   700     041D                     PR6             equ	1053	;# 
   701     041E                     T6CON           equ	1054	;# 
   702     0791                     LCDCON          equ	1937	;# 
   703     0792                     LCDPS           equ	1938	;# 
   704     0793                     LCDREF          equ	1939	;# 
   705     0794                     LCDCST          equ	1940	;# 
   706     0795                     LCDRL           equ	1941	;# 
   707     0798                     LCDSE0          equ	1944	;# 
   708     0799                     LCDSE1          equ	1945	;# 
   709     07A0                     LCDDATA0        equ	1952	;# 
   710     07A1                     LCDDATA1        equ	1953	;# 
   711     07A3                     LCDDATA3        equ	1955	;# 
   712     07A4                     LCDDATA4        equ	1956	;# 
   713     07A6                     LCDDATA6        equ	1958	;# 
   714     07A7                     LCDDATA7        equ	1959	;# 
   715     07A9                     LCDDATA9        equ	1961	;# 
   716     07AA                     LCDDATA10       equ	1962	;# 
   717     0FE4                     STATUS_SHAD     equ	4068	;# 
   718     0FE5                     WREG_SHAD       equ	4069	;# 
   719     0FE6                     BSR_SHAD        equ	4070	;# 
   720     0FE7                     PCLATH_SHAD     equ	4071	;# 
   721     0FE8                     FSR0L_SHAD      equ	4072	;# 
   722     0FE9                     FSR0H_SHAD      equ	4073	;# 
   723     0FEA                     FSR1L_SHAD      equ	4074	;# 
   724     0FEB                     FSR1H_SHAD      equ	4075	;# 
   725     0FED                     STKPTR          equ	4077	;# 
   726     0FEE                     TOSL            equ	4078	;# 
   727     0FEF                     TOSH            equ	4079	;# 
   728     0000                     INDF0           equ	0	;# 
   729     0001                     INDF1           equ	1	;# 
   730     0002                     PCL             equ	2	;# 
   731     0003                     STATUS          equ	3	;# 
   732     0004                     FSR0L           equ	4	;# 
   733     0005                     FSR0H           equ	5	;# 
   734     0006                     FSR1L           equ	6	;# 
   735     0007                     FSR1H           equ	7	;# 
   736     0008                     BSR             equ	8	;# 
   737     0009                     WREG            equ	9	;# 
   738     000A                     PCLATH          equ	10	;# 
   739     000B                     INTCON          equ	11	;# 
   740     000C                     PORTA           equ	12	;# 
   741     000D                     PORTB           equ	13	;# 
   742     000E                     PORTC           equ	14	;# 
   743     0010                     PORTE           equ	16	;# 
   744     0011                     PIR1            equ	17	;# 
   745     0012                     PIR2            equ	18	;# 
   746     0013                     PIR3            equ	19	;# 
   747     0015                     TMR0            equ	21	;# 
   748     0016                     TMR1            equ	22	;# 
   749     0016                     TMR1L           equ	22	;# 
   750     0017                     TMR1H           equ	23	;# 
   751     0018                     T1CON           equ	24	;# 
   752     0019                     T1GCON          equ	25	;# 
   753     001A                     TMR2            equ	26	;# 
   754     001B                     PR2             equ	27	;# 
   755     001C                     T2CON           equ	28	;# 
   756     001E                     CPSCON0         equ	30	;# 
   757     001F                     CPSCON1         equ	31	;# 
   758     008C                     TRISA           equ	140	;# 
   759     008D                     TRISB           equ	141	;# 
   760     008E                     TRISC           equ	142	;# 
   761     0090                     TRISE           equ	144	;# 
   762     0091                     PIE1            equ	145	;# 
   763     0092                     PIE2            equ	146	;# 
   764     0093                     PIE3            equ	147	;# 
   765     0095                     OPTION_REG      equ	149	;# 
   766     0096                     PCON            equ	150	;# 
   767     0097                     WDTCON          equ	151	;# 
   768     0098                     OSCTUNE         equ	152	;# 
   769     0099                     OSCCON          equ	153	;# 
   770     009A                     OSCSTAT         equ	154	;# 
   771     009B                     ADRES           equ	155	;# 
   772     009B                     ADRESL          equ	155	;# 
   773     009C                     ADRESH          equ	156	;# 
   774     009D                     ADCON0          equ	157	;# 
   775     009E                     ADCON1          equ	158	;# 
   776     010C                     LATA            equ	268	;# 
   777     010D                     LATB            equ	269	;# 
   778     010E                     LATC            equ	270	;# 
   779     0110                     LATE            equ	272	;# 
   780     0111                     CM1CON0         equ	273	;# 
   781     0112                     CM1CON1         equ	274	;# 
   782     0113                     CM2CON0         equ	275	;# 
   783     0114                     CM2CON1         equ	276	;# 
   784     0115                     CMOUT           equ	277	;# 
   785     0116                     BORCON          equ	278	;# 
   786     0117                     FVRCON          equ	279	;# 
   787     0118                     DACCON0         equ	280	;# 
   788     0119                     DACCON1         equ	281	;# 
   789     011A                     SRCON0          equ	282	;# 
   790     011B                     SRCON1          equ	283	;# 
   791     011D                     APFCON          equ	285	;# 
   792     018C                     ANSELA          equ	396	;# 
   793     018D                     ANSELB          equ	397	;# 
   794     0191                     EEADR           equ	401	;# 
   795     0191                     EEADRL          equ	401	;# 
   796     0192                     EEADRH          equ	402	;# 
   797     0193                     EEDAT           equ	403	;# 
   798     0193                     EEDATL          equ	403	;# 
   799     0193                     EEDATA          equ	403	;# 
   800     0194                     EEDATH          equ	404	;# 
   801     0195                     EECON1          equ	405	;# 
   802     0196                     EECON2          equ	406	;# 
   803     0199                     RCREG           equ	409	;# 
   804     019A                     TXREG           equ	410	;# 
   805     019B                     SP1BRG          equ	411	;# 
   806     019B                     SP1BRGL         equ	411	;# 
   807     019B                     SPBRG           equ	411	;# 
   808     019B                     SPBRGL          equ	411	;# 
   809     019C                     SP1BRGH         equ	412	;# 
   810     019C                     SPBRGH          equ	412	;# 
   811     019D                     RCSTA           equ	413	;# 
   812     019E                     TXSTA           equ	414	;# 
   813     019F                     BAUDCON         equ	415	;# 
   814     020D                     WPUB            equ	525	;# 
   815     0210                     WPUE            equ	528	;# 
   816     0211                     SSPBUF          equ	529	;# 
   817     0212                     SSPADD          equ	530	;# 
   818     0213                     SSPMSK          equ	531	;# 
   819     0214                     SSPSTAT         equ	532	;# 
   820     0215                     SSPCON1         equ	533	;# 
   821     0215                     SSPCON          equ	533	;# 
   822     0216                     SSPCON2         equ	534	;# 
   823     0217                     SSPCON3         equ	535	;# 
   824     0291                     CCPR1           equ	657	;# 
   825     0291                     CCPR1L          equ	657	;# 
   826     0292                     CCPR1H          equ	658	;# 
   827     0293                     CCP1CON         equ	659	;# 
   828     0294                     PWM1CON         equ	660	;# 
   829     0295                     CCP1AS          equ	661	;# 
   830     0295                     ECCP1AS         equ	661	;# 
   831     0296                     PSTR1CON        equ	662	;# 
   832     0298                     CCPR2           equ	664	;# 
   833     0298                     CCPR2L          equ	664	;# 
   834     0299                     CCPR2H          equ	665	;# 
   835     029A                     CCP2CON         equ	666	;# 
   836     029B                     PWM2CON         equ	667	;# 
   837     029C                     CCP2AS          equ	668	;# 
   838     029C                     ECCP2AS         equ	668	;# 
   839     029D                     PSTR2CON        equ	669	;# 
   840     029E                     CCPTMRS0        equ	670	;# 
   841     029F                     CCPTMRS1        equ	671	;# 
   842     0311                     CCPR3           equ	785	;# 
   843     0311                     CCPR3L          equ	785	;# 
   844     0312                     CCPR3H          equ	786	;# 
   845     0313                     CCP3CON         equ	787	;# 
   846     0314                     PWM3CON         equ	788	;# 
   847     0315                     CCP3AS          equ	789	;# 
   848     0315                     ECCP3AS         equ	789	;# 
   849     0316                     PSTR3CON        equ	790	;# 
   850     0318                     CCPR4           equ	792	;# 
   851     0318                     CCPR4L          equ	792	;# 
   852     0319                     CCPR4H          equ	793	;# 
   853     031A                     CCP4CON         equ	794	;# 
   854     031C                     CCPR5           equ	796	;# 
   855     031C                     CCPR5L          equ	796	;# 
   856     031D                     CCPR5H          equ	797	;# 
   857     031E                     CCP5CON         equ	798	;# 
   858     0394                     IOCBP           equ	916	;# 
   859     0395                     IOCBN           equ	917	;# 
   860     0396                     IOCBF           equ	918	;# 
   861     0415                     TMR4            equ	1045	;# 
   862     0416                     PR4             equ	1046	;# 
   863     0417                     T4CON           equ	1047	;# 
   864     041C                     TMR6            equ	1052	;# 
   865     041D                     PR6             equ	1053	;# 
   866     041E                     T6CON           equ	1054	;# 
   867     0791                     LCDCON          equ	1937	;# 
   868     0792                     LCDPS           equ	1938	;# 
   869     0793                     LCDREF          equ	1939	;# 
   870     0794                     LCDCST          equ	1940	;# 
   871     0795                     LCDRL           equ	1941	;# 
   872     0798                     LCDSE0          equ	1944	;# 
   873     0799                     LCDSE1          equ	1945	;# 
   874     07A0                     LCDDATA0        equ	1952	;# 
   875     07A1                     LCDDATA1        equ	1953	;# 
   876     07A3                     LCDDATA3        equ	1955	;# 
   877     07A4                     LCDDATA4        equ	1956	;# 
   878     07A6                     LCDDATA6        equ	1958	;# 
   879     07A7                     LCDDATA7        equ	1959	;# 
   880     07A9                     LCDDATA9        equ	1961	;# 
   881     07AA                     LCDDATA10       equ	1962	;# 
   882     0FE4                     STATUS_SHAD     equ	4068	;# 
   883     0FE5                     WREG_SHAD       equ	4069	;# 
   884     0FE6                     BSR_SHAD        equ	4070	;# 
   885     0FE7                     PCLATH_SHAD     equ	4071	;# 
   886     0FE8                     FSR0L_SHAD      equ	4072	;# 
   887     0FE9                     FSR0H_SHAD      equ	4073	;# 
   888     0FEA                     FSR1L_SHAD      equ	4074	;# 
   889     0FEB                     FSR1H_SHAD      equ	4075	;# 
   890     0FED                     STKPTR          equ	4077	;# 
   891     0FEE                     TOSL            equ	4078	;# 
   892     0FEF                     TOSH            equ	4079	;# 
   893     0000                     INDF0           equ	0	;# 
   894     0001                     INDF1           equ	1	;# 
   895     0002                     PCL             equ	2	;# 
   896     0003                     STATUS          equ	3	;# 
   897     0004                     FSR0L           equ	4	;# 
   898     0005                     FSR0H           equ	5	;# 
   899     0006                     FSR1L           equ	6	;# 
   900     0007                     FSR1H           equ	7	;# 
   901     0008                     BSR             equ	8	;# 
   902     0009                     WREG            equ	9	;# 
   903     000A                     PCLATH          equ	10	;# 
   904     000B                     INTCON          equ	11	;# 
   905     000C                     PORTA           equ	12	;# 
   906     000D                     PORTB           equ	13	;# 
   907     000E                     PORTC           equ	14	;# 
   908     0010                     PORTE           equ	16	;# 
   909     0011                     PIR1            equ	17	;# 
   910     0012                     PIR2            equ	18	;# 
   911     0013                     PIR3            equ	19	;# 
   912     0015                     TMR0            equ	21	;# 
   913     0016                     TMR1            equ	22	;# 
   914     0016                     TMR1L           equ	22	;# 
   915     0017                     TMR1H           equ	23	;# 
   916     0018                     T1CON           equ	24	;# 
   917     0019                     T1GCON          equ	25	;# 
   918     001A                     TMR2            equ	26	;# 
   919     001B                     PR2             equ	27	;# 
   920     001C                     T2CON           equ	28	;# 
   921     001E                     CPSCON0         equ	30	;# 
   922     001F                     CPSCON1         equ	31	;# 
   923     008C                     TRISA           equ	140	;# 
   924     008D                     TRISB           equ	141	;# 
   925     008E                     TRISC           equ	142	;# 
   926     0090                     TRISE           equ	144	;# 
   927     0091                     PIE1            equ	145	;# 
   928     0092                     PIE2            equ	146	;# 
   929     0093                     PIE3            equ	147	;# 
   930     0095                     OPTION_REG      equ	149	;# 
   931     0096                     PCON            equ	150	;# 
   932     0097                     WDTCON          equ	151	;# 
   933     0098                     OSCTUNE         equ	152	;# 
   934     0099                     OSCCON          equ	153	;# 
   935     009A                     OSCSTAT         equ	154	;# 
   936     009B                     ADRES           equ	155	;# 
   937     009B                     ADRESL          equ	155	;# 
   938     009C                     ADRESH          equ	156	;# 
   939     009D                     ADCON0          equ	157	;# 
   940     009E                     ADCON1          equ	158	;# 
   941     010C                     LATA            equ	268	;# 
   942     010D                     LATB            equ	269	;# 
   943     010E                     LATC            equ	270	;# 
   944     0110                     LATE            equ	272	;# 
   945     0111                     CM1CON0         equ	273	;# 
   946     0112                     CM1CON1         equ	274	;# 
   947     0113                     CM2CON0         equ	275	;# 
   948     0114                     CM2CON1         equ	276	;# 
   949     0115                     CMOUT           equ	277	;# 
   950     0116                     BORCON          equ	278	;# 
   951     0117                     FVRCON          equ	279	;# 
   952     0118                     DACCON0         equ	280	;# 
   953     0119                     DACCON1         equ	281	;# 
   954     011A                     SRCON0          equ	282	;# 
   955     011B                     SRCON1          equ	283	;# 
   956     011D                     APFCON          equ	285	;# 
   957     018C                     ANSELA          equ	396	;# 
   958     018D                     ANSELB          equ	397	;# 
   959     0191                     EEADR           equ	401	;# 
   960     0191                     EEADRL          equ	401	;# 
   961     0192                     EEADRH          equ	402	;# 
   962     0193                     EEDAT           equ	403	;# 
   963     0193                     EEDATL          equ	403	;# 
   964     0193                     EEDATA          equ	403	;# 
   965     0194                     EEDATH          equ	404	;# 
   966     0195                     EECON1          equ	405	;# 
   967     0196                     EECON2          equ	406	;# 
   968     0199                     RCREG           equ	409	;# 
   969     019A                     TXREG           equ	410	;# 
   970     019B                     SP1BRG          equ	411	;# 
   971     019B                     SP1BRGL         equ	411	;# 
   972     019B                     SPBRG           equ	411	;# 
   973     019B                     SPBRGL          equ	411	;# 
   974     019C                     SP1BRGH         equ	412	;# 
   975     019C                     SPBRGH          equ	412	;# 
   976     019D                     RCSTA           equ	413	;# 
   977     019E                     TXSTA           equ	414	;# 
   978     019F                     BAUDCON         equ	415	;# 
   979     020D                     WPUB            equ	525	;# 
   980     0210                     WPUE            equ	528	;# 
   981     0211                     SSPBUF          equ	529	;# 
   982     0212                     SSPADD          equ	530	;# 
   983     0213                     SSPMSK          equ	531	;# 
   984     0214                     SSPSTAT         equ	532	;# 
   985     0215                     SSPCON1         equ	533	;# 
   986     0215                     SSPCON          equ	533	;# 
   987     0216                     SSPCON2         equ	534	;# 
   988     0217                     SSPCON3         equ	535	;# 
   989     0291                     CCPR1           equ	657	;# 
   990     0291                     CCPR1L          equ	657	;# 
   991     0292                     CCPR1H          equ	658	;# 
   992     0293                     CCP1CON         equ	659	;# 
   993     0294                     PWM1CON         equ	660	;# 
   994     0295                     CCP1AS          equ	661	;# 
   995     0295                     ECCP1AS         equ	661	;# 
   996     0296                     PSTR1CON        equ	662	;# 
   997     0298                     CCPR2           equ	664	;# 
   998     0298                     CCPR2L          equ	664	;# 
   999     0299                     CCPR2H          equ	665	;# 
  1000     029A                     CCP2CON         equ	666	;# 
  1001     029B                     PWM2CON         equ	667	;# 
  1002     029C                     CCP2AS          equ	668	;# 
  1003     029C                     ECCP2AS         equ	668	;# 
  1004     029D                     PSTR2CON        equ	669	;# 
  1005     029E                     CCPTMRS0        equ	670	;# 
  1006     029F                     CCPTMRS1        equ	671	;# 
  1007     0311                     CCPR3           equ	785	;# 
  1008     0311                     CCPR3L          equ	785	;# 
  1009     0312                     CCPR3H          equ	786	;# 
  1010     0313                     CCP3CON         equ	787	;# 
  1011     0314                     PWM3CON         equ	788	;# 
  1012     0315                     CCP3AS          equ	789	;# 
  1013     0315                     ECCP3AS         equ	789	;# 
  1014     0316                     PSTR3CON        equ	790	;# 
  1015     0318                     CCPR4           equ	792	;# 
  1016     0318                     CCPR4L          equ	792	;# 
  1017     0319                     CCPR4H          equ	793	;# 
  1018     031A                     CCP4CON         equ	794	;# 
  1019     031C                     CCPR5           equ	796	;# 
  1020     031C                     CCPR5L          equ	796	;# 
  1021     031D                     CCPR5H          equ	797	;# 
  1022     031E                     CCP5CON         equ	798	;# 
  1023     0394                     IOCBP           equ	916	;# 
  1024     0395                     IOCBN           equ	917	;# 
  1025     0396                     IOCBF           equ	918	;# 
  1026     0415                     TMR4            equ	1045	;# 
  1027     0416                     PR4             equ	1046	;# 
  1028     0417                     T4CON           equ	1047	;# 
  1029     041C                     TMR6            equ	1052	;# 
  1030     041D                     PR6             equ	1053	;# 
  1031     041E                     T6CON           equ	1054	;# 
  1032     0791                     LCDCON          equ	1937	;# 
  1033     0792                     LCDPS           equ	1938	;# 
  1034     0793                     LCDREF          equ	1939	;# 
  1035     0794                     LCDCST          equ	1940	;# 
  1036     0795                     LCDRL           equ	1941	;# 
  1037     0798                     LCDSE0          equ	1944	;# 
  1038     0799                     LCDSE1          equ	1945	;# 
  1039     07A0                     LCDDATA0        equ	1952	;# 
  1040     07A1                     LCDDATA1        equ	1953	;# 
  1041     07A3                     LCDDATA3        equ	1955	;# 
  1042     07A4                     LCDDATA4        equ	1956	;# 
  1043     07A6                     LCDDATA6        equ	1958	;# 
  1044     07A7                     LCDDATA7        equ	1959	;# 
  1045     07A9                     LCDDATA9        equ	1961	;# 
  1046     07AA                     LCDDATA10       equ	1962	;# 
  1047     0FE4                     STATUS_SHAD     equ	4068	;# 
  1048     0FE5                     WREG_SHAD       equ	4069	;# 
  1049     0FE6                     BSR_SHAD        equ	4070	;# 
  1050     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1051     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1052     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1053     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1054     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1055     0FED                     STKPTR          equ	4077	;# 
  1056     0FEE                     TOSL            equ	4078	;# 
  1057     0FEF                     TOSH            equ	4079	;# 
  1058     0000                     INDF0           equ	0	;# 
  1059     0001                     INDF1           equ	1	;# 
  1060     0002                     PCL             equ	2	;# 
  1061     0003                     STATUS          equ	3	;# 
  1062     0004                     FSR0L           equ	4	;# 
  1063     0005                     FSR0H           equ	5	;# 
  1064     0006                     FSR1L           equ	6	;# 
  1065     0007                     FSR1H           equ	7	;# 
  1066     0008                     BSR             equ	8	;# 
  1067     0009                     WREG            equ	9	;# 
  1068     000A                     PCLATH          equ	10	;# 
  1069     000B                     INTCON          equ	11	;# 
  1070     000C                     PORTA           equ	12	;# 
  1071     000D                     PORTB           equ	13	;# 
  1072     000E                     PORTC           equ	14	;# 
  1073     0010                     PORTE           equ	16	;# 
  1074     0011                     PIR1            equ	17	;# 
  1075     0012                     PIR2            equ	18	;# 
  1076     0013                     PIR3            equ	19	;# 
  1077     0015                     TMR0            equ	21	;# 
  1078     0016                     TMR1            equ	22	;# 
  1079     0016                     TMR1L           equ	22	;# 
  1080     0017                     TMR1H           equ	23	;# 
  1081     0018                     T1CON           equ	24	;# 
  1082     0019                     T1GCON          equ	25	;# 
  1083     001A                     TMR2            equ	26	;# 
  1084     001B                     PR2             equ	27	;# 
  1085     001C                     T2CON           equ	28	;# 
  1086     001E                     CPSCON0         equ	30	;# 
  1087     001F                     CPSCON1         equ	31	;# 
  1088     008C                     TRISA           equ	140	;# 
  1089     008D                     TRISB           equ	141	;# 
  1090     008E                     TRISC           equ	142	;# 
  1091     0090                     TRISE           equ	144	;# 
  1092     0091                     PIE1            equ	145	;# 
  1093     0092                     PIE2            equ	146	;# 
  1094     0093                     PIE3            equ	147	;# 
  1095     0095                     OPTION_REG      equ	149	;# 
  1096     0096                     PCON            equ	150	;# 
  1097     0097                     WDTCON          equ	151	;# 
  1098     0098                     OSCTUNE         equ	152	;# 
  1099     0099                     OSCCON          equ	153	;# 
  1100     009A                     OSCSTAT         equ	154	;# 
  1101     009B                     ADRES           equ	155	;# 
  1102     009B                     ADRESL          equ	155	;# 
  1103     009C                     ADRESH          equ	156	;# 
  1104     009D                     ADCON0          equ	157	;# 
  1105     009E                     ADCON1          equ	158	;# 
  1106     010C                     LATA            equ	268	;# 
  1107     010D                     LATB            equ	269	;# 
  1108     010E                     LATC            equ	270	;# 
  1109     0110                     LATE            equ	272	;# 
  1110     0111                     CM1CON0         equ	273	;# 
  1111     0112                     CM1CON1         equ	274	;# 
  1112     0113                     CM2CON0         equ	275	;# 
  1113     0114                     CM2CON1         equ	276	;# 
  1114     0115                     CMOUT           equ	277	;# 
  1115     0116                     BORCON          equ	278	;# 
  1116     0117                     FVRCON          equ	279	;# 
  1117     0118                     DACCON0         equ	280	;# 
  1118     0119                     DACCON1         equ	281	;# 
  1119     011A                     SRCON0          equ	282	;# 
  1120     011B                     SRCON1          equ	283	;# 
  1121     011D                     APFCON          equ	285	;# 
  1122     018C                     ANSELA          equ	396	;# 
  1123     018D                     ANSELB          equ	397	;# 
  1124     0191                     EEADR           equ	401	;# 
  1125     0191                     EEADRL          equ	401	;# 
  1126     0192                     EEADRH          equ	402	;# 
  1127     0193                     EEDAT           equ	403	;# 
  1128     0193                     EEDATL          equ	403	;# 
  1129     0193                     EEDATA          equ	403	;# 
  1130     0194                     EEDATH          equ	404	;# 
  1131     0195                     EECON1          equ	405	;# 
  1132     0196                     EECON2          equ	406	;# 
  1133     0199                     RCREG           equ	409	;# 
  1134     019A                     TXREG           equ	410	;# 
  1135     019B                     SP1BRG          equ	411	;# 
  1136     019B                     SP1BRGL         equ	411	;# 
  1137     019B                     SPBRG           equ	411	;# 
  1138     019B                     SPBRGL          equ	411	;# 
  1139     019C                     SP1BRGH         equ	412	;# 
  1140     019C                     SPBRGH          equ	412	;# 
  1141     019D                     RCSTA           equ	413	;# 
  1142     019E                     TXSTA           equ	414	;# 
  1143     019F                     BAUDCON         equ	415	;# 
  1144     020D                     WPUB            equ	525	;# 
  1145     0210                     WPUE            equ	528	;# 
  1146     0211                     SSPBUF          equ	529	;# 
  1147     0212                     SSPADD          equ	530	;# 
  1148     0213                     SSPMSK          equ	531	;# 
  1149     0214                     SSPSTAT         equ	532	;# 
  1150     0215                     SSPCON1         equ	533	;# 
  1151     0215                     SSPCON          equ	533	;# 
  1152     0216                     SSPCON2         equ	534	;# 
  1153     0217                     SSPCON3         equ	535	;# 
  1154     0291                     CCPR1           equ	657	;# 
  1155     0291                     CCPR1L          equ	657	;# 
  1156     0292                     CCPR1H          equ	658	;# 
  1157     0293                     CCP1CON         equ	659	;# 
  1158     0294                     PWM1CON         equ	660	;# 
  1159     0295                     CCP1AS          equ	661	;# 
  1160     0295                     ECCP1AS         equ	661	;# 
  1161     0296                     PSTR1CON        equ	662	;# 
  1162     0298                     CCPR2           equ	664	;# 
  1163     0298                     CCPR2L          equ	664	;# 
  1164     0299                     CCPR2H          equ	665	;# 
  1165     029A                     CCP2CON         equ	666	;# 
  1166     029B                     PWM2CON         equ	667	;# 
  1167     029C                     CCP2AS          equ	668	;# 
  1168     029C                     ECCP2AS         equ	668	;# 
  1169     029D                     PSTR2CON        equ	669	;# 
  1170     029E                     CCPTMRS0        equ	670	;# 
  1171     029F                     CCPTMRS1        equ	671	;# 
  1172     0311                     CCPR3           equ	785	;# 
  1173     0311                     CCPR3L          equ	785	;# 
  1174     0312                     CCPR3H          equ	786	;# 
  1175     0313                     CCP3CON         equ	787	;# 
  1176     0314                     PWM3CON         equ	788	;# 
  1177     0315                     CCP3AS          equ	789	;# 
  1178     0315                     ECCP3AS         equ	789	;# 
  1179     0316                     PSTR3CON        equ	790	;# 
  1180     0318                     CCPR4           equ	792	;# 
  1181     0318                     CCPR4L          equ	792	;# 
  1182     0319                     CCPR4H          equ	793	;# 
  1183     031A                     CCP4CON         equ	794	;# 
  1184     031C                     CCPR5           equ	796	;# 
  1185     031C                     CCPR5L          equ	796	;# 
  1186     031D                     CCPR5H          equ	797	;# 
  1187     031E                     CCP5CON         equ	798	;# 
  1188     0394                     IOCBP           equ	916	;# 
  1189     0395                     IOCBN           equ	917	;# 
  1190     0396                     IOCBF           equ	918	;# 
  1191     0415                     TMR4            equ	1045	;# 
  1192     0416                     PR4             equ	1046	;# 
  1193     0417                     T4CON           equ	1047	;# 
  1194     041C                     TMR6            equ	1052	;# 
  1195     041D                     PR6             equ	1053	;# 
  1196     041E                     T6CON           equ	1054	;# 
  1197     0791                     LCDCON          equ	1937	;# 
  1198     0792                     LCDPS           equ	1938	;# 
  1199     0793                     LCDREF          equ	1939	;# 
  1200     0794                     LCDCST          equ	1940	;# 
  1201     0795                     LCDRL           equ	1941	;# 
  1202     0798                     LCDSE0          equ	1944	;# 
  1203     0799                     LCDSE1          equ	1945	;# 
  1204     07A0                     LCDDATA0        equ	1952	;# 
  1205     07A1                     LCDDATA1        equ	1953	;# 
  1206     07A3                     LCDDATA3        equ	1955	;# 
  1207     07A4                     LCDDATA4        equ	1956	;# 
  1208     07A6                     LCDDATA6        equ	1958	;# 
  1209     07A7                     LCDDATA7        equ	1959	;# 
  1210     07A9                     LCDDATA9        equ	1961	;# 
  1211     07AA                     LCDDATA10       equ	1962	;# 
  1212     0FE4                     STATUS_SHAD     equ	4068	;# 
  1213     0FE5                     WREG_SHAD       equ	4069	;# 
  1214     0FE6                     BSR_SHAD        equ	4070	;# 
  1215     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1216     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1217     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1218     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1219     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1220     0FED                     STKPTR          equ	4077	;# 
  1221     0FEE                     TOSL            equ	4078	;# 
  1222     0FEF                     TOSH            equ	4079	;# 
  1223     0000                     INDF0           equ	0	;# 
  1224     0001                     INDF1           equ	1	;# 
  1225     0002                     PCL             equ	2	;# 
  1226     0003                     STATUS          equ	3	;# 
  1227     0004                     FSR0L           equ	4	;# 
  1228     0005                     FSR0H           equ	5	;# 
  1229     0006                     FSR1L           equ	6	;# 
  1230     0007                     FSR1H           equ	7	;# 
  1231     0008                     BSR             equ	8	;# 
  1232     0009                     WREG            equ	9	;# 
  1233     000A                     PCLATH          equ	10	;# 
  1234     000B                     INTCON          equ	11	;# 
  1235     000C                     PORTA           equ	12	;# 
  1236     000D                     PORTB           equ	13	;# 
  1237     000E                     PORTC           equ	14	;# 
  1238     0010                     PORTE           equ	16	;# 
  1239     0011                     PIR1            equ	17	;# 
  1240     0012                     PIR2            equ	18	;# 
  1241     0013                     PIR3            equ	19	;# 
  1242     0015                     TMR0            equ	21	;# 
  1243     0016                     TMR1            equ	22	;# 
  1244     0016                     TMR1L           equ	22	;# 
  1245     0017                     TMR1H           equ	23	;# 
  1246     0018                     T1CON           equ	24	;# 
  1247     0019                     T1GCON          equ	25	;# 
  1248     001A                     TMR2            equ	26	;# 
  1249     001B                     PR2             equ	27	;# 
  1250     001C                     T2CON           equ	28	;# 
  1251     001E                     CPSCON0         equ	30	;# 
  1252     001F                     CPSCON1         equ	31	;# 
  1253     008C                     TRISA           equ	140	;# 
  1254     008D                     TRISB           equ	141	;# 
  1255     008E                     TRISC           equ	142	;# 
  1256     0090                     TRISE           equ	144	;# 
  1257     0091                     PIE1            equ	145	;# 
  1258     0092                     PIE2            equ	146	;# 
  1259     0093                     PIE3            equ	147	;# 
  1260     0095                     OPTION_REG      equ	149	;# 
  1261     0096                     PCON            equ	150	;# 
  1262     0097                     WDTCON          equ	151	;# 
  1263     0098                     OSCTUNE         equ	152	;# 
  1264     0099                     OSCCON          equ	153	;# 
  1265     009A                     OSCSTAT         equ	154	;# 
  1266     009B                     ADRES           equ	155	;# 
  1267     009B                     ADRESL          equ	155	;# 
  1268     009C                     ADRESH          equ	156	;# 
  1269     009D                     ADCON0          equ	157	;# 
  1270     009E                     ADCON1          equ	158	;# 
  1271     010C                     LATA            equ	268	;# 
  1272     010D                     LATB            equ	269	;# 
  1273     010E                     LATC            equ	270	;# 
  1274     0110                     LATE            equ	272	;# 
  1275     0111                     CM1CON0         equ	273	;# 
  1276     0112                     CM1CON1         equ	274	;# 
  1277     0113                     CM2CON0         equ	275	;# 
  1278     0114                     CM2CON1         equ	276	;# 
  1279     0115                     CMOUT           equ	277	;# 
  1280     0116                     BORCON          equ	278	;# 
  1281     0117                     FVRCON          equ	279	;# 
  1282     0118                     DACCON0         equ	280	;# 
  1283     0119                     DACCON1         equ	281	;# 
  1284     011A                     SRCON0          equ	282	;# 
  1285     011B                     SRCON1          equ	283	;# 
  1286     011D                     APFCON          equ	285	;# 
  1287     018C                     ANSELA          equ	396	;# 
  1288     018D                     ANSELB          equ	397	;# 
  1289     0191                     EEADR           equ	401	;# 
  1290     0191                     EEADRL          equ	401	;# 
  1291     0192                     EEADRH          equ	402	;# 
  1292     0193                     EEDAT           equ	403	;# 
  1293     0193                     EEDATL          equ	403	;# 
  1294     0193                     EEDATA          equ	403	;# 
  1295     0194                     EEDATH          equ	404	;# 
  1296     0195                     EECON1          equ	405	;# 
  1297     0196                     EECON2          equ	406	;# 
  1298     0199                     RCREG           equ	409	;# 
  1299     019A                     TXREG           equ	410	;# 
  1300     019B                     SP1BRG          equ	411	;# 
  1301     019B                     SP1BRGL         equ	411	;# 
  1302     019B                     SPBRG           equ	411	;# 
  1303     019B                     SPBRGL          equ	411	;# 
  1304     019C                     SP1BRGH         equ	412	;# 
  1305     019C                     SPBRGH          equ	412	;# 
  1306     019D                     RCSTA           equ	413	;# 
  1307     019E                     TXSTA           equ	414	;# 
  1308     019F                     BAUDCON         equ	415	;# 
  1309     020D                     WPUB            equ	525	;# 
  1310     0210                     WPUE            equ	528	;# 
  1311     0211                     SSPBUF          equ	529	;# 
  1312     0212                     SSPADD          equ	530	;# 
  1313     0213                     SSPMSK          equ	531	;# 
  1314     0214                     SSPSTAT         equ	532	;# 
  1315     0215                     SSPCON1         equ	533	;# 
  1316     0215                     SSPCON          equ	533	;# 
  1317     0216                     SSPCON2         equ	534	;# 
  1318     0217                     SSPCON3         equ	535	;# 
  1319     0291                     CCPR1           equ	657	;# 
  1320     0291                     CCPR1L          equ	657	;# 
  1321     0292                     CCPR1H          equ	658	;# 
  1322     0293                     CCP1CON         equ	659	;# 
  1323     0294                     PWM1CON         equ	660	;# 
  1324     0295                     CCP1AS          equ	661	;# 
  1325     0295                     ECCP1AS         equ	661	;# 
  1326     0296                     PSTR1CON        equ	662	;# 
  1327     0298                     CCPR2           equ	664	;# 
  1328     0298                     CCPR2L          equ	664	;# 
  1329     0299                     CCPR2H          equ	665	;# 
  1330     029A                     CCP2CON         equ	666	;# 
  1331     029B                     PWM2CON         equ	667	;# 
  1332     029C                     CCP2AS          equ	668	;# 
  1333     029C                     ECCP2AS         equ	668	;# 
  1334     029D                     PSTR2CON        equ	669	;# 
  1335     029E                     CCPTMRS0        equ	670	;# 
  1336     029F                     CCPTMRS1        equ	671	;# 
  1337     0311                     CCPR3           equ	785	;# 
  1338     0311                     CCPR3L          equ	785	;# 
  1339     0312                     CCPR3H          equ	786	;# 
  1340     0313                     CCP3CON         equ	787	;# 
  1341     0314                     PWM3CON         equ	788	;# 
  1342     0315                     CCP3AS          equ	789	;# 
  1343     0315                     ECCP3AS         equ	789	;# 
  1344     0316                     PSTR3CON        equ	790	;# 
  1345     0318                     CCPR4           equ	792	;# 
  1346     0318                     CCPR4L          equ	792	;# 
  1347     0319                     CCPR4H          equ	793	;# 
  1348     031A                     CCP4CON         equ	794	;# 
  1349     031C                     CCPR5           equ	796	;# 
  1350     031C                     CCPR5L          equ	796	;# 
  1351     031D                     CCPR5H          equ	797	;# 
  1352     031E                     CCP5CON         equ	798	;# 
  1353     0394                     IOCBP           equ	916	;# 
  1354     0395                     IOCBN           equ	917	;# 
  1355     0396                     IOCBF           equ	918	;# 
  1356     0415                     TMR4            equ	1045	;# 
  1357     0416                     PR4             equ	1046	;# 
  1358     0417                     T4CON           equ	1047	;# 
  1359     041C                     TMR6            equ	1052	;# 
  1360     041D                     PR6             equ	1053	;# 
  1361     041E                     T6CON           equ	1054	;# 
  1362     0791                     LCDCON          equ	1937	;# 
  1363     0792                     LCDPS           equ	1938	;# 
  1364     0793                     LCDREF          equ	1939	;# 
  1365     0794                     LCDCST          equ	1940	;# 
  1366     0795                     LCDRL           equ	1941	;# 
  1367     0798                     LCDSE0          equ	1944	;# 
  1368     0799                     LCDSE1          equ	1945	;# 
  1369     07A0                     LCDDATA0        equ	1952	;# 
  1370     07A1                     LCDDATA1        equ	1953	;# 
  1371     07A3                     LCDDATA3        equ	1955	;# 
  1372     07A4                     LCDDATA4        equ	1956	;# 
  1373     07A6                     LCDDATA6        equ	1958	;# 
  1374     07A7                     LCDDATA7        equ	1959	;# 
  1375     07A9                     LCDDATA9        equ	1961	;# 
  1376     07AA                     LCDDATA10       equ	1962	;# 
  1377     0FE4                     STATUS_SHAD     equ	4068	;# 
  1378     0FE5                     WREG_SHAD       equ	4069	;# 
  1379     0FE6                     BSR_SHAD        equ	4070	;# 
  1380     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1381     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1382     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1383     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1384     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1385     0FED                     STKPTR          equ	4077	;# 
  1386     0FEE                     TOSL            equ	4078	;# 
  1387     0FEF                     TOSH            equ	4079	;# 
  1388     0000                     INDF0           equ	0	;# 
  1389     0001                     INDF1           equ	1	;# 
  1390     0002                     PCL             equ	2	;# 
  1391     0003                     STATUS          equ	3	;# 
  1392     0004                     FSR0L           equ	4	;# 
  1393     0005                     FSR0H           equ	5	;# 
  1394     0006                     FSR1L           equ	6	;# 
  1395     0007                     FSR1H           equ	7	;# 
  1396     0008                     BSR             equ	8	;# 
  1397     0009                     WREG            equ	9	;# 
  1398     000A                     PCLATH          equ	10	;# 
  1399     000B                     INTCON          equ	11	;# 
  1400     000C                     PORTA           equ	12	;# 
  1401     000D                     PORTB           equ	13	;# 
  1402     000E                     PORTC           equ	14	;# 
  1403     0010                     PORTE           equ	16	;# 
  1404     0011                     PIR1            equ	17	;# 
  1405     0012                     PIR2            equ	18	;# 
  1406     0013                     PIR3            equ	19	;# 
  1407     0015                     TMR0            equ	21	;# 
  1408     0016                     TMR1            equ	22	;# 
  1409     0016                     TMR1L           equ	22	;# 
  1410     0017                     TMR1H           equ	23	;# 
  1411     0018                     T1CON           equ	24	;# 
  1412     0019                     T1GCON          equ	25	;# 
  1413     001A                     TMR2            equ	26	;# 
  1414     001B                     PR2             equ	27	;# 
  1415     001C                     T2CON           equ	28	;# 
  1416     001E                     CPSCON0         equ	30	;# 
  1417     001F                     CPSCON1         equ	31	;# 
  1418     008C                     TRISA           equ	140	;# 
  1419     008D                     TRISB           equ	141	;# 
  1420     008E                     TRISC           equ	142	;# 
  1421     0090                     TRISE           equ	144	;# 
  1422     0091                     PIE1            equ	145	;# 
  1423     0092                     PIE2            equ	146	;# 
  1424     0093                     PIE3            equ	147	;# 
  1425     0095                     OPTION_REG      equ	149	;# 
  1426     0096                     PCON            equ	150	;# 
  1427     0097                     WDTCON          equ	151	;# 
  1428     0098                     OSCTUNE         equ	152	;# 
  1429     0099                     OSCCON          equ	153	;# 
  1430     009A                     OSCSTAT         equ	154	;# 
  1431     009B                     ADRES           equ	155	;# 
  1432     009B                     ADRESL          equ	155	;# 
  1433     009C                     ADRESH          equ	156	;# 
  1434     009D                     ADCON0          equ	157	;# 
  1435     009E                     ADCON1          equ	158	;# 
  1436     010C                     LATA            equ	268	;# 
  1437     010D                     LATB            equ	269	;# 
  1438     010E                     LATC            equ	270	;# 
  1439     0110                     LATE            equ	272	;# 
  1440     0111                     CM1CON0         equ	273	;# 
  1441     0112                     CM1CON1         equ	274	;# 
  1442     0113                     CM2CON0         equ	275	;# 
  1443     0114                     CM2CON1         equ	276	;# 
  1444     0115                     CMOUT           equ	277	;# 
  1445     0116                     BORCON          equ	278	;# 
  1446     0117                     FVRCON          equ	279	;# 
  1447     0118                     DACCON0         equ	280	;# 
  1448     0119                     DACCON1         equ	281	;# 
  1449     011A                     SRCON0          equ	282	;# 
  1450     011B                     SRCON1          equ	283	;# 
  1451     011D                     APFCON          equ	285	;# 
  1452     018C                     ANSELA          equ	396	;# 
  1453     018D                     ANSELB          equ	397	;# 
  1454     0191                     EEADR           equ	401	;# 
  1455     0191                     EEADRL          equ	401	;# 
  1456     0192                     EEADRH          equ	402	;# 
  1457     0193                     EEDAT           equ	403	;# 
  1458     0193                     EEDATL          equ	403	;# 
  1459     0193                     EEDATA          equ	403	;# 
  1460     0194                     EEDATH          equ	404	;# 
  1461     0195                     EECON1          equ	405	;# 
  1462     0196                     EECON2          equ	406	;# 
  1463     0199                     RCREG           equ	409	;# 
  1464     019A                     TXREG           equ	410	;# 
  1465     019B                     SP1BRG          equ	411	;# 
  1466     019B                     SP1BRGL         equ	411	;# 
  1467     019B                     SPBRG           equ	411	;# 
  1468     019B                     SPBRGL          equ	411	;# 
  1469     019C                     SP1BRGH         equ	412	;# 
  1470     019C                     SPBRGH          equ	412	;# 
  1471     019D                     RCSTA           equ	413	;# 
  1472     019E                     TXSTA           equ	414	;# 
  1473     019F                     BAUDCON         equ	415	;# 
  1474     020D                     WPUB            equ	525	;# 
  1475     0210                     WPUE            equ	528	;# 
  1476     0211                     SSPBUF          equ	529	;# 
  1477     0212                     SSPADD          equ	530	;# 
  1478     0213                     SSPMSK          equ	531	;# 
  1479     0214                     SSPSTAT         equ	532	;# 
  1480     0215                     SSPCON1         equ	533	;# 
  1481     0215                     SSPCON          equ	533	;# 
  1482     0216                     SSPCON2         equ	534	;# 
  1483     0217                     SSPCON3         equ	535	;# 
  1484     0291                     CCPR1           equ	657	;# 
  1485     0291                     CCPR1L          equ	657	;# 
  1486     0292                     CCPR1H          equ	658	;# 
  1487     0293                     CCP1CON         equ	659	;# 
  1488     0294                     PWM1CON         equ	660	;# 
  1489     0295                     CCP1AS          equ	661	;# 
  1490     0295                     ECCP1AS         equ	661	;# 
  1491     0296                     PSTR1CON        equ	662	;# 
  1492     0298                     CCPR2           equ	664	;# 
  1493     0298                     CCPR2L          equ	664	;# 
  1494     0299                     CCPR2H          equ	665	;# 
  1495     029A                     CCP2CON         equ	666	;# 
  1496     029B                     PWM2CON         equ	667	;# 
  1497     029C                     CCP2AS          equ	668	;# 
  1498     029C                     ECCP2AS         equ	668	;# 
  1499     029D                     PSTR2CON        equ	669	;# 
  1500     029E                     CCPTMRS0        equ	670	;# 
  1501     029F                     CCPTMRS1        equ	671	;# 
  1502     0311                     CCPR3           equ	785	;# 
  1503     0311                     CCPR3L          equ	785	;# 
  1504     0312                     CCPR3H          equ	786	;# 
  1505     0313                     CCP3CON         equ	787	;# 
  1506     0314                     PWM3CON         equ	788	;# 
  1507     0315                     CCP3AS          equ	789	;# 
  1508     0315                     ECCP3AS         equ	789	;# 
  1509     0316                     PSTR3CON        equ	790	;# 
  1510     0318                     CCPR4           equ	792	;# 
  1511     0318                     CCPR4L          equ	792	;# 
  1512     0319                     CCPR4H          equ	793	;# 
  1513     031A                     CCP4CON         equ	794	;# 
  1514     031C                     CCPR5           equ	796	;# 
  1515     031C                     CCPR5L          equ	796	;# 
  1516     031D                     CCPR5H          equ	797	;# 
  1517     031E                     CCP5CON         equ	798	;# 
  1518     0394                     IOCBP           equ	916	;# 
  1519     0395                     IOCBN           equ	917	;# 
  1520     0396                     IOCBF           equ	918	;# 
  1521     0415                     TMR4            equ	1045	;# 
  1522     0416                     PR4             equ	1046	;# 
  1523     0417                     T4CON           equ	1047	;# 
  1524     041C                     TMR6            equ	1052	;# 
  1525     041D                     PR6             equ	1053	;# 
  1526     041E                     T6CON           equ	1054	;# 
  1527     0791                     LCDCON          equ	1937	;# 
  1528     0792                     LCDPS           equ	1938	;# 
  1529     0793                     LCDREF          equ	1939	;# 
  1530     0794                     LCDCST          equ	1940	;# 
  1531     0795                     LCDRL           equ	1941	;# 
  1532     0798                     LCDSE0          equ	1944	;# 
  1533     0799                     LCDSE1          equ	1945	;# 
  1534     07A0                     LCDDATA0        equ	1952	;# 
  1535     07A1                     LCDDATA1        equ	1953	;# 
  1536     07A3                     LCDDATA3        equ	1955	;# 
  1537     07A4                     LCDDATA4        equ	1956	;# 
  1538     07A6                     LCDDATA6        equ	1958	;# 
  1539     07A7                     LCDDATA7        equ	1959	;# 
  1540     07A9                     LCDDATA9        equ	1961	;# 
  1541     07AA                     LCDDATA10       equ	1962	;# 
  1542     0FE4                     STATUS_SHAD     equ	4068	;# 
  1543     0FE5                     WREG_SHAD       equ	4069	;# 
  1544     0FE6                     BSR_SHAD        equ	4070	;# 
  1545     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1546     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1547     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1548     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1549     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1550     0FED                     STKPTR          equ	4077	;# 
  1551     0FEE                     TOSL            equ	4078	;# 
  1552     0FEF                     TOSH            equ	4079	;# 
  1553     0000                     INDF0           equ	0	;# 
  1554     0001                     INDF1           equ	1	;# 
  1555     0002                     PCL             equ	2	;# 
  1556     0003                     STATUS          equ	3	;# 
  1557     0004                     FSR0L           equ	4	;# 
  1558     0005                     FSR0H           equ	5	;# 
  1559     0006                     FSR1L           equ	6	;# 
  1560     0007                     FSR1H           equ	7	;# 
  1561     0008                     BSR             equ	8	;# 
  1562     0009                     WREG            equ	9	;# 
  1563     000A                     PCLATH          equ	10	;# 
  1564     000B                     INTCON          equ	11	;# 
  1565     000C                     PORTA           equ	12	;# 
  1566     000D                     PORTB           equ	13	;# 
  1567     000E                     PORTC           equ	14	;# 
  1568     0010                     PORTE           equ	16	;# 
  1569     0011                     PIR1            equ	17	;# 
  1570     0012                     PIR2            equ	18	;# 
  1571     0013                     PIR3            equ	19	;# 
  1572     0015                     TMR0            equ	21	;# 
  1573     0016                     TMR1            equ	22	;# 
  1574     0016                     TMR1L           equ	22	;# 
  1575     0017                     TMR1H           equ	23	;# 
  1576     0018                     T1CON           equ	24	;# 
  1577     0019                     T1GCON          equ	25	;# 
  1578     001A                     TMR2            equ	26	;# 
  1579     001B                     PR2             equ	27	;# 
  1580     001C                     T2CON           equ	28	;# 
  1581     001E                     CPSCON0         equ	30	;# 
  1582     001F                     CPSCON1         equ	31	;# 
  1583     008C                     TRISA           equ	140	;# 
  1584     008D                     TRISB           equ	141	;# 
  1585     008E                     TRISC           equ	142	;# 
  1586     0090                     TRISE           equ	144	;# 
  1587     0091                     PIE1            equ	145	;# 
  1588     0092                     PIE2            equ	146	;# 
  1589     0093                     PIE3            equ	147	;# 
  1590     0095                     OPTION_REG      equ	149	;# 
  1591     0096                     PCON            equ	150	;# 
  1592     0097                     WDTCON          equ	151	;# 
  1593     0098                     OSCTUNE         equ	152	;# 
  1594     0099                     OSCCON          equ	153	;# 
  1595     009A                     OSCSTAT         equ	154	;# 
  1596     009B                     ADRES           equ	155	;# 
  1597     009B                     ADRESL          equ	155	;# 
  1598     009C                     ADRESH          equ	156	;# 
  1599     009D                     ADCON0          equ	157	;# 
  1600     009E                     ADCON1          equ	158	;# 
  1601     010C                     LATA            equ	268	;# 
  1602     010D                     LATB            equ	269	;# 
  1603     010E                     LATC            equ	270	;# 
  1604     0110                     LATE            equ	272	;# 
  1605     0111                     CM1CON0         equ	273	;# 
  1606     0112                     CM1CON1         equ	274	;# 
  1607     0113                     CM2CON0         equ	275	;# 
  1608     0114                     CM2CON1         equ	276	;# 
  1609     0115                     CMOUT           equ	277	;# 
  1610     0116                     BORCON          equ	278	;# 
  1611     0117                     FVRCON          equ	279	;# 
  1612     0118                     DACCON0         equ	280	;# 
  1613     0119                     DACCON1         equ	281	;# 
  1614     011A                     SRCON0          equ	282	;# 
  1615     011B                     SRCON1          equ	283	;# 
  1616     011D                     APFCON          equ	285	;# 
  1617     018C                     ANSELA          equ	396	;# 
  1618     018D                     ANSELB          equ	397	;# 
  1619     0191                     EEADR           equ	401	;# 
  1620     0191                     EEADRL          equ	401	;# 
  1621     0192                     EEADRH          equ	402	;# 
  1622     0193                     EEDAT           equ	403	;# 
  1623     0193                     EEDATL          equ	403	;# 
  1624     0193                     EEDATA          equ	403	;# 
  1625     0194                     EEDATH          equ	404	;# 
  1626     0195                     EECON1          equ	405	;# 
  1627     0196                     EECON2          equ	406	;# 
  1628     0199                     RCREG           equ	409	;# 
  1629     019A                     TXREG           equ	410	;# 
  1630     019B                     SP1BRG          equ	411	;# 
  1631     019B                     SP1BRGL         equ	411	;# 
  1632     019B                     SPBRG           equ	411	;# 
  1633     019B                     SPBRGL          equ	411	;# 
  1634     019C                     SP1BRGH         equ	412	;# 
  1635     019C                     SPBRGH          equ	412	;# 
  1636     019D                     RCSTA           equ	413	;# 
  1637     019E                     TXSTA           equ	414	;# 
  1638     019F                     BAUDCON         equ	415	;# 
  1639     020D                     WPUB            equ	525	;# 
  1640     0210                     WPUE            equ	528	;# 
  1641     0211                     SSPBUF          equ	529	;# 
  1642     0212                     SSPADD          equ	530	;# 
  1643     0213                     SSPMSK          equ	531	;# 
  1644     0214                     SSPSTAT         equ	532	;# 
  1645     0215                     SSPCON1         equ	533	;# 
  1646     0215                     SSPCON          equ	533	;# 
  1647     0216                     SSPCON2         equ	534	;# 
  1648     0217                     SSPCON3         equ	535	;# 
  1649     0291                     CCPR1           equ	657	;# 
  1650     0291                     CCPR1L          equ	657	;# 
  1651     0292                     CCPR1H          equ	658	;# 
  1652     0293                     CCP1CON         equ	659	;# 
  1653     0294                     PWM1CON         equ	660	;# 
  1654     0295                     CCP1AS          equ	661	;# 
  1655     0295                     ECCP1AS         equ	661	;# 
  1656     0296                     PSTR1CON        equ	662	;# 
  1657     0298                     CCPR2           equ	664	;# 
  1658     0298                     CCPR2L          equ	664	;# 
  1659     0299                     CCPR2H          equ	665	;# 
  1660     029A                     CCP2CON         equ	666	;# 
  1661     029B                     PWM2CON         equ	667	;# 
  1662     029C                     CCP2AS          equ	668	;# 
  1663     029C                     ECCP2AS         equ	668	;# 
  1664     029D                     PSTR2CON        equ	669	;# 
  1665     029E                     CCPTMRS0        equ	670	;# 
  1666     029F                     CCPTMRS1        equ	671	;# 
  1667     0311                     CCPR3           equ	785	;# 
  1668     0311                     CCPR3L          equ	785	;# 
  1669     0312                     CCPR3H          equ	786	;# 
  1670     0313                     CCP3CON         equ	787	;# 
  1671     0314                     PWM3CON         equ	788	;# 
  1672     0315                     CCP3AS          equ	789	;# 
  1673     0315                     ECCP3AS         equ	789	;# 
  1674     0316                     PSTR3CON        equ	790	;# 
  1675     0318                     CCPR4           equ	792	;# 
  1676     0318                     CCPR4L          equ	792	;# 
  1677     0319                     CCPR4H          equ	793	;# 
  1678     031A                     CCP4CON         equ	794	;# 
  1679     031C                     CCPR5           equ	796	;# 
  1680     031C                     CCPR5L          equ	796	;# 
  1681     031D                     CCPR5H          equ	797	;# 
  1682     031E                     CCP5CON         equ	798	;# 
  1683     0394                     IOCBP           equ	916	;# 
  1684     0395                     IOCBN           equ	917	;# 
  1685     0396                     IOCBF           equ	918	;# 
  1686     0415                     TMR4            equ	1045	;# 
  1687     0416                     PR4             equ	1046	;# 
  1688     0417                     T4CON           equ	1047	;# 
  1689     041C                     TMR6            equ	1052	;# 
  1690     041D                     PR6             equ	1053	;# 
  1691     041E                     T6CON           equ	1054	;# 
  1692     0791                     LCDCON          equ	1937	;# 
  1693     0792                     LCDPS           equ	1938	;# 
  1694     0793                     LCDREF          equ	1939	;# 
  1695     0794                     LCDCST          equ	1940	;# 
  1696     0795                     LCDRL           equ	1941	;# 
  1697     0798                     LCDSE0          equ	1944	;# 
  1698     0799                     LCDSE1          equ	1945	;# 
  1699     07A0                     LCDDATA0        equ	1952	;# 
  1700     07A1                     LCDDATA1        equ	1953	;# 
  1701     07A3                     LCDDATA3        equ	1955	;# 
  1702     07A4                     LCDDATA4        equ	1956	;# 
  1703     07A6                     LCDDATA6        equ	1958	;# 
  1704     07A7                     LCDDATA7        equ	1959	;# 
  1705     07A9                     LCDDATA9        equ	1961	;# 
  1706     07AA                     LCDDATA10       equ	1962	;# 
  1707     0FE4                     STATUS_SHAD     equ	4068	;# 
  1708     0FE5                     WREG_SHAD       equ	4069	;# 
  1709     0FE6                     BSR_SHAD        equ	4070	;# 
  1710     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1711     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1712     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1713     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1714     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1715     0FED                     STKPTR          equ	4077	;# 
  1716     0FEE                     TOSL            equ	4078	;# 
  1717     0FEF                     TOSH            equ	4079	;# 
  1718     0000                     INDF0           equ	0	;# 
  1719     0001                     INDF1           equ	1	;# 
  1720     0002                     PCL             equ	2	;# 
  1721     0003                     STATUS          equ	3	;# 
  1722     0004                     FSR0L           equ	4	;# 
  1723     0005                     FSR0H           equ	5	;# 
  1724     0006                     FSR1L           equ	6	;# 
  1725     0007                     FSR1H           equ	7	;# 
  1726     0008                     BSR             equ	8	;# 
  1727     0009                     WREG            equ	9	;# 
  1728     000A                     PCLATH          equ	10	;# 
  1729     000B                     INTCON          equ	11	;# 
  1730     000C                     PORTA           equ	12	;# 
  1731     000D                     PORTB           equ	13	;# 
  1732     000E                     PORTC           equ	14	;# 
  1733     0010                     PORTE           equ	16	;# 
  1734     0011                     PIR1            equ	17	;# 
  1735     0012                     PIR2            equ	18	;# 
  1736     0013                     PIR3            equ	19	;# 
  1737     0015                     TMR0            equ	21	;# 
  1738     0016                     TMR1            equ	22	;# 
  1739     0016                     TMR1L           equ	22	;# 
  1740     0017                     TMR1H           equ	23	;# 
  1741     0018                     T1CON           equ	24	;# 
  1742     0019                     T1GCON          equ	25	;# 
  1743     001A                     TMR2            equ	26	;# 
  1744     001B                     PR2             equ	27	;# 
  1745     001C                     T2CON           equ	28	;# 
  1746     001E                     CPSCON0         equ	30	;# 
  1747     001F                     CPSCON1         equ	31	;# 
  1748     008C                     TRISA           equ	140	;# 
  1749     008D                     TRISB           equ	141	;# 
  1750     008E                     TRISC           equ	142	;# 
  1751     0090                     TRISE           equ	144	;# 
  1752     0091                     PIE1            equ	145	;# 
  1753     0092                     PIE2            equ	146	;# 
  1754     0093                     PIE3            equ	147	;# 
  1755     0095                     OPTION_REG      equ	149	;# 
  1756     0096                     PCON            equ	150	;# 
  1757     0097                     WDTCON          equ	151	;# 
  1758     0098                     OSCTUNE         equ	152	;# 
  1759     0099                     OSCCON          equ	153	;# 
  1760     009A                     OSCSTAT         equ	154	;# 
  1761     009B                     ADRES           equ	155	;# 
  1762     009B                     ADRESL          equ	155	;# 
  1763     009C                     ADRESH          equ	156	;# 
  1764     009D                     ADCON0          equ	157	;# 
  1765     009E                     ADCON1          equ	158	;# 
  1766     010C                     LATA            equ	268	;# 
  1767     010D                     LATB            equ	269	;# 
  1768     010E                     LATC            equ	270	;# 
  1769     0110                     LATE            equ	272	;# 
  1770     0111                     CM1CON0         equ	273	;# 
  1771     0112                     CM1CON1         equ	274	;# 
  1772     0113                     CM2CON0         equ	275	;# 
  1773     0114                     CM2CON1         equ	276	;# 
  1774     0115                     CMOUT           equ	277	;# 
  1775     0116                     BORCON          equ	278	;# 
  1776     0117                     FVRCON          equ	279	;# 
  1777     0118                     DACCON0         equ	280	;# 
  1778     0119                     DACCON1         equ	281	;# 
  1779     011A                     SRCON0          equ	282	;# 
  1780     011B                     SRCON1          equ	283	;# 
  1781     011D                     APFCON          equ	285	;# 
  1782     018C                     ANSELA          equ	396	;# 
  1783     018D                     ANSELB          equ	397	;# 
  1784     0191                     EEADR           equ	401	;# 
  1785     0191                     EEADRL          equ	401	;# 
  1786     0192                     EEADRH          equ	402	;# 
  1787     0193                     EEDAT           equ	403	;# 
  1788     0193                     EEDATL          equ	403	;# 
  1789     0193                     EEDATA          equ	403	;# 
  1790     0194                     EEDATH          equ	404	;# 
  1791     0195                     EECON1          equ	405	;# 
  1792     0196                     EECON2          equ	406	;# 
  1793     0199                     RCREG           equ	409	;# 
  1794     019A                     TXREG           equ	410	;# 
  1795     019B                     SP1BRG          equ	411	;# 
  1796     019B                     SP1BRGL         equ	411	;# 
  1797     019B                     SPBRG           equ	411	;# 
  1798     019B                     SPBRGL          equ	411	;# 
  1799     019C                     SP1BRGH         equ	412	;# 
  1800     019C                     SPBRGH          equ	412	;# 
  1801     019D                     RCSTA           equ	413	;# 
  1802     019E                     TXSTA           equ	414	;# 
  1803     019F                     BAUDCON         equ	415	;# 
  1804     020D                     WPUB            equ	525	;# 
  1805     0210                     WPUE            equ	528	;# 
  1806     0211                     SSPBUF          equ	529	;# 
  1807     0212                     SSPADD          equ	530	;# 
  1808     0213                     SSPMSK          equ	531	;# 
  1809     0214                     SSPSTAT         equ	532	;# 
  1810     0215                     SSPCON1         equ	533	;# 
  1811     0215                     SSPCON          equ	533	;# 
  1812     0216                     SSPCON2         equ	534	;# 
  1813     0217                     SSPCON3         equ	535	;# 
  1814     0291                     CCPR1           equ	657	;# 
  1815     0291                     CCPR1L          equ	657	;# 
  1816     0292                     CCPR1H          equ	658	;# 
  1817     0293                     CCP1CON         equ	659	;# 
  1818     0294                     PWM1CON         equ	660	;# 
  1819     0295                     CCP1AS          equ	661	;# 
  1820     0295                     ECCP1AS         equ	661	;# 
  1821     0296                     PSTR1CON        equ	662	;# 
  1822     0298                     CCPR2           equ	664	;# 
  1823     0298                     CCPR2L          equ	664	;# 
  1824     0299                     CCPR2H          equ	665	;# 
  1825     029A                     CCP2CON         equ	666	;# 
  1826     029B                     PWM2CON         equ	667	;# 
  1827     029C                     CCP2AS          equ	668	;# 
  1828     029C                     ECCP2AS         equ	668	;# 
  1829     029D                     PSTR2CON        equ	669	;# 
  1830     029E                     CCPTMRS0        equ	670	;# 
  1831     029F                     CCPTMRS1        equ	671	;# 
  1832     0311                     CCPR3           equ	785	;# 
  1833     0311                     CCPR3L          equ	785	;# 
  1834     0312                     CCPR3H          equ	786	;# 
  1835     0313                     CCP3CON         equ	787	;# 
  1836     0314                     PWM3CON         equ	788	;# 
  1837     0315                     CCP3AS          equ	789	;# 
  1838     0315                     ECCP3AS         equ	789	;# 
  1839     0316                     PSTR3CON        equ	790	;# 
  1840     0318                     CCPR4           equ	792	;# 
  1841     0318                     CCPR4L          equ	792	;# 
  1842     0319                     CCPR4H          equ	793	;# 
  1843     031A                     CCP4CON         equ	794	;# 
  1844     031C                     CCPR5           equ	796	;# 
  1845     031C                     CCPR5L          equ	796	;# 
  1846     031D                     CCPR5H          equ	797	;# 
  1847     031E                     CCP5CON         equ	798	;# 
  1848     0394                     IOCBP           equ	916	;# 
  1849     0395                     IOCBN           equ	917	;# 
  1850     0396                     IOCBF           equ	918	;# 
  1851     0415                     TMR4            equ	1045	;# 
  1852     0416                     PR4             equ	1046	;# 
  1853     0417                     T4CON           equ	1047	;# 
  1854     041C                     TMR6            equ	1052	;# 
  1855     041D                     PR6             equ	1053	;# 
  1856     041E                     T6CON           equ	1054	;# 
  1857     0791                     LCDCON          equ	1937	;# 
  1858     0792                     LCDPS           equ	1938	;# 
  1859     0793                     LCDREF          equ	1939	;# 
  1860     0794                     LCDCST          equ	1940	;# 
  1861     0795                     LCDRL           equ	1941	;# 
  1862     0798                     LCDSE0          equ	1944	;# 
  1863     0799                     LCDSE1          equ	1945	;# 
  1864     07A0                     LCDDATA0        equ	1952	;# 
  1865     07A1                     LCDDATA1        equ	1953	;# 
  1866     07A3                     LCDDATA3        equ	1955	;# 
  1867     07A4                     LCDDATA4        equ	1956	;# 
  1868     07A6                     LCDDATA6        equ	1958	;# 
  1869     07A7                     LCDDATA7        equ	1959	;# 
  1870     07A9                     LCDDATA9        equ	1961	;# 
  1871     07AA                     LCDDATA10       equ	1962	;# 
  1872     0FE4                     STATUS_SHAD     equ	4068	;# 
  1873     0FE5                     WREG_SHAD       equ	4069	;# 
  1874     0FE6                     BSR_SHAD        equ	4070	;# 
  1875     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1876     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1877     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1878     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1879     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1880     0FED                     STKPTR          equ	4077	;# 
  1881     0FEE                     TOSL            equ	4078	;# 
  1882     0FEF                     TOSH            equ	4079	;# 
  1883     0000                     INDF0           equ	0	;# 
  1884     0001                     INDF1           equ	1	;# 
  1885     0002                     PCL             equ	2	;# 
  1886     0003                     STATUS          equ	3	;# 
  1887     0004                     FSR0L           equ	4	;# 
  1888     0005                     FSR0H           equ	5	;# 
  1889     0006                     FSR1L           equ	6	;# 
  1890     0007                     FSR1H           equ	7	;# 
  1891     0008                     BSR             equ	8	;# 
  1892     0009                     WREG            equ	9	;# 
  1893     000A                     PCLATH          equ	10	;# 
  1894     000B                     INTCON          equ	11	;# 
  1895     000C                     PORTA           equ	12	;# 
  1896     000D                     PORTB           equ	13	;# 
  1897     000E                     PORTC           equ	14	;# 
  1898     0010                     PORTE           equ	16	;# 
  1899     0011                     PIR1            equ	17	;# 
  1900     0012                     PIR2            equ	18	;# 
  1901     0013                     PIR3            equ	19	;# 
  1902     0015                     TMR0            equ	21	;# 
  1903     0016                     TMR1            equ	22	;# 
  1904     0016                     TMR1L           equ	22	;# 
  1905     0017                     TMR1H           equ	23	;# 
  1906     0018                     T1CON           equ	24	;# 
  1907     0019                     T1GCON          equ	25	;# 
  1908     001A                     TMR2            equ	26	;# 
  1909     001B                     PR2             equ	27	;# 
  1910     001C                     T2CON           equ	28	;# 
  1911     001E                     CPSCON0         equ	30	;# 
  1912     001F                     CPSCON1         equ	31	;# 
  1913     008C                     TRISA           equ	140	;# 
  1914     008D                     TRISB           equ	141	;# 
  1915     008E                     TRISC           equ	142	;# 
  1916     0090                     TRISE           equ	144	;# 
  1917     0091                     PIE1            equ	145	;# 
  1918     0092                     PIE2            equ	146	;# 
  1919     0093                     PIE3            equ	147	;# 
  1920     0095                     OPTION_REG      equ	149	;# 
  1921     0096                     PCON            equ	150	;# 
  1922     0097                     WDTCON          equ	151	;# 
  1923     0098                     OSCTUNE         equ	152	;# 
  1924     0099                     OSCCON          equ	153	;# 
  1925     009A                     OSCSTAT         equ	154	;# 
  1926     009B                     ADRES           equ	155	;# 
  1927     009B                     ADRESL          equ	155	;# 
  1928     009C                     ADRESH          equ	156	;# 
  1929     009D                     ADCON0          equ	157	;# 
  1930     009E                     ADCON1          equ	158	;# 
  1931     010C                     LATA            equ	268	;# 
  1932     010D                     LATB            equ	269	;# 
  1933     010E                     LATC            equ	270	;# 
  1934     0110                     LATE            equ	272	;# 
  1935     0111                     CM1CON0         equ	273	;# 
  1936     0112                     CM1CON1         equ	274	;# 
  1937     0113                     CM2CON0         equ	275	;# 
  1938     0114                     CM2CON1         equ	276	;# 
  1939     0115                     CMOUT           equ	277	;# 
  1940     0116                     BORCON          equ	278	;# 
  1941     0117                     FVRCON          equ	279	;# 
  1942     0118                     DACCON0         equ	280	;# 
  1943     0119                     DACCON1         equ	281	;# 
  1944     011A                     SRCON0          equ	282	;# 
  1945     011B                     SRCON1          equ	283	;# 
  1946     011D                     APFCON          equ	285	;# 
  1947     018C                     ANSELA          equ	396	;# 
  1948     018D                     ANSELB          equ	397	;# 
  1949     0191                     EEADR           equ	401	;# 
  1950     0191                     EEADRL          equ	401	;# 
  1951     0192                     EEADRH          equ	402	;# 
  1952     0193                     EEDAT           equ	403	;# 
  1953     0193                     EEDATL          equ	403	;# 
  1954     0193                     EEDATA          equ	403	;# 
  1955     0194                     EEDATH          equ	404	;# 
  1956     0195                     EECON1          equ	405	;# 
  1957     0196                     EECON2          equ	406	;# 
  1958     0199                     RCREG           equ	409	;# 
  1959     019A                     TXREG           equ	410	;# 
  1960     019B                     SP1BRG          equ	411	;# 
  1961     019B                     SP1BRGL         equ	411	;# 
  1962     019B                     SPBRG           equ	411	;# 
  1963     019B                     SPBRGL          equ	411	;# 
  1964     019C                     SP1BRGH         equ	412	;# 
  1965     019C                     SPBRGH          equ	412	;# 
  1966     019D                     RCSTA           equ	413	;# 
  1967     019E                     TXSTA           equ	414	;# 
  1968     019F                     BAUDCON         equ	415	;# 
  1969     020D                     WPUB            equ	525	;# 
  1970     0210                     WPUE            equ	528	;# 
  1971     0211                     SSPBUF          equ	529	;# 
  1972     0212                     SSPADD          equ	530	;# 
  1973     0213                     SSPMSK          equ	531	;# 
  1974     0214                     SSPSTAT         equ	532	;# 
  1975     0215                     SSPCON1         equ	533	;# 
  1976     0215                     SSPCON          equ	533	;# 
  1977     0216                     SSPCON2         equ	534	;# 
  1978     0217                     SSPCON3         equ	535	;# 
  1979     0291                     CCPR1           equ	657	;# 
  1980     0291                     CCPR1L          equ	657	;# 
  1981     0292                     CCPR1H          equ	658	;# 
  1982     0293                     CCP1CON         equ	659	;# 
  1983     0294                     PWM1CON         equ	660	;# 
  1984     0295                     CCP1AS          equ	661	;# 
  1985     0295                     ECCP1AS         equ	661	;# 
  1986     0296                     PSTR1CON        equ	662	;# 
  1987     0298                     CCPR2           equ	664	;# 
  1988     0298                     CCPR2L          equ	664	;# 
  1989     0299                     CCPR2H          equ	665	;# 
  1990     029A                     CCP2CON         equ	666	;# 
  1991     029B                     PWM2CON         equ	667	;# 
  1992     029C                     CCP2AS          equ	668	;# 
  1993     029C                     ECCP2AS         equ	668	;# 
  1994     029D                     PSTR2CON        equ	669	;# 
  1995     029E                     CCPTMRS0        equ	670	;# 
  1996     029F                     CCPTMRS1        equ	671	;# 
  1997     0311                     CCPR3           equ	785	;# 
  1998     0311                     CCPR3L          equ	785	;# 
  1999     0312                     CCPR3H          equ	786	;# 
  2000     0313                     CCP3CON         equ	787	;# 
  2001     0314                     PWM3CON         equ	788	;# 
  2002     0315                     CCP3AS          equ	789	;# 
  2003     0315                     ECCP3AS         equ	789	;# 
  2004     0316                     PSTR3CON        equ	790	;# 
  2005     0318                     CCPR4           equ	792	;# 
  2006     0318                     CCPR4L          equ	792	;# 
  2007     0319                     CCPR4H          equ	793	;# 
  2008     031A                     CCP4CON         equ	794	;# 
  2009     031C                     CCPR5           equ	796	;# 
  2010     031C                     CCPR5L          equ	796	;# 
  2011     031D                     CCPR5H          equ	797	;# 
  2012     031E                     CCP5CON         equ	798	;# 
  2013     0394                     IOCBP           equ	916	;# 
  2014     0395                     IOCBN           equ	917	;# 
  2015     0396                     IOCBF           equ	918	;# 
  2016     0415                     TMR4            equ	1045	;# 
  2017     0416                     PR4             equ	1046	;# 
  2018     0417                     T4CON           equ	1047	;# 
  2019     041C                     TMR6            equ	1052	;# 
  2020     041D                     PR6             equ	1053	;# 
  2021     041E                     T6CON           equ	1054	;# 
  2022     0791                     LCDCON          equ	1937	;# 
  2023     0792                     LCDPS           equ	1938	;# 
  2024     0793                     LCDREF          equ	1939	;# 
  2025     0794                     LCDCST          equ	1940	;# 
  2026     0795                     LCDRL           equ	1941	;# 
  2027     0798                     LCDSE0          equ	1944	;# 
  2028     0799                     LCDSE1          equ	1945	;# 
  2029     07A0                     LCDDATA0        equ	1952	;# 
  2030     07A1                     LCDDATA1        equ	1953	;# 
  2031     07A3                     LCDDATA3        equ	1955	;# 
  2032     07A4                     LCDDATA4        equ	1956	;# 
  2033     07A6                     LCDDATA6        equ	1958	;# 
  2034     07A7                     LCDDATA7        equ	1959	;# 
  2035     07A9                     LCDDATA9        equ	1961	;# 
  2036     07AA                     LCDDATA10       equ	1962	;# 
  2037     0FE4                     STATUS_SHAD     equ	4068	;# 
  2038     0FE5                     WREG_SHAD       equ	4069	;# 
  2039     0FE6                     BSR_SHAD        equ	4070	;# 
  2040     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2041     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2042     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2043     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2044     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2045     0FED                     STKPTR          equ	4077	;# 
  2046     0FEE                     TOSL            equ	4078	;# 
  2047     0FEF                     TOSH            equ	4079	;# 
  2048                           
  2049                           	psect	idataBANK1
  2050     2710                     __pidataBANK1:
  2051                           
  2052                           ;initializer for DISP_SWR@F2959
  2053     2710  3430               	retlw	48
  2054     2711  342E               	retlw	46
  2055     2712  3430               	retlw	48
  2056     2713  3430               	retlw	48
  2057     2714  3400               	retlw	0
  2058                           
  2059                           ;initializer for MENU_StartupSave_Init@F3149
  2060     2715  3430               	retlw	48
  2061     2716  343A               	retlw	58
  2062     2717  3400               	retlw	0
  2063                           
  2064                           ;initializer for MENU_NameEdit_Init@F3141
  2065     2718  3430               	retlw	48
  2066     2719  343A               	retlw	58
  2067     271A  3400               	retlw	0
  2068                           
  2069                           ;initializer for MENU_Memory_Update@F3118
  2070     271B  3430               	retlw	48
  2071     271C  343A               	retlw	58
  2072     271D  3400               	retlw	0
  2073                           
  2074                           ;initializer for MENU_CalPWR_Update@F3100
  2075     271E  3420               	retlw	32
  2076     271F  3400               	retlw	0
  2077                           
  2078                           	psect	idataBANK2
  2079     1102                     __pidataBANK2:
  2080                           
  2081                           ;initializer for _str_TUNE_State
  2082     1102  3475               	retlw	low (_str_SpaceLine| (0+32768))
  2083     1103  34A8               	retlw	high (_str_SpaceLine| (0+32768))
  2084     1104  346A               	retlw	low (_str_WaitForHF| (0+32768))
  2085     1105  34A8               	retlw	high (_str_WaitForHF| (0+32768))
  2086     1106  345F               	retlw	low (_str_Running| (0+32768))
  2087     1107  34A8               	retlw	high (_str_Running| (0+32768))
  2088     1108  3454               	retlw	low (_str_Break| (0+32768))
  2089     1109  34A8               	retlw	high (_str_Break| (0+32768))
  2090     110A  3449               	retlw	low (_str_PWR_low| (0+32768))
  2091     110B  34A8               	retlw	high (_str_PWR_low| (0+32768))
  2092     110C  343E               	retlw	low (_str_Ready| (0+32768))
  2093     110D  34A8               	retlw	high (_str_Ready| (0+32768))
  2094                           
  2095                           ;initializer for _ptrSubTopMenu
  2096     110E  3478               	retlw	low (_menuBypass| (0+32768))
  2097     110F  34A9               	retlw	high (_menuBypass| (0+32768))
  2098     1110  3466               	retlw	low (_menuLoad| (0+32768))
  2099     1111  34A9               	retlw	high (_menuLoad| (0+32768))
  2100     1112  346C               	retlw	low (_menuSave| (0+32768))
  2101     1113  34A9               	retlw	high (_menuSave| (0+32768))
  2102     1114  3472               	retlw	low (_menuReset| (0+32768))
  2103     1115  34A9               	retlw	high (_menuReset| (0+32768))
  2104     1116  347E               	retlw	low (_menuSubSetup| (0+32768))
  2105     1117  34A9               	retlw	high (_menuSubSetup| (0+32768))
  2106     1118  3460               	retlw	low (_menuAbout| (0+32768))
  2107     1119  34A9               	retlw	high (_menuAbout| (0+32768))
  2108                           
  2109                           ;initializer for _ptrSubSetupMenu
  2110     111A  345A               	retlw	low (_menuTParam| (0+32768))
  2111     111B  34A9               	retlw	high (_menuTParam| (0+32768))
  2112     111C  3454               	retlw	low (_menuSleep| (0+32768))
  2113     111D  34A9               	retlw	high (_menuSleep| (0+32768))
  2114     111E  3448               	retlw	low (_menuCal| (0+32768))
  2115     111F  34A9               	retlw	high (_menuCal| (0+32768))
  2116     1120  344E               	retlw	low (_menuRelTest| (0+32768))
  2117     1121  34A9               	retlw	high (_menuRelTest| (0+32768))
  2118                           
  2119                           	psect	idataEEDATA
  2120     0000                     __pidataEEDATA:
  2121     0000                     _ee_tunemem:	
  2122                           ;initializer for _ee_tunemem
  2123                           
  2124     0000  0000               	db	0
  2125     0001  0000               	db	0
  2126     0002  0053               	db	83
  2127     0003  0074               	db	116
  2128     0004  0061               	db	97
  2129     0005  0072               	db	114
  2130     0006  0074               	db	116
  2131     0007  0075               	db	117
  2132     0008  0070               	db	112
  2133     0009  0020               	db	32
  2134     000A  0000               	db	0
  2135     000B  0000               	db	0
  2136     000C  0020               	db	32
  2137     000D  0020               	db	32
  2138     000E  0020               	db	32
  2139     000F  0020               	db	32
  2140     0010  0020               	db	32
  2141     0011  0020               	db	32
  2142     0012  0020               	db	32
  2143     0013  0020               	db	32
  2144     0014  0000               	db	0
  2145     0015  0000               	db	0
  2146     0016  0020               	db	32
  2147     0017  0020               	db	32
  2148     0018  0020               	db	32
  2149     0019  0020               	db	32
  2150     001A  0020               	db	32
  2151     001B  0020               	db	32
  2152     001C  0020               	db	32
  2153     001D  0020               	db	32
  2154     001E  0000               	db	0
  2155     001F  0000               	db	0
  2156     0020  0020               	db	32
  2157     0021  0020               	db	32
  2158     0022  0020               	db	32
  2159     0023  0020               	db	32
  2160     0024  0020               	db	32
  2161     0025  0020               	db	32
  2162     0026  0020               	db	32
  2163     0027  0020               	db	32
  2164     0028  0000               	db	0
  2165     0029  0000               	db	0
  2166     002A  0020               	db	32
  2167     002B  0020               	db	32
  2168     002C  0020               	db	32
  2169     002D  0020               	db	32
  2170     002E  0020               	db	32
  2171     002F  0020               	db	32
  2172     0030  0020               	db	32
  2173     0031  0020               	db	32
  2174     0032  0000               	db	0
  2175     0033  0000               	db	0
  2176     0034  0020               	db	32
  2177     0035  0020               	db	32
  2178     0036  0020               	db	32
  2179     0037  0020               	db	32
  2180     0038  0020               	db	32
  2181     0039  0020               	db	32
  2182     003A  0020               	db	32
  2183     003B  0020               	db	32
  2184     003C  0000               	db	0
  2185     003D  0000               	db	0
  2186     003E  0020               	db	32
  2187     003F  0020               	db	32
  2188     0040  0020               	db	32
  2189     0041  0020               	db	32
  2190     0042  0020               	db	32
  2191     0043  0020               	db	32
  2192     0044  0020               	db	32
  2193     0045  0020               	db	32
  2194     0046  0000               	db	0
  2195     0047  0000               	db	0
  2196     0048  0020               	db	32
  2197     0049  0020               	db	32
  2198     004A  0020               	db	32
  2199     004B  0020               	db	32
  2200     004C  0020               	db	32
  2201     004D  0020               	db	32
  2202     004E  0020               	db	32
  2203     004F  0020               	db	32
  2204     0050  0000               	db	0
  2205     0051  0000               	db	0
  2206     0052  0020               	db	32
  2207     0053  0020               	db	32
  2208     0054  0020               	db	32
  2209     0055  0020               	db	32
  2210     0056  0020               	db	32
  2211     0057  0020               	db	32
  2212     0058  0020               	db	32
  2213     0059  0020               	db	32
  2214     005A  0000               	db	0
  2215     005B  0000               	db	0
  2216     005C  0020               	db	32
  2217     005D  0020               	db	32
  2218     005E  0020               	db	32
  2219     005F  0020               	db	32
  2220     0060  0020               	db	32
  2221     0061  0020               	db	32
  2222     0062  0020               	db	32
  2223     0063  0020               	db	32
  2224     0064                     _ee_cal_gain:	
  2225                           ;initializer for _ee_cal_gain
  2226                           
  2227     0064  00E0               	db	224
  2228     0065  002E               	db	46
  2229     0066                     _ee_cal_offset:	
  2230                           ;initializer for _ee_cal_offset
  2231                           
  2232     0066  0096               	db	150
  2233     0067  0000               	db	0
  2234     0068                     _ee_cal_point_1:	
  2235                           ;initializer for _ee_cal_point_1
  2236                           
  2237     0068  00EE               	db	238
  2238     0069  0002               	db	2
  2239     006A                     _ee_cal_point_0:	
  2240                           ;initializer for _ee_cal_point_0
  2241                           
  2242     006A  0032               	db	50
  2243     006B  0000               	db	0
  2244     006C                     _ee_sleep_delay_sec:	
  2245                           ;initializer for _ee_sleep_delay_sec
  2246                           
  2247     006C  001E               	db	30
  2248     006D  0000               	db	0
  2249     006E                     _ee_tune_auto_swr:	
  2250                           ;initializer for _ee_tune_auto_swr
  2251                           
  2252     006E  00BE               	db	190
  2253     006F  0000               	db	0
  2254     0070                     _ee_tune_stop_swr:	
  2255                           ;initializer for _ee_tune_stop_swr
  2256                           
  2257     0070  0073               	db	115
  2258     0071  0000               	db	0
  2259                           
  2260                           	psect	stringtext1
  2261     037F                     __pstringtext1:
  2262     037F                     _font5x8:
  2263     037F  3400               	retlw	0
  2264     0380  3400               	retlw	0
  2265     0381  3400               	retlw	0
  2266     0382  3400               	retlw	0
  2267     0383  3400               	retlw	0
  2268     0384  3400               	retlw	0
  2269     0385  3400               	retlw	0
  2270     0386  345F               	retlw	95
  2271     0387  3400               	retlw	0
  2272     0388  3400               	retlw	0
  2273     0389  3400               	retlw	0
  2274     038A  3407               	retlw	7
  2275     038B  3400               	retlw	0
  2276     038C  3407               	retlw	7
  2277     038D  3400               	retlw	0
  2278     038E  3414               	retlw	20
  2279     038F  347F               	retlw	127
  2280     0390  3414               	retlw	20
  2281     0391  347F               	retlw	127
  2282     0392  3414               	retlw	20
  2283     0393  3424               	retlw	36
  2284     0394  342A               	retlw	42
  2285     0395  347F               	retlw	127
  2286     0396  342A               	retlw	42
  2287     0397  3412               	retlw	18
  2288     0398  3423               	retlw	35
  2289     0399  3413               	retlw	19
  2290     039A  3408               	retlw	8
  2291     039B  3464               	retlw	100
  2292     039C  3462               	retlw	98
  2293     039D  3436               	retlw	54
  2294     039E  3449               	retlw	73
  2295     039F  3455               	retlw	85
  2296     03A0  3422               	retlw	34
  2297     03A1  3450               	retlw	80
  2298     03A2  3400               	retlw	0
  2299     03A3  3405               	retlw	5
  2300     03A4  3403               	retlw	3
  2301     03A5  3400               	retlw	0
  2302     03A6  3400               	retlw	0
  2303     03A7  3400               	retlw	0
  2304     03A8  341C               	retlw	28
  2305     03A9  3422               	retlw	34
  2306     03AA  3441               	retlw	65
  2307     03AB  3400               	retlw	0
  2308     03AC  3400               	retlw	0
  2309     03AD  3441               	retlw	65
  2310     03AE  3422               	retlw	34
  2311     03AF  341C               	retlw	28
  2312     03B0  3400               	retlw	0
  2313     03B1  3408               	retlw	8
  2314     03B2  342A               	retlw	42
  2315     03B3  341C               	retlw	28
  2316     03B4  342A               	retlw	42
  2317     03B5  3408               	retlw	8
  2318     03B6  3408               	retlw	8
  2319     03B7  3408               	retlw	8
  2320     03B8  343E               	retlw	62
  2321     03B9  3408               	retlw	8
  2322     03BA  3408               	retlw	8
  2323     03BB  3400               	retlw	0
  2324     03BC  3450               	retlw	80
  2325     03BD  3430               	retlw	48
  2326     03BE  3400               	retlw	0
  2327     03BF  3400               	retlw	0
  2328     03C0  3408               	retlw	8
  2329     03C1  3408               	retlw	8
  2330     03C2  3408               	retlw	8
  2331     03C3  3408               	retlw	8
  2332     03C4  3408               	retlw	8
  2333     03C5  3400               	retlw	0
  2334     03C6  3430               	retlw	48
  2335     03C7  3430               	retlw	48
  2336     03C8  3400               	retlw	0
  2337     03C9  3400               	retlw	0
  2338     03CA  3420               	retlw	32
  2339     03CB  3410               	retlw	16
  2340     03CC  3408               	retlw	8
  2341     03CD  3404               	retlw	4
  2342     03CE  3402               	retlw	2
  2343     03CF  343E               	retlw	62
  2344     03D0  3451               	retlw	81
  2345     03D1  3449               	retlw	73
  2346     03D2  3445               	retlw	69
  2347     03D3  343E               	retlw	62
  2348     03D4  3400               	retlw	0
  2349     03D5  3442               	retlw	66
  2350     03D6  347F               	retlw	127
  2351     03D7  3440               	retlw	64
  2352     03D8  3400               	retlw	0
  2353     03D9  3442               	retlw	66
  2354     03DA  3461               	retlw	97
  2355     03DB  3451               	retlw	81
  2356     03DC  3449               	retlw	73
  2357     03DD  3446               	retlw	70
  2358     03DE  3421               	retlw	33
  2359     03DF  3441               	retlw	65
  2360     03E0  3445               	retlw	69
  2361     03E1  344B               	retlw	75
  2362     03E2  3431               	retlw	49
  2363     03E3  3418               	retlw	24
  2364     03E4  3414               	retlw	20
  2365     03E5  3412               	retlw	18
  2366     03E6  347F               	retlw	127
  2367     03E7  3410               	retlw	16
  2368     03E8  3427               	retlw	39
  2369     03E9  3445               	retlw	69
  2370     03EA  3445               	retlw	69
  2371     03EB  3445               	retlw	69
  2372     03EC  3439               	retlw	57
  2373     03ED  343C               	retlw	60
  2374     03EE  344A               	retlw	74
  2375     03EF  3449               	retlw	73
  2376     03F0  3449               	retlw	73
  2377     03F1  3430               	retlw	48
  2378     03F2  3401               	retlw	1
  2379     03F3  3471               	retlw	113
  2380     03F4  3409               	retlw	9
  2381     03F5  3405               	retlw	5
  2382     03F6  3403               	retlw	3
  2383     03F7  3436               	retlw	54
  2384     03F8  3449               	retlw	73
  2385     03F9  3449               	retlw	73
  2386     03FA  3449               	retlw	73
  2387     03FB  3436               	retlw	54
  2388     03FC  3406               	retlw	6
  2389     03FD  3449               	retlw	73
  2390     03FE  3449               	retlw	73
  2391     03FF  3429               	retlw	41
  2392     0400  341E               	retlw	30
  2393     0401  3400               	retlw	0
  2394     0402  3436               	retlw	54
  2395     0403  3436               	retlw	54
  2396     0404  3400               	retlw	0
  2397     0405  3400               	retlw	0
  2398     0406  3400               	retlw	0
  2399     0407  3456               	retlw	86
  2400     0408  3436               	retlw	54
  2401     0409  3400               	retlw	0
  2402     040A  3400               	retlw	0
  2403     040B  3400               	retlw	0
  2404     040C  3408               	retlw	8
  2405     040D  3414               	retlw	20
  2406     040E  3422               	retlw	34
  2407     040F  3441               	retlw	65
  2408     0410  3414               	retlw	20
  2409     0411  3414               	retlw	20
  2410     0412  3414               	retlw	20
  2411     0413  3414               	retlw	20
  2412     0414  3414               	retlw	20
  2413     0415  3441               	retlw	65
  2414     0416  3422               	retlw	34
  2415     0417  3414               	retlw	20
  2416     0418  3408               	retlw	8
  2417     0419  3400               	retlw	0
  2418     041A  3402               	retlw	2
  2419     041B  3401               	retlw	1
  2420     041C  3451               	retlw	81
  2421     041D  3409               	retlw	9
  2422     041E  3406               	retlw	6
  2423     041F  3432               	retlw	50
  2424     0420  3449               	retlw	73
  2425     0421  3479               	retlw	121
  2426     0422  3441               	retlw	65
  2427     0423  343E               	retlw	62
  2428     0424  347E               	retlw	126
  2429     0425  3411               	retlw	17
  2430     0426  3411               	retlw	17
  2431     0427  3411               	retlw	17
  2432     0428  347E               	retlw	126
  2433     0429  347F               	retlw	127
  2434     042A  3449               	retlw	73
  2435     042B  3449               	retlw	73
  2436     042C  3449               	retlw	73
  2437     042D  3436               	retlw	54
  2438     042E  343E               	retlw	62
  2439     042F  3441               	retlw	65
  2440     0430  3441               	retlw	65
  2441     0431  3441               	retlw	65
  2442     0432  3422               	retlw	34
  2443     0433  347F               	retlw	127
  2444     0434  3441               	retlw	65
  2445     0435  3441               	retlw	65
  2446     0436  3422               	retlw	34
  2447     0437  341C               	retlw	28
  2448     0438  347F               	retlw	127
  2449     0439  3449               	retlw	73
  2450     043A  3449               	retlw	73
  2451     043B  3449               	retlw	73
  2452     043C  3441               	retlw	65
  2453     043D  347F               	retlw	127
  2454     043E  3409               	retlw	9
  2455     043F  3409               	retlw	9
  2456     0440  3401               	retlw	1
  2457     0441  3401               	retlw	1
  2458     0442  343E               	retlw	62
  2459     0443  3441               	retlw	65
  2460     0444  3441               	retlw	65
  2461     0445  3451               	retlw	81
  2462     0446  3432               	retlw	50
  2463     0447  347F               	retlw	127
  2464     0448  3408               	retlw	8
  2465     0449  3408               	retlw	8
  2466     044A  3408               	retlw	8
  2467     044B  347F               	retlw	127
  2468     044C  3400               	retlw	0
  2469     044D  3441               	retlw	65
  2470     044E  347F               	retlw	127
  2471     044F  3441               	retlw	65
  2472     0450  3400               	retlw	0
  2473     0451  3420               	retlw	32
  2474     0452  3440               	retlw	64
  2475     0453  3441               	retlw	65
  2476     0454  343F               	retlw	63
  2477     0455  3401               	retlw	1
  2478     0456  347F               	retlw	127
  2479     0457  3408               	retlw	8
  2480     0458  3414               	retlw	20
  2481     0459  3422               	retlw	34
  2482     045A  3441               	retlw	65
  2483     045B  347F               	retlw	127
  2484     045C  3440               	retlw	64
  2485     045D  3440               	retlw	64
  2486     045E  3440               	retlw	64
  2487     045F  3440               	retlw	64
  2488     0460  347F               	retlw	127
  2489     0461  3402               	retlw	2
  2490     0462  3404               	retlw	4
  2491     0463  3402               	retlw	2
  2492     0464  347F               	retlw	127
  2493     0465  347F               	retlw	127
  2494     0466  3404               	retlw	4
  2495     0467  3408               	retlw	8
  2496     0468  3410               	retlw	16
  2497     0469  347F               	retlw	127
  2498     046A  343E               	retlw	62
  2499     046B  3441               	retlw	65
  2500     046C  3441               	retlw	65
  2501     046D  3441               	retlw	65
  2502     046E  343E               	retlw	62
  2503     046F  347F               	retlw	127
  2504     0470  3409               	retlw	9
  2505     0471  3409               	retlw	9
  2506     0472  3409               	retlw	9
  2507     0473  3406               	retlw	6
  2508     0474  343E               	retlw	62
  2509     0475  3441               	retlw	65
  2510     0476  3451               	retlw	81
  2511     0477  3421               	retlw	33
  2512     0478  345E               	retlw	94
  2513     0479  347F               	retlw	127
  2514     047A  3409               	retlw	9
  2515     047B  3419               	retlw	25
  2516     047C  3429               	retlw	41
  2517     047D  3446               	retlw	70
  2518     047E  3446               	retlw	70
  2519     047F  3449               	retlw	73
  2520     0480  3449               	retlw	73
  2521     0481  3449               	retlw	73
  2522     0482  3431               	retlw	49
  2523     0483  3401               	retlw	1
  2524     0484  3401               	retlw	1
  2525     0485  347F               	retlw	127
  2526     0486  3401               	retlw	1
  2527     0487  3401               	retlw	1
  2528     0488  343F               	retlw	63
  2529     0489  3440               	retlw	64
  2530     048A  3440               	retlw	64
  2531     048B  3440               	retlw	64
  2532     048C  343F               	retlw	63
  2533     048D  341F               	retlw	31
  2534     048E  3420               	retlw	32
  2535     048F  3440               	retlw	64
  2536     0490  3420               	retlw	32
  2537     0491  341F               	retlw	31
  2538     0492  347F               	retlw	127
  2539     0493  3420               	retlw	32
  2540     0494  3418               	retlw	24
  2541     0495  3420               	retlw	32
  2542     0496  347F               	retlw	127
  2543     0497  3463               	retlw	99
  2544     0498  3414               	retlw	20
  2545     0499  3408               	retlw	8
  2546     049A  3414               	retlw	20
  2547     049B  3463               	retlw	99
  2548     049C  3403               	retlw	3
  2549     049D  3404               	retlw	4
  2550     049E  3478               	retlw	120
  2551     049F  3404               	retlw	4
  2552     04A0  3403               	retlw	3
  2553     04A1  3461               	retlw	97
  2554     04A2  3451               	retlw	81
  2555     04A3  3449               	retlw	73
  2556     04A4  3445               	retlw	69
  2557     04A5  3443               	retlw	67
  2558     04A6  3400               	retlw	0
  2559     04A7  3400               	retlw	0
  2560     04A8  347F               	retlw	127
  2561     04A9  3441               	retlw	65
  2562     04AA  3441               	retlw	65
  2563     04AB  3402               	retlw	2
  2564     04AC  3404               	retlw	4
  2565     04AD  3408               	retlw	8
  2566     04AE  3410               	retlw	16
  2567     04AF  3420               	retlw	32
  2568     04B0  3441               	retlw	65
  2569     04B1  3441               	retlw	65
  2570     04B2  347F               	retlw	127
  2571     04B3  3400               	retlw	0
  2572     04B4  3400               	retlw	0
  2573     04B5  3404               	retlw	4
  2574     04B6  3402               	retlw	2
  2575     04B7  3401               	retlw	1
  2576     04B8  3402               	retlw	2
  2577     04B9  3404               	retlw	4
  2578     04BA  3440               	retlw	64
  2579     04BB  3440               	retlw	64
  2580     04BC  3440               	retlw	64
  2581     04BD  3440               	retlw	64
  2582     04BE  3440               	retlw	64
  2583     04BF  3400               	retlw	0
  2584     04C0  3401               	retlw	1
  2585     04C1  3402               	retlw	2
  2586     04C2  3404               	retlw	4
  2587     04C3  3400               	retlw	0
  2588     04C4  3420               	retlw	32
  2589     04C5  3454               	retlw	84
  2590     04C6  3454               	retlw	84
  2591     04C7  3454               	retlw	84
  2592     04C8  3478               	retlw	120
  2593     04C9  347F               	retlw	127
  2594     04CA  3448               	retlw	72
  2595     04CB  3444               	retlw	68
  2596     04CC  3444               	retlw	68
  2597     04CD  3438               	retlw	56
  2598     04CE  3438               	retlw	56
  2599     04CF  3444               	retlw	68
  2600     04D0  3444               	retlw	68
  2601     04D1  3444               	retlw	68
  2602     04D2  3420               	retlw	32
  2603     04D3  3438               	retlw	56
  2604     04D4  3444               	retlw	68
  2605     04D5  3444               	retlw	68
  2606     04D6  3448               	retlw	72
  2607     04D7  347F               	retlw	127
  2608     04D8  3438               	retlw	56
  2609     04D9  3454               	retlw	84
  2610     04DA  3454               	retlw	84
  2611     04DB  3454               	retlw	84
  2612     04DC  3418               	retlw	24
  2613     04DD  3408               	retlw	8
  2614     04DE  347E               	retlw	126
  2615     04DF  3409               	retlw	9
  2616     04E0  3401               	retlw	1
  2617     04E1  3402               	retlw	2
  2618     04E2  3408               	retlw	8
  2619     04E3  3414               	retlw	20
  2620     04E4  3454               	retlw	84
  2621     04E5  3454               	retlw	84
  2622     04E6  343C               	retlw	60
  2623     04E7  347F               	retlw	127
  2624     04E8  3408               	retlw	8
  2625     04E9  3404               	retlw	4
  2626     04EA  3404               	retlw	4
  2627     04EB  3478               	retlw	120
  2628     04EC  3400               	retlw	0
  2629     04ED  3444               	retlw	68
  2630     04EE  347D               	retlw	125
  2631     04EF  3440               	retlw	64
  2632     04F0  3400               	retlw	0
  2633     04F1  3420               	retlw	32
  2634     04F2  3440               	retlw	64
  2635     04F3  3444               	retlw	68
  2636     04F4  343D               	retlw	61
  2637     04F5  3400               	retlw	0
  2638     04F6  3400               	retlw	0
  2639     04F7  347F               	retlw	127
  2640     04F8  3410               	retlw	16
  2641     04F9  3428               	retlw	40
  2642     04FA  3444               	retlw	68
  2643     04FB  3400               	retlw	0
  2644     04FC  3441               	retlw	65
  2645     04FD  347F               	retlw	127
  2646     04FE  3440               	retlw	64
  2647     04FF  3400               	retlw	0
  2648     0500  347C               	retlw	124
  2649     0501  3404               	retlw	4
  2650     0502  3418               	retlw	24
  2651     0503  3404               	retlw	4
  2652     0504  3478               	retlw	120
  2653     0505  347C               	retlw	124
  2654     0506  3408               	retlw	8
  2655     0507  3404               	retlw	4
  2656     0508  3404               	retlw	4
  2657     0509  3478               	retlw	120
  2658     050A  3438               	retlw	56
  2659     050B  3444               	retlw	68
  2660     050C  3444               	retlw	68
  2661     050D  3444               	retlw	68
  2662     050E  3438               	retlw	56
  2663     050F  347C               	retlw	124
  2664     0510  3414               	retlw	20
  2665     0511  3414               	retlw	20
  2666     0512  3414               	retlw	20
  2667     0513  3408               	retlw	8
  2668     0514  3408               	retlw	8
  2669     0515  3414               	retlw	20
  2670     0516  3414               	retlw	20
  2671     0517  3418               	retlw	24
  2672     0518  347C               	retlw	124
  2673     0519  347C               	retlw	124
  2674     051A  3408               	retlw	8
  2675     051B  3404               	retlw	4
  2676     051C  3404               	retlw	4
  2677     051D  3408               	retlw	8
  2678     051E  3448               	retlw	72
  2679     051F  3454               	retlw	84
  2680     0520  3454               	retlw	84
  2681     0521  3454               	retlw	84
  2682     0522  3420               	retlw	32
  2683     0523  3404               	retlw	4
  2684     0524  343F               	retlw	63
  2685     0525  3444               	retlw	68
  2686     0526  3440               	retlw	64
  2687     0527  3420               	retlw	32
  2688     0528  343C               	retlw	60
  2689     0529  3440               	retlw	64
  2690     052A  3440               	retlw	64
  2691     052B  3420               	retlw	32
  2692     052C  347C               	retlw	124
  2693     052D  341C               	retlw	28
  2694     052E  3420               	retlw	32
  2695     052F  3440               	retlw	64
  2696     0530  3420               	retlw	32
  2697     0531  341C               	retlw	28
  2698     0532  343C               	retlw	60
  2699     0533  3440               	retlw	64
  2700     0534  3430               	retlw	48
  2701     0535  3440               	retlw	64
  2702     0536  343C               	retlw	60
  2703     0537  3444               	retlw	68
  2704     0538  3428               	retlw	40
  2705     0539  3410               	retlw	16
  2706     053A  3428               	retlw	40
  2707     053B  3444               	retlw	68
  2708     053C  340C               	retlw	12
  2709     053D  3450               	retlw	80
  2710     053E  3450               	retlw	80
  2711     053F  3450               	retlw	80
  2712     0540  343C               	retlw	60
  2713     0541  3444               	retlw	68
  2714     0542  3464               	retlw	100
  2715     0543  3454               	retlw	84
  2716     0544  344C               	retlw	76
  2717     0545  3444               	retlw	68
  2718     0546  3400               	retlw	0
  2719     0547  3408               	retlw	8
  2720     0548  3436               	retlw	54
  2721     0549  3441               	retlw	65
  2722     054A  3400               	retlw	0
  2723     054B  3400               	retlw	0
  2724     054C  3400               	retlw	0
  2725     054D  347F               	retlw	127
  2726     054E  3400               	retlw	0
  2727     054F  3400               	retlw	0
  2728     0550  3400               	retlw	0
  2729     0551  3441               	retlw	65
  2730     0552  3436               	retlw	54
  2731     0553  3408               	retlw	8
  2732     0554  3400               	retlw	0
  2733     0555  3408               	retlw	8
  2734     0556  3408               	retlw	8
  2735     0557  342A               	retlw	42
  2736     0558  341C               	retlw	28
  2737     0559  3408               	retlw	8
  2738     055A  3408               	retlw	8
  2739     055B  341C               	retlw	28
  2740     055C  342A               	retlw	42
  2741     055D  3408               	retlw	8
  2742     055E  3408               	retlw	8
  2743     055F                     __end_of_font5x8:
  2744                           
  2745                           	psect	stringtext2
  2746     1000                     __pstringtext2:
  2747     1000                     _eeprom_init_data:
  2748     1000  3400               	retlw	0
  2749     1001  3400               	retlw	0
  2750     1002  3453               	retlw	83
  2751     1003  3474               	retlw	116
  2752     1004  3461               	retlw	97
  2753     1005  3472               	retlw	114
  2754     1006  3474               	retlw	116
  2755     1007  3475               	retlw	117
  2756     1008  3470               	retlw	112
  2757     1009  3420               	retlw	32
  2758     100A  3400               	retlw	0
  2759     100B  3400               	retlw	0
  2760     100C  3420               	retlw	32
  2761     100D  3420               	retlw	32
  2762     100E  3420               	retlw	32
  2763     100F  3420               	retlw	32
  2764     1010  3420               	retlw	32
  2765     1011  3420               	retlw	32
  2766     1012  3420               	retlw	32
  2767     1013  3420               	retlw	32
  2768     1014  3400               	retlw	0
  2769     1015  3400               	retlw	0
  2770     1016  3420               	retlw	32
  2771     1017  3420               	retlw	32
  2772     1018  3420               	retlw	32
  2773     1019  3420               	retlw	32
  2774     101A  3420               	retlw	32
  2775     101B  3420               	retlw	32
  2776     101C  3420               	retlw	32
  2777     101D  3420               	retlw	32
  2778     101E  3400               	retlw	0
  2779     101F  3400               	retlw	0
  2780     1020  3420               	retlw	32
  2781     1021  3420               	retlw	32
  2782     1022  3420               	retlw	32
  2783     1023  3420               	retlw	32
  2784     1024  3420               	retlw	32
  2785     1025  3420               	retlw	32
  2786     1026  3420               	retlw	32
  2787     1027  3420               	retlw	32
  2788     1028  3400               	retlw	0
  2789     1029  3400               	retlw	0
  2790     102A  3420               	retlw	32
  2791     102B  3420               	retlw	32
  2792     102C  3420               	retlw	32
  2793     102D  3420               	retlw	32
  2794     102E  3420               	retlw	32
  2795     102F  3420               	retlw	32
  2796     1030  3420               	retlw	32
  2797     1031  3420               	retlw	32
  2798     1032  3400               	retlw	0
  2799     1033  3400               	retlw	0
  2800     1034  3420               	retlw	32
  2801     1035  3420               	retlw	32
  2802     1036  3420               	retlw	32
  2803     1037  3420               	retlw	32
  2804     1038  3420               	retlw	32
  2805     1039  3420               	retlw	32
  2806     103A  3420               	retlw	32
  2807     103B  3420               	retlw	32
  2808     103C  3400               	retlw	0
  2809     103D  3400               	retlw	0
  2810     103E  3420               	retlw	32
  2811     103F  3420               	retlw	32
  2812     1040  3420               	retlw	32
  2813     1041  3420               	retlw	32
  2814     1042  3420               	retlw	32
  2815     1043  3420               	retlw	32
  2816     1044  3420               	retlw	32
  2817     1045  3420               	retlw	32
  2818     1046  3400               	retlw	0
  2819     1047  3400               	retlw	0
  2820     1048  3420               	retlw	32
  2821     1049  3420               	retlw	32
  2822     104A  3420               	retlw	32
  2823     104B  3420               	retlw	32
  2824     104C  3420               	retlw	32
  2825     104D  3420               	retlw	32
  2826     104E  3420               	retlw	32
  2827     104F  3420               	retlw	32
  2828     1050  3400               	retlw	0
  2829     1051  3400               	retlw	0
  2830     1052  3420               	retlw	32
  2831     1053  3420               	retlw	32
  2832     1054  3420               	retlw	32
  2833     1055  3420               	retlw	32
  2834     1056  3420               	retlw	32
  2835     1057  3420               	retlw	32
  2836     1058  3420               	retlw	32
  2837     1059  3420               	retlw	32
  2838     105A  3400               	retlw	0
  2839     105B  3400               	retlw	0
  2840     105C  3420               	retlw	32
  2841     105D  3420               	retlw	32
  2842     105E  3420               	retlw	32
  2843     105F  3420               	retlw	32
  2844     1060  3420               	retlw	32
  2845     1061  3420               	retlw	32
  2846     1062  3420               	retlw	32
  2847     1063  3420               	retlw	32
  2848     1064  3444               	retlw	68
  2849     1065  342A               	retlw	42
  2850     1066  3481               	retlw	129
  2851     1067  3400               	retlw	0
  2852     1068  34BC               	retlw	188
  2853     1069  3402               	retlw	2
  2854     106A  3464               	retlw	100
  2855     106B  3400               	retlw	0
  2856     106C  343C               	retlw	60
  2857     106D  3400               	retlw	0
  2858     106E  34B4               	retlw	180
  2859     106F  3400               	retlw	0
  2860     1070  3464               	retlw	100
  2861     1071  3400               	retlw	0
  2862     1072  3401               	retlw	1
  2863     1073  3401               	retlw	1
  2864     1074  34FF               	retlw	255
  2865     1075  34FF               	retlw	255
  2866     1076  34FF               	retlw	255
  2867     1077  34FF               	retlw	255
  2868     1078  34FF               	retlw	255
  2869     1079  34FF               	retlw	255
  2870     107A  34FF               	retlw	255
  2871     107B  34FF               	retlw	255
  2872     107C  34FF               	retlw	255
  2873     107D  34FF               	retlw	255
  2874     107E  34FF               	retlw	255
  2875     107F  34FF               	retlw	255
  2876     1080  34FF               	retlw	255
  2877     1081  34FF               	retlw	255
  2878     1082  34FF               	retlw	255
  2879     1083  34FF               	retlw	255
  2880     1084  34FF               	retlw	255
  2881     1085  34FF               	retlw	255
  2882     1086  34FF               	retlw	255
  2883     1087  34FF               	retlw	255
  2884     1088  34FF               	retlw	255
  2885     1089  34FF               	retlw	255
  2886     108A  34FF               	retlw	255
  2887     108B  34FF               	retlw	255
  2888     108C  34FF               	retlw	255
  2889     108D  34FF               	retlw	255
  2890     108E  34FF               	retlw	255
  2891     108F  34FF               	retlw	255
  2892     1090  34FF               	retlw	255
  2893     1091  34FF               	retlw	255
  2894     1092  34FF               	retlw	255
  2895     1093  34FF               	retlw	255
  2896     1094  34FF               	retlw	255
  2897     1095  34FF               	retlw	255
  2898     1096  34FF               	retlw	255
  2899     1097  34FF               	retlw	255
  2900     1098  34FF               	retlw	255
  2901     1099  34FF               	retlw	255
  2902     109A  34FF               	retlw	255
  2903     109B  34FF               	retlw	255
  2904     109C  34FF               	retlw	255
  2905     109D  34FF               	retlw	255
  2906     109E  34FF               	retlw	255
  2907     109F  34FF               	retlw	255
  2908     10A0  34FF               	retlw	255
  2909     10A1  34FF               	retlw	255
  2910     10A2  34FF               	retlw	255
  2911     10A3  34FF               	retlw	255
  2912     10A4  34FF               	retlw	255
  2913     10A5  34FF               	retlw	255
  2914     10A6  34FF               	retlw	255
  2915     10A7  34FF               	retlw	255
  2916     10A8  34FF               	retlw	255
  2917     10A9  34FF               	retlw	255
  2918     10AA  34FF               	retlw	255
  2919     10AB  34FF               	retlw	255
  2920     10AC  34FF               	retlw	255
  2921     10AD  34FF               	retlw	255
  2922     10AE  34FF               	retlw	255
  2923     10AF  34FF               	retlw	255
  2924     10B0  34FF               	retlw	255
  2925     10B1  34FF               	retlw	255
  2926     10B2  34FF               	retlw	255
  2927     10B3  34FF               	retlw	255
  2928     10B4  34FF               	retlw	255
  2929     10B5  34FF               	retlw	255
  2930     10B6  34FF               	retlw	255
  2931     10B7  34FF               	retlw	255
  2932     10B8  34FF               	retlw	255
  2933     10B9  34FF               	retlw	255
  2934     10BA  34FF               	retlw	255
  2935     10BB  34FF               	retlw	255
  2936     10BC  34FF               	retlw	255
  2937     10BD  34FF               	retlw	255
  2938     10BE  34FF               	retlw	255
  2939     10BF  34FF               	retlw	255
  2940     10C0  34FF               	retlw	255
  2941     10C1  34FF               	retlw	255
  2942     10C2  34FF               	retlw	255
  2943     10C3  34FF               	retlw	255
  2944     10C4  34FF               	retlw	255
  2945     10C5  34FF               	retlw	255
  2946     10C6  34FF               	retlw	255
  2947     10C7  34FF               	retlw	255
  2948     10C8  34FF               	retlw	255
  2949     10C9  34FF               	retlw	255
  2950     10CA  34FF               	retlw	255
  2951     10CB  34FF               	retlw	255
  2952     10CC  34FF               	retlw	255
  2953     10CD  34FF               	retlw	255
  2954     10CE  34FF               	retlw	255
  2955     10CF  34FF               	retlw	255
  2956     10D0  34FF               	retlw	255
  2957     10D1  34FF               	retlw	255
  2958     10D2  34FF               	retlw	255
  2959     10D3  34FF               	retlw	255
  2960     10D4  34FF               	retlw	255
  2961     10D5  34FF               	retlw	255
  2962     10D6  34FF               	retlw	255
  2963     10D7  34FF               	retlw	255
  2964     10D8  34FF               	retlw	255
  2965     10D9  34FF               	retlw	255
  2966     10DA  34FF               	retlw	255
  2967     10DB  34FF               	retlw	255
  2968     10DC  34FF               	retlw	255
  2969     10DD  34FF               	retlw	255
  2970     10DE  34FF               	retlw	255
  2971     10DF  34FF               	retlw	255
  2972     10E0  34FF               	retlw	255
  2973     10E1  34FF               	retlw	255
  2974     10E2  34FF               	retlw	255
  2975     10E3  34FF               	retlw	255
  2976     10E4  34FF               	retlw	255
  2977     10E5  34FF               	retlw	255
  2978     10E6  34FF               	retlw	255
  2979     10E7  34FF               	retlw	255
  2980     10E8  34FF               	retlw	255
  2981     10E9  34FF               	retlw	255
  2982     10EA  34FF               	retlw	255
  2983     10EB  34FF               	retlw	255
  2984     10EC  34FF               	retlw	255
  2985     10ED  34FF               	retlw	255
  2986     10EE  34FF               	retlw	255
  2987     10EF  34FF               	retlw	255
  2988     10F0  34FF               	retlw	255
  2989     10F1  34FF               	retlw	255
  2990     10F2  34FF               	retlw	255
  2991     10F3  34FF               	retlw	255
  2992     10F4  34FF               	retlw	255
  2993     10F5  34FF               	retlw	255
  2994     10F6  34FF               	retlw	255
  2995     10F7  34FF               	retlw	255
  2996     10F8  34FF               	retlw	255
  2997     10F9  34FF               	retlw	255
  2998     10FA  34FF               	retlw	255
  2999     10FB  34FF               	retlw	255
  3000     10FC  34FF               	retlw	255
  3001     10FD  34FF               	retlw	255
  3002     10FE  34FF               	retlw	255
  3003     10FF  34FF               	retlw	255
  3004     1100                     __end_of_eeprom_init_data:
  3005                           
  3006                           	psect	stringtext3
  3007     2000                     __pstringtext3:
  3008     2000                     _NameEditChar:
  3009     2000  3420               	retlw	32
  3010     2001  3430               	retlw	48
  3011     2002  3431               	retlw	49
  3012     2003  3432               	retlw	50
  3013     2004  3433               	retlw	51
  3014     2005  3434               	retlw	52
  3015     2006  3435               	retlw	53
  3016     2007  3436               	retlw	54
  3017     2008  3437               	retlw	55
  3018     2009  3438               	retlw	56
  3019     200A  3439               	retlw	57
  3020     200B  3461               	retlw	97
  3021     200C  3462               	retlw	98
  3022     200D  3463               	retlw	99
  3023     200E  3464               	retlw	100
  3024     200F  3465               	retlw	101
  3025     2010  3466               	retlw	102
  3026     2011  3467               	retlw	103
  3027     2012  3468               	retlw	104
  3028     2013  3469               	retlw	105
  3029     2014  346A               	retlw	106
  3030     2015  346B               	retlw	107
  3031     2016  346C               	retlw	108
  3032     2017  346D               	retlw	109
  3033     2018  346E               	retlw	110
  3034     2019  346F               	retlw	111
  3035     201A  3470               	retlw	112
  3036     201B  3471               	retlw	113
  3037     201C  3472               	retlw	114
  3038     201D  3473               	retlw	115
  3039     201E  3474               	retlw	116
  3040     201F  3475               	retlw	117
  3041     2020  3476               	retlw	118
  3042     2021  3477               	retlw	119
  3043     2022  3478               	retlw	120
  3044     2023  3479               	retlw	121
  3045     2024  347A               	retlw	122
  3046     2025  3441               	retlw	65
  3047     2026  3442               	retlw	66
  3048     2027  3443               	retlw	67
  3049     2028  3444               	retlw	68
  3050     2029  3445               	retlw	69
  3051     202A  3446               	retlw	70
  3052     202B  3447               	retlw	71
  3053     202C  3448               	retlw	72
  3054     202D  3449               	retlw	73
  3055     202E  344A               	retlw	74
  3056     202F  344B               	retlw	75
  3057     2030  344C               	retlw	76
  3058     2031  344D               	retlw	77
  3059     2032  344E               	retlw	78
  3060     2033  344F               	retlw	79
  3061     2034  3450               	retlw	80
  3062     2035  3451               	retlw	81
  3063     2036  3452               	retlw	82
  3064     2037  3453               	retlw	83
  3065     2038  3454               	retlw	84
  3066     2039  3455               	retlw	85
  3067     203A  3456               	retlw	86
  3068     203B  3457               	retlw	87
  3069     203C  3458               	retlw	88
  3070     203D  3459               	retlw	89
  3071     203E  345A               	retlw	90
  3072     203F  343F               	retlw	63
  3073     2040  3421               	retlw	33
  3074     2041  342F               	retlw	47
  3075     2042  342B               	retlw	43
  3076     2043  342D               	retlw	45
  3077     2044  3423               	retlw	35
  3078     2045  3425               	retlw	37
  3079     2046  3424               	retlw	36
  3080     2047  345F               	retlw	95
  3081     2048  3400               	retlw	0
  3082     2049                     __end_of_NameEditChar:
  3083                           
  3084                           	psect	stringtext4
  3085     2800                     __pstringtext4:
  3086     2800                     _IND_VALUES:
  3087     2800  3432               	retlw	50
  3088     2801  3400               	retlw	0
  3089     2802  3464               	retlw	100
  3090     2803  3400               	retlw	0
  3091     2804  34DC               	retlw	220
  3092     2805  3400               	retlw	0
  3093     2806  34C2               	retlw	194
  3094     2807  3401               	retlw	1
  3095     2808  34E8               	retlw	232
  3096     2809  3403               	retlw	3
  3097     280A  3498               	retlw	152
  3098     280B  3408               	retlw	8
  3099     280C  3430               	retlw	48
  3100     280D  3411               	retlw	17
  3101     280E                     __end_of_IND_VALUES:
  3102                           
  3103                           	psect	stringtext5
  3104     280E                     __pstringtext5:
  3105     280E                     _CAP_VALUES:
  3106     280E  340A               	retlw	10
  3107     280F  3400               	retlw	0
  3108     2810  3416               	retlw	22
  3109     2811  3400               	retlw	0
  3110     2812  342F               	retlw	47
  3111     2813  3400               	retlw	0
  3112     2814  3464               	retlw	100
  3113     2815  3400               	retlw	0
  3114     2816  34DC               	retlw	220
  3115     2817  3400               	retlw	0
  3116     2818  34D6               	retlw	214
  3117     2819  3401               	retlw	1
  3118     281A  34E8               	retlw	232
  3119     281B  3403               	retlw	3
  3120     281C                     __end_of_CAP_VALUES:
  3121                           
  3122                           	psect	stringtext6
  3123     2828                     __pstringtext6:
  3124     2828                     _coarse_ind_value:
  3125     2828  3400               	retlw	0
  3126     2829  3401               	retlw	1
  3127     282A  3402               	retlw	2
  3128     282B  3404               	retlw	4
  3129     282C  3408               	retlw	8
  3130     282D  3410               	retlw	16
  3131     282E  3420               	retlw	32
  3132     282F  3440               	retlw	64
  3133     2830  3460               	retlw	96
  3134     2831  3470               	retlw	112
  3135     2832  347F               	retlw	127
  3136     2833                     __end_of_coarse_ind_value:
  3137                           
  3138                           	psect	stringtext7
  3139     2833                     __pstringtext7:
  3140     2833                     _coarse_cap_value:
  3141     2833  3400               	retlw	0
  3142     2834  3401               	retlw	1
  3143     2835  3402               	retlw	2
  3144     2836  3404               	retlw	4
  3145     2837  3408               	retlw	8
  3146     2838  3410               	retlw	16
  3147     2839  3420               	retlw	32
  3148     283A  3440               	retlw	64
  3149     283B  3460               	retlw	96
  3150     283C  3470               	retlw	112
  3151     283D  347F               	retlw	127
  3152     283E                     __end_of_coarse_cap_value:
  3153                           
  3154                           	psect	stringtext8
  3155     283E                     __pstringtext8:
  3156     283E                     _str_Ready:
  3157     283E  3420               	retlw	32
  3158     283F  3420               	retlw	32
  3159     2840  3452               	retlw	82
  3160     2841  3465               	retlw	101
  3161     2842  3461               	retlw	97
  3162     2843  3464               	retlw	100
  3163     2844  3479               	retlw	121
  3164     2845  3420               	retlw	32
  3165     2846  3420               	retlw	32
  3166     2847  3420               	retlw	32
  3167     2848  3400               	retlw	0
  3168     2849                     __end_of_str_Ready:
  3169                           
  3170                           	psect	stringtext9
  3171     2849                     __pstringtext9:
  3172     2849                     _str_PWR_low:
  3173     2849  3420               	retlw	32
  3174     284A  344C               	retlw	76
  3175     284B  346F               	retlw	111
  3176     284C  3477               	retlw	119
  3177     284D  3420               	retlw	32
  3178     284E  3450               	retlw	80
  3179     284F  3457               	retlw	87
  3180     2850  3452               	retlw	82
  3181     2851  3420               	retlw	32
  3182     2852  3420               	retlw	32
  3183     2853  3400               	retlw	0
  3184     2854                     __end_of_str_PWR_low:
  3185                           
  3186                           	psect	stringtext10
  3187     2854                     __pstringtext10:
  3188     2854                     _str_Break:
  3189     2854  3420               	retlw	32
  3190     2855  3420               	retlw	32
  3191     2856  3442               	retlw	66
  3192     2857  3472               	retlw	114
  3193     2858  3465               	retlw	101
  3194     2859  3461               	retlw	97
  3195     285A  346B               	retlw	107
  3196     285B  3420               	retlw	32
  3197     285C  3420               	retlw	32
  3198     285D  3420               	retlw	32
  3199     285E  3400               	retlw	0
  3200     285F                     __end_of_str_Break:
  3201                           
  3202                           	psect	stringtext11
  3203     285F                     __pstringtext11:
  3204     285F                     _str_Running:
  3205     285F  3420               	retlw	32
  3206     2860  3452               	retlw	82
  3207     2861  3475               	retlw	117
  3208     2862  346E               	retlw	110
  3209     2863  346E               	retlw	110
  3210     2864  3469               	retlw	105
  3211     2865  346E               	retlw	110
  3212     2866  3467               	retlw	103
  3213     2867  3420               	retlw	32
  3214     2868  3420               	retlw	32
  3215     2869  3400               	retlw	0
  3216     286A                     __end_of_str_Running:
  3217                           
  3218                           	psect	stringtext12
  3219     286A                     __pstringtext12:
  3220     286A                     _str_WaitForHF:
  3221     286A  3452               	retlw	82
  3222     286B  3446               	retlw	70
  3223     286C  3420               	retlw	32
  3224     286D  346E               	retlw	110
  3225     286E  3465               	retlw	101
  3226     286F  3465               	retlw	101
  3227     2870  3464               	retlw	100
  3228     2871  3465               	retlw	101
  3229     2872  3464               	retlw	100
  3230     2873  3420               	retlw	32
  3231     2874  3400               	retlw	0
  3232     2875                     __end_of_str_WaitForHF:
  3233                           
  3234                           	psect	stringtext13
  3235     2875                     __pstringtext13:
  3236     2875                     _str_SpaceLine:
  3237     2875  3420               	retlw	32
  3238     2876  3420               	retlw	32
  3239     2877  3420               	retlw	32
  3240     2878  3420               	retlw	32
  3241     2879  3420               	retlw	32
  3242     287A  3420               	retlw	32
  3243     287B  3420               	retlw	32
  3244     287C  3420               	retlw	32
  3245     287D  3420               	retlw	32
  3246     287E  3420               	retlw	32
  3247     287F  3400               	retlw	0
  3248     2880                     __end_of_str_SpaceLine:
  3249                           
  3250                           	psect	stringtext14
  3251     2880                     __pstringtext14:
  3252     2880                     _str_MENU_About:
  3253     2880  3441               	retlw	65
  3254     2881  3462               	retlw	98
  3255     2882  346F               	retlw	111
  3256     2883  3475               	retlw	117
  3257     2884  3474               	retlw	116
  3258     2885  3420               	retlw	32
  3259     2886  3420               	retlw	32
  3260     2887  3420               	retlw	32
  3261     2888  3420               	retlw	32
  3262     2889  3420               	retlw	32
  3263     288A  3400               	retlw	0
  3264     288B                     __end_of_str_MENU_About:
  3265                           
  3266                           	psect	stringtext15
  3267     288B                     __pstringtext15:
  3268     288B                     _str_MENU_Setup:
  3269     288B  3453               	retlw	83
  3270     288C  3465               	retlw	101
  3271     288D  3474               	retlw	116
  3272     288E  3475               	retlw	117
  3273     288F  3470               	retlw	112
  3274     2890  3420               	retlw	32
  3275     2891  3420               	retlw	32
  3276     2892  3420               	retlw	32
  3277     2893  3420               	retlw	32
  3278     2894  3420               	retlw	32
  3279     2895  3400               	retlw	0
  3280     2896                     __end_of_str_MENU_Setup:
  3281                           
  3282                           	psect	stringtext16
  3283     2896                     __pstringtext16:
  3284     2896                     _str_MENU_Cal:
  3285     2896  3443               	retlw	67
  3286     2897  3461               	retlw	97
  3287     2898  346C               	retlw	108
  3288     2899  3469               	retlw	105
  3289     289A  3462               	retlw	98
  3290     289B  3472               	retlw	114
  3291     289C  3461               	retlw	97
  3292     289D  3474               	retlw	116
  3293     289E  3465               	retlw	101
  3294     289F  3420               	retlw	32
  3295     28A0  3400               	retlw	0
  3296     28A1                     __end_of_str_MENU_Cal:
  3297                           
  3298                           	psect	stringtext17
  3299     28A1                     __pstringtext17:
  3300     28A1                     _str_MENU_RelTest:
  3301     28A1  3454               	retlw	84
  3302     28A2  3465               	retlw	101
  3303     28A3  3473               	retlw	115
  3304     28A4  3474               	retlw	116
  3305     28A5  3420               	retlw	32
  3306     28A6  3420               	retlw	32
  3307     28A7  3420               	retlw	32
  3308     28A8  3420               	retlw	32
  3309     28A9  3420               	retlw	32
  3310     28AA  3420               	retlw	32
  3311     28AB  3400               	retlw	0
  3312     28AC                     __end_of_str_MENU_RelTest:
  3313                           
  3314                           	psect	stringtext18
  3315     28AC                     __pstringtext18:
  3316     28AC                     _str_MENU_Sleep:
  3317     28AC  3453               	retlw	83
  3318     28AD  346C               	retlw	108
  3319     28AE  3465               	retlw	101
  3320     28AF  3465               	retlw	101
  3321     28B0  3470               	retlw	112
  3322     28B1  3420               	retlw	32
  3323     28B2  3420               	retlw	32
  3324     28B3  3420               	retlw	32
  3325     28B4  3420               	retlw	32
  3326     28B5  3420               	retlw	32
  3327     28B6  3400               	retlw	0
  3328     28B7                     __end_of_str_MENU_Sleep:
  3329                           
  3330                           	psect	stringtext19
  3331     28B7                     __pstringtext19:
  3332     28B7                     _str_MENU_TunePar:
  3333     28B7  3454               	retlw	84
  3334     28B8  3475               	retlw	117
  3335     28B9  346E               	retlw	110
  3336     28BA  3469               	retlw	105
  3337     28BB  346E               	retlw	110
  3338     28BC  3467               	retlw	103
  3339     28BD  3420               	retlw	32
  3340     28BE  3420               	retlw	32
  3341     28BF  3420               	retlw	32
  3342     28C0  3420               	retlw	32
  3343     28C1  3400               	retlw	0
  3344     28C2                     __end_of_str_MENU_TunePar:
  3345                           
  3346                           	psect	stringtext20
  3347     28C2                     __pstringtext20:
  3348     28C2                     _str_MENU_Load:
  3349     28C2  344C               	retlw	76
  3350     28C3  346F               	retlw	111
  3351     28C4  3461               	retlw	97
  3352     28C5  3464               	retlw	100
  3353     28C6  3420               	retlw	32
  3354     28C7  3454               	retlw	84
  3355     28C8  3475               	retlw	117
  3356     28C9  346E               	retlw	110
  3357     28CA  3465               	retlw	101
  3358     28CB  3420               	retlw	32
  3359     28CC  3400               	retlw	0
  3360     28CD                     __end_of_str_MENU_Load:
  3361                           
  3362                           	psect	stringtext21
  3363     28CD                     __pstringtext21:
  3364     28CD                     _str_MENU_Save:
  3365     28CD  3453               	retlw	83
  3366     28CE  3461               	retlw	97
  3367     28CF  3476               	retlw	118
  3368     28D0  3465               	retlw	101
  3369     28D1  3420               	retlw	32
  3370     28D2  3454               	retlw	84
  3371     28D3  3475               	retlw	117
  3372     28D4  346E               	retlw	110
  3373     28D5  3465               	retlw	101
  3374     28D6  3420               	retlw	32
  3375     28D7  3400               	retlw	0
  3376     28D8                     __end_of_str_MENU_Save:
  3377                           
  3378                           	psect	stringtext22
  3379     28D8                     __pstringtext22:
  3380     28D8                     _str_MENU_Bypass:
  3381     28D8  3442               	retlw	66
  3382     28D9  3479               	retlw	121
  3383     28DA  3470               	retlw	112
  3384     28DB  3461               	retlw	97
  3385     28DC  3473               	retlw	115
  3386     28DD  3473               	retlw	115
  3387     28DE  3420               	retlw	32
  3388     28DF  3420               	retlw	32
  3389     28E0  3420               	retlw	32
  3390     28E1  3420               	retlw	32
  3391     28E2  3400               	retlw	0
  3392     28E3                     __end_of_str_MENU_Bypass:
  3393                           
  3394                           	psect	stringtext23
  3395     28E3                     __pstringtext23:
  3396     28E3                     _str_MENU_Reset:
  3397     28E3  3452               	retlw	82
  3398     28E4  3465               	retlw	101
  3399     28E5  3473               	retlw	115
  3400     28E6  3465               	retlw	101
  3401     28E7  3474               	retlw	116
  3402     28E8  3420               	retlw	32
  3403     28E9  3420               	retlw	32
  3404     28EA  3420               	retlw	32
  3405     28EB  3420               	retlw	32
  3406     28EC  3420               	retlw	32
  3407     28ED  3400               	retlw	0
  3408     28EE                     __end_of_str_MENU_Reset:
  3409                           
  3410                           	psect	stringtext24
  3411     28EE                     __pstringtext24:
  3412     28EE                     _str_YAF:
  3413     28EE  3445               	retlw	69
  3414     28EF  3458               	retlw	88
  3415     28F0  3454               	retlw	84
  3416     28F1  342D               	retlw	45
  3417     28F2  3459               	retlw	89
  3418     28F3  3441               	retlw	65
  3419     28F4  3446               	retlw	70
  3420     28F5  342D               	retlw	45
  3421     28F6  3432               	retlw	50
  3422     28F7  3400               	retlw	0
  3423     28F8                     __end_of_str_YAF:
  3424                           
  3425                           	psect	stringtext25
  3426     28F8                     __pstringtext25:
  3427     28F8                     _str_Bypass:
  3428     28F8  3420               	retlw	32
  3429     28F9  3442               	retlw	66
  3430     28FA  3479               	retlw	121
  3431     28FB  3470               	retlw	112
  3432     28FC  3461               	retlw	97
  3433     28FD  3473               	retlw	115
  3434     28FE  3473               	retlw	115
  3435     28FF  3420               	retlw	32
  3436     2900  3400               	retlw	0
  3437     2901                     __end_of_str_Bypass:
  3438                           
  3439                           	psect	stringtext26
  3440     2901                     __pstringtext26:
  3441     2901                     _str__Tune_:
  3442     2901  3420               	retlw	32
  3443     2902  3454               	retlw	84
  3444     2903  3475               	retlw	117
  3445     2904  346E               	retlw	110
  3446     2905  3469               	retlw	105
  3447     2906  346E               	retlw	110
  3448     2907  3467               	retlw	103
  3449     2908  3420               	retlw	32
  3450     2909  3400               	retlw	0
  3451     290A                     __end_of_str__Tune_:
  3452                           
  3453                           	psect	stringtext27
  3454     290A                     __pstringtext27:
  3455     290A                     _str_designed:
  3456     290A  3466               	retlw	102
  3457     290B  3469               	retlw	105
  3458     290C  3472               	retlw	114
  3459     290D  346D               	retlw	109
  3460     290E  3477               	retlw	119
  3461     290F  3461               	retlw	97
  3462     2910  3472               	retlw	114
  3463     2911  3465               	retlw	101
  3464     2912  3400               	retlw	0
  3465     2913                     __end_of_str_designed:
  3466                           
  3467                           	psect	stringtext28
  3468     2913                     __pstringtext28:
  3469     2913                     _str_Hardware:
  3470     2913  3420               	retlw	32
  3471     2914  3446               	retlw	70
  3472     2915  346F               	retlw	111
  3473     2916  3472               	retlw	114
  3474     2917  346B               	retlw	107
  3475     2918  3465               	retlw	101
  3476     2919  3464               	retlw	100
  3477     291A  3420               	retlw	32
  3478     291B  3400               	retlw	0
  3479     291C                     __end_of_str_Hardware:
  3480                           
  3481                           	psect	stringtext29
  3482     291C                     __pstringtext29:
  3483     291C                     _str_Firmware:
  3484     291C  3466               	retlw	102
  3485     291D  3469               	retlw	105
  3486     291E  3472               	retlw	114
  3487     291F  346D               	retlw	109
  3488     2920  3477               	retlw	119
  3489     2921  3461               	retlw	97
  3490     2922  3472               	retlw	114
  3491     2923  3465               	retlw	101
  3492     2924  3400               	retlw	0
  3493     2925                     __end_of_str_Firmware:
  3494                           
  3495                           	psect	stringtext30
  3496     2925                     __pstringtext30:
  3497     2925                     _str_YetAnother:
  3498     2925  344F               	retlw	79
  3499     2926  3472               	retlw	114
  3500     2927  3469               	retlw	105
  3501     2928  3467               	retlw	103
  3502     2929  3469               	retlw	105
  3503     292A  346E               	retlw	110
  3504     292B  3461               	retlw	97
  3505     292C  346C               	retlw	108
  3506     292D  3400               	retlw	0
  3507     292E                     __end_of_str_YetAnother:
  3508                           
  3509                           	psect	stringtext31
  3510     292E                     __pstringtext31:
  3511     292E                     _str_ATU100EXT:
  3512     292E  3441               	retlw	65
  3513     292F  3454               	retlw	84
  3514     2930  3455               	retlw	85
  3515     2931  342D               	retlw	45
  3516     2932  3431               	retlw	49
  3517     2933  3430               	retlw	48
  3518     2934  3430               	retlw	48
  3519     2935  3400               	retlw	0
  3520     2936                     __end_of_str_ATU100EXT:
  3521                           
  3522                           	psect	stringtext32
  3523     2936                     __pstringtext32:
  3524     2936                     _menuStartupSave:
  3525     2936  3400               	retlw	0
  3526     2937  3400               	retlw	0
  3527     2938  340B               	retlw	low _MENU_StartupSave_Init
  3528     2939  341D               	retlw	high _MENU_StartupSave_Init
  3529     293A  34FA               	retlw	low _MENU_StartupSave_Run
  3530     293B  341B               	retlw	high _MENU_StartupSave_Run
  3531     293C                     __end_of_menuStartupSave:
  3532                           
  3533                           	psect	stringtext33
  3534     293C                     __pstringtext33:
  3535     293C                     _menuNameEdit:
  3536     293C  3400               	retlw	0
  3537     293D  3400               	retlw	0
  3538     293E  34D3               	retlw	low _MENU_NameEdit_Init
  3539     293F  341C               	retlw	high _MENU_NameEdit_Init
  3540     2940  34C0               	retlw	low _MENU_NameEdit_Run
  3541     2941  3416               	retlw	high _MENU_NameEdit_Run
  3542     2942                     __end_of_menuNameEdit:
  3543                           
  3544                           	psect	stringtext34
  3545     2942                     __pstringtext34:
  3546     2942                     _menuTune:
  3547     2942  3400               	retlw	0
  3548     2943  3400               	retlw	0
  3549     2944  3427               	retlw	low _MENU_Tune_Init
  3550     2945  3419               	retlw	high _MENU_Tune_Init
  3551     2946  34B7               	retlw	low _MENU_Tune_Run
  3552     2947  3419               	retlw	high _MENU_Tune_Run
  3553     2948                     __end_of_menuTune:
  3554                           
  3555                           	psect	stringtext35
  3556     2948                     __pstringtext35:
  3557     2948                     _menuCal:
  3558     2948  3496               	retlw	low (_str_MENU_Cal| (0+32768))
  3559     2949  34A8               	retlw	high (_str_MENU_Cal| (0+32768))
  3560     294A  34B0               	retlw	low _MENU_CalPWR_Init
  3561     294B  3418               	retlw	high _MENU_CalPWR_Init
  3562     294C  345F               	retlw	low _MENU_CalPWR_Run
  3563     294D  3405               	retlw	high _MENU_CalPWR_Run
  3564     294E                     __end_of_menuCal:
  3565                           
  3566                           	psect	stringtext36
  3567     294E                     __pstringtext36:
  3568     294E                     _menuRelTest:
  3569     294E  34A1               	retlw	low (_str_MENU_RelTest| (0+32768))
  3570     294F  34A8               	retlw	high (_str_MENU_RelTest| (0+32768))
  3571     2950  3477               	retlw	low _MENU_RelTest_Init
  3572     2951  3418               	retlw	high _MENU_RelTest_Init
  3573     2952  3409               	retlw	low _MENU_RelTest_Run
  3574     2953  340C               	retlw	high _MENU_RelTest_Run
  3575     2954                     __end_of_menuRelTest:
  3576                           
  3577                           	psect	stringtext37
  3578     2954                     __pstringtext37:
  3579     2954                     _menuSleep:
  3580     2954  34AC               	retlw	low (_str_MENU_Sleep| (0+32768))
  3581     2955  34A8               	retlw	high (_str_MENU_Sleep| (0+32768))
  3582     2956  340E               	retlw	low _MENU_Sleep_Init
  3583     2957  341A               	retlw	high _MENU_Sleep_Init
  3584     2958  342E               	retlw	low _MENU_Sleep_Run
  3585     2959  3416               	retlw	high _MENU_Sleep_Run
  3586     295A                     __end_of_menuSleep:
  3587                           
  3588                           	psect	stringtext38
  3589     295A                     __pstringtext38:
  3590     295A                     _menuTParam:
  3591     295A  34B7               	retlw	low (_str_MENU_TunePar| (0+32768))
  3592     295B  34A8               	retlw	high (_str_MENU_TunePar| (0+32768))
  3593     295C  3481               	retlw	low _MENU_TParam_Init
  3594     295D  341D               	retlw	high _MENU_TParam_Init
  3595     295E  343F               	retlw	low _MENU_TParam_Run
  3596     295F  340B               	retlw	high _MENU_TParam_Run
  3597     2960                     __end_of_menuTParam:
  3598                           
  3599                           	psect	stringtext39
  3600     2960                     __pstringtext39:
  3601     2960                     _menuAbout:
  3602     2960  3480               	retlw	low (_str_MENU_About| (0+32768))
  3603     2961  34A8               	retlw	high (_str_MENU_About| (0+32768))
  3604     2962  3465               	retlw	low _MENU_About_Init
  3605     2963  341C               	retlw	high _MENU_About_Init
  3606     2964  3405               	retlw	low _MENU_About_Run
  3607     2965  341E               	retlw	high _MENU_About_Run
  3608     2966                     __end_of_menuAbout:
  3609                           
  3610                           	psect	stringtext40
  3611     2966                     __pstringtext40:
  3612     2966                     _menuLoad:
  3613     2966  34C2               	retlw	low (_str_MENU_Load| (0+32768))
  3614     2967  34A8               	retlw	high (_str_MENU_Load| (0+32768))
  3615     2968  3400               	retlw	low _MENU_MemoryLoad_Init
  3616     2969  3418               	retlw	high _MENU_MemoryLoad_Init
  3617     296A  3417               	retlw	low _MENU_Memory_Run
  3618     296B  3415               	retlw	high _MENU_Memory_Run
  3619     296C                     __end_of_menuLoad:
  3620                           
  3621                           	psect	stringtext41
  3622     296C                     __pstringtext41:
  3623     296C                     _menuSave:
  3624     296C  34CD               	retlw	low (_str_MENU_Save| (0+32768))
  3625     296D  34A8               	retlw	high (_str_MENU_Save| (0+32768))
  3626     296E  346C               	retlw	low _MENU_MemorySave_Init
  3627     296F  3427               	retlw	high _MENU_MemorySave_Init
  3628     2970  3417               	retlw	low _MENU_Memory_Run
  3629     2971  3415               	retlw	high _MENU_Memory_Run
  3630     2972                     __end_of_menuSave:
  3631                           
  3632                           	psect	stringtext42
  3633     2972                     __pstringtext42:
  3634     2972                     _menuReset:
  3635     2972  34E3               	retlw	low (_str_MENU_Reset| (0+32768))
  3636     2973  34A8               	retlw	high (_str_MENU_Reset| (0+32768))
  3637     2974  34EA               	retlw	low _MENU_Reset_Init
  3638     2975  3427               	retlw	high _MENU_Reset_Init
  3639     2976  3400               	retlw	0
  3640     2977  3400               	retlw	0
  3641     2978                     __end_of_menuReset:
  3642                           
  3643                           	psect	stringtext43
  3644     2978                     __pstringtext43:
  3645     2978                     _menuBypass:
  3646     2978  34D8               	retlw	low (_str_MENU_Bypass| (0+32768))
  3647     2979  34A8               	retlw	high (_str_MENU_Bypass| (0+32768))
  3648     297A  34BF               	retlw	low _MENU_Bypass_Init
  3649     297B  3427               	retlw	high _MENU_Bypass_Init
  3650     297C  3400               	retlw	0
  3651     297D  3400               	retlw	0
  3652     297E                     __end_of_menuBypass:
  3653                           
  3654                           	psect	stringtext44
  3655     297E                     __pstringtext44:
  3656     297E                     _menuSubSetup:
  3657     297E  348B               	retlw	low (_str_MENU_Setup| (0+32768))
  3658     297F  34A8               	retlw	high (_str_MENU_Setup| (0+32768))
  3659     2980  34AA               	retlw	low _MENU_SubSetup_Init
  3660     2981  3427               	retlw	high _MENU_SubSetup_Init
  3661     2982  3444               	retlw	low _MENU_Sub_Run
  3662     2983  3412               	retlw	high _MENU_Sub_Run
  3663     2984                     __end_of_menuSubSetup:
  3664                           
  3665                           	psect	stringtext45
  3666     2984                     __pstringtext45:
  3667     2984                     _menuSubTop:
  3668     2984  3400               	retlw	0
  3669     2985  3400               	retlw	0
  3670     2986  3495               	retlw	low _MENU_SubTop_Init
  3671     2987  3427               	retlw	high _MENU_SubTop_Init
  3672     2988  3444               	retlw	low _MENU_Sub_Run
  3673     2989  3412               	retlw	high _MENU_Sub_Run
  3674     298A                     __end_of_menuSubTop:
  3675                           
  3676                           	psect	stringtext46
  3677     298A                     __pstringtext46:
  3678     298A                     _menuMain:
  3679     298A  3400               	retlw	0
  3680     298B  3400               	retlw	0
  3681     298C  34F8               	retlw	low _MENU_Main_Init
  3682     298D  341A               	retlw	high _MENU_Main_Init
  3683     298E  34A3               	retlw	low _MENU_Main_Run
  3684     298F  340E               	retlw	high _MENU_Main_Run
  3685     2990                     __end_of_menuMain:
  3686                           
  3687                           	psect	stringtext47
  3688     2990                     __pstringtext47:
  3689     2990                     _str_Start:
  3690     2990  3453               	retlw	83
  3691     2991  3474               	retlw	116
  3692     2992  3461               	retlw	97
  3693     2993  3472               	retlw	114
  3694     2994  3474               	retlw	116
  3695     2995  3400               	retlw	0
  3696     2996                     __end_of_str_Start:
  3697                           
  3698                           	psect	stringtext48
  3699     2996                     __pstringtext48:
  3700     2996                     _str_Sleep:
  3701     2996  3453               	retlw	83
  3702     2997  346C               	retlw	108
  3703     2998  3465               	retlw	101
  3704     2999  3465               	retlw	101
  3705     299A  3470               	retlw	112
  3706     299B  3400               	retlw	0
  3707     299C                     __end_of_str_Sleep:
  3708                           
  3709                           	psect	stringtext49
  3710     299C                     __pstringtext49:
  3711     299C                     _str_Delay:
  3712     299C  3444               	retlw	68
  3713     299D  3465               	retlw	101
  3714     299E  346C               	retlw	108
  3715     299F  3461               	retlw	97
  3716     29A0  3479               	retlw	121
  3717     29A1  3400               	retlw	0
  3718     29A2                     __end_of_str_Delay:
  3719                           
  3720                           	psect	stringtext50
  3721     29A2                     __pstringtext50:
  3722     29A2                     _str_Point:
  3723     29A2  3450               	retlw	80
  3724     29A3  346F               	retlw	111
  3725     29A4  3469               	retlw	105
  3726     29A5  346E               	retlw	110
  3727     29A6  3474               	retlw	116
  3728     29A7  3400               	retlw	0
  3729     29A8                     __end_of_str_Point:
  3730                           
  3731                           	psect	stringtext51
  3732     29A8                     __pstringtext51:
  3733     29A8                     _str_Power:
  3734     29A8  3450               	retlw	80
  3735     29A9  346F               	retlw	111
  3736     29AA  3477               	retlw	119
  3737     29AB  3465               	retlw	101
  3738     29AC  3472               	retlw	114
  3739     29AD  3400               	retlw	0
  3740     29AE                     __end_of_str_Power:
  3741                           
  3742                           	psect	stringtext52
  3743     29AE                     __pstringtext52:
  3744     29AE                     _str_DG4SN:
  3745     29AE  3444               	retlw	68
  3746     29AF  3447               	retlw	71
  3747     29B0  3434               	retlw	52
  3748     29B1  3453               	retlw	83
  3749     29B2  344E               	retlw	78
  3750     29B3  3400               	retlw	0
  3751     29B4                     __end_of_str_DG4SN:
  3752                           
  3753                           	psect	stringtext53
  3754     29B4                     __pstringtext53:
  3755     29B4                     _str_N7DCC:
  3756     29B4  3453               	retlw	83
  3757     29B5  3450               	retlw	80
  3758     29B6  3436               	retlw	54
  3759     29B7  3450               	retlw	80
  3760     29B8  3457               	retlw	87
  3761     29B9  3400               	retlw	0
  3762     29BA                     __end_of_str_N7DCC:
  3763                           
  3764                           	psect	stringtext54
  3765     29BA                     __pstringtext54:
  3766     29BA                     _str_Version:
  3767     29BA  3456               	retlw	86
  3768     29BB  3431               	retlw	49
  3769     29BC  342E               	retlw	46
  3770     29BD  3430               	retlw	48
  3771     29BE  3430               	retlw	48
  3772     29BF  3400               	retlw	0
  3773     29C0                     __end_of_str_Version:
  3774                           
  3775                           	psect	stringtext55
  3776     29C0                     __pstringtext55:
  3777     29C0                     _str_Save:
  3778     29C0  3453               	retlw	83
  3779     29C1  3461               	retlw	97
  3780     29C2  3476               	retlw	118
  3781     29C3  3465               	retlw	101
  3782     29C4  3400               	retlw	0
  3783     29C5                     __end_of_str_Save:
  3784                           
  3785                           	psect	stringtext56
  3786     29C5                     __pstringtext56:
  3787     29C5                     _str_Stop:
  3788     29C5  3453               	retlw	83
  3789     29C6  3474               	retlw	116
  3790     29C7  346F               	retlw	111
  3791     29C8  3470               	retlw	112
  3792     29C9  3400               	retlw	0
  3793     29CA                     __end_of_str_Stop:
  3794                           
  3795                           	psect	stringtext57
  3796     29CA                     __pstringtext57:
  3797     29CA                     _str_Auto:
  3798     29CA  3441               	retlw	65
  3799     29CB  3475               	retlw	117
  3800     29CC  3474               	retlw	116
  3801     29CD  346F               	retlw	111
  3802     29CE  3400               	retlw	0
  3803     29CF                     __end_of_str_Auto:
  3804                           
  3805                           	psect	stringtext58
  3806     29CF                     __pstringtext58:
  3807     29CF                     _str_AUTO:
  3808     29CF  3441               	retlw	65
  3809     29D0  3455               	retlw	85
  3810     29D1  3454               	retlw	84
  3811     29D2  344F               	retlw	79
  3812     29D3  3400               	retlw	0
  3813     29D4                     __end_of_str_AUTO:
  3814                           
  3815                           	psect	stringtext59
  3816     29D4                     __pstringtext59:
  3817     29D4                     _str_L_C:
  3818     29D4  343E               	retlw	62
  3819     29D5  344C               	retlw	76
  3820     29D6  342D               	retlw	45
  3821     29D7  3443               	retlw	67
  3822     29D8  3400               	retlw	0
  3823     29D9                     __end_of_str_L_C:
  3824                           
  3825                           	psect	stringtext60
  3826     29D9                     __pstringtext60:
  3827     29D9                     _str_C_L:
  3828     29D9  343E               	retlw	62
  3829     29DA  3443               	retlw	67
  3830     29DB  342D               	retlw	45
  3831     29DC  344C               	retlw	76
  3832     29DD  3400               	retlw	0
  3833     29DE                     __end_of_str_C_L:
  3834                           
  3835                           	psect	stringtext61
  3836     29DE                     __pstringtext61:
  3837     29DE                     _str_On:
  3838     29DE  3420               	retlw	32
  3839     29DF  344F               	retlw	79
  3840     29E0  346E               	retlw	110
  3841     29E1  3400               	retlw	0
  3842     29E2                     __end_of_str_On:
  3843                           
  3844                           	psect	stringtext62
  3845     29E2                     __pstringtext62:
  3846     29E2                     _str_Off:
  3847     29E2  344F               	retlw	79
  3848     29E3  3466               	retlw	102
  3849     29E4  3466               	retlw	102
  3850     29E5  3400               	retlw	0
  3851     29E6                     __end_of_str_Off:
  3852                           
  3853                           	psect	stringtext63
  3854     29E6                     __pstringtext63:
  3855     29E6                     _str_Esc:
  3856     29E6  3445               	retlw	69
  3857     29E7  3473               	retlw	115
  3858     29E8  3463               	retlw	99
  3859     29E9  3400               	retlw	0
  3860     29EA                     __end_of_str_Esc:
  3861                           
  3862                           	psect	stringtext64
  3863     29EA                     __pstringtext64:
  3864     29EA                     _str_PWR:
  3865     29EA  3450               	retlw	80
  3866     29EB  3457               	retlw	87
  3867     29EC  3452               	retlw	82
  3868     29ED  3400               	retlw	0
  3869     29EE                     __end_of_str_PWR:
  3870                           
  3871                           	psect	stringtext65
  3872     29EE                     __pstringtext65:
  3873     29EE                     _str_SWR:
  3874     29EE  3453               	retlw	83
  3875     29EF  3457               	retlw	87
  3876     29F0  3452               	retlw	82
  3877     29F1  3400               	retlw	0
  3878     29F2                     __end_of_str_SWR:
  3879                           
  3880                           	psect	stringtext66
  3881     29F2                     __pstringtext66:
  3882     29F2                     _str_Ok:
  3883     29F2  344F               	retlw	79
  3884     29F3  346B               	retlw	107
  3885     29F4  3400               	retlw	0
  3886     29F5                     __end_of_str_Ok:
  3887                           
  3888                           	psect	stringtext67
  3889     29F5                     __pstringtext67:
  3890     29F5                     _str_C_:
  3891     29F5  3443               	retlw	67
  3892     29F6  343D               	retlw	61
  3893     29F7  3400               	retlw	0
  3894     29F8                     __end_of_str_C_:
  3895                           
  3896                           	psect	stringtext68
  3897     29F8                     __pstringtext68:
  3898     29F8                     _str_L_:
  3899     29F8  344C               	retlw	76
  3900     29F9  343D               	retlw	61
  3901     29FA  3400               	retlw	0
  3902     29FB                     __end_of_str_L_:
  3903                           
  3904                           	psect	stringtext69
  3905     29FB                     __pstringtext69:
  3906     29FB                     _str_by:
  3907     29FB  3462               	retlw	98
  3908     29FC  3479               	retlw	121
  3909     29FD  3400               	retlw	0
  3910     29FE                     __end_of_str_by:
  3911                           
  3912                           	psect	stringtext70
  3913     281C                     __pstringtext70:
  3914     281C                     _str_sleeping:
  3915     281C  3400               	retlw	0
  3916     281D                     __end_of_str_sleeping:
  3917     000D                     _PORTBbits      set	13
  3918     0011                     _PIR1bits       set	17
  3919     000B                     _INTCONbits     set	11
  3920     001B                     _PR2            set	27
  3921     001C                     _T2CONbits      set	28
  3922     009B                     _ADRESL         set	155
  3923     009C                     _ADRESH         set	156
  3924     009D                     _ADCON0bits     set	157
  3925     009E                     _ADCON1bits     set	158
  3926     0095                     _OPTION_REGbits set	149
  3927     008C                     _TRISAbits      set	140
  3928     008D                     _TRISBbits      set	141
  3929     008E                     _TRISCbits      set	142
  3930     0091                     _PIE1bits       set	145
  3931     0099                     _OSCCON         set	153
  3932     0117                     _FVRCON         set	279
  3933     010E                     _LATCbits       set	270
  3934     010C                     _LATAbits       set	268
  3935     010D                     _LATBbits       set	269
  3936     0113                     _CM2CON0bits    set	275
  3937     0111                     _CM1CON0bits    set	273
  3938     010E                     _LATC           set	270
  3939     010D                     _LATB           set	269
  3940     010C                     _LATA           set	268
  3941     0196                     _EECON2         set	406
  3942     0195                     _EECON1bits     set	405
  3943     0193                     _EEDATL         set	403
  3944     0191                     _EEADRL         set	401
  3945     018C                     _ANSELAbits     set	396
  3946     018D                     _ANSELBbits     set	397
  3947     020D                     _WPUBbits       set	525
  3948     281D                     STR_1:
  3949     281D  3452               	retlw	82	;'R'
  3950     281E  3465               	retlw	101	;'e'
  3951     281F  3473               	retlw	115	;'s'
  3952     2820  3474               	retlw	116	;'t'
  3953     2821  3461               	retlw	97	;'a'
  3954     2822  3472               	retlw	114	;'r'
  3955     2823  3474               	retlw	116	;'t'
  3956     2824  3469               	retlw	105	;'i'
  3957     2825  346E               	retlw	110	;'n'
  3958     2826  3467               	retlw	103	;'g'
  3959     2827  3400               	retlw	0
  3960                           
  3961                           	psect	stringtext71
  3962     0000                     __pstringtext71:
  3963                           
  3964                           	psect	cinit
  3965     0017                     start_initialization:	
  3966                           ; #config settings
  3967                           
  3968     0017                     __initialization:
  3969                           
  3970                           ; Initialize objects allocated to BANK1
  3971     0017  3010               	movlw	low __pidataBANK1
  3972     0018  0084               	movwf	4
  3973     0019  30A7               	movlw	(high __pidataBANK1)| (0+128)
  3974     001A  0085               	movwf	5
  3975     001B  30DB               	movlw	low __pdataBANK1
  3976     001C  0086               	movwf	6
  3977     001D  3000               	movlw	high __pdataBANK1
  3978     001E  0087               	movwf	7
  3979     001F  3010               	movlw	16
  3980     0020  31A6  26CA  3180   	fcall	init_ram
  3981                           
  3982                           ; Initialize objects allocated to BANK2
  3983     0023  3002               	movlw	low __pidataBANK2
  3984     0024  0084               	movwf	4
  3985     0025  3091               	movlw	(high __pidataBANK2)| (0+128)
  3986     0026  0085               	movwf	5
  3987     0027  3048               	movlw	low __pdataBANK2
  3988     0028  0086               	movwf	6
  3989     0029  3001               	movlw	high __pdataBANK2
  3990     002A  0087               	movwf	7
  3991     002B  3020               	movlw	32
  3992     002C  31A6  26CA  3180   	fcall	init_ram
  3993                           
  3994                           ; Clear objects allocated to BANK0
  3995     002F  3053               	movlw	low __pbssBANK0
  3996     0030  0084               	movwf	4
  3997     0031  3000               	movlw	high __pbssBANK0
  3998     0032  0085               	movwf	5
  3999     0033  3015               	movlw	21
  4000     0034  31A6  26C4  3180   	fcall	clear_ram0
  4001                           
  4002                           ; Clear objects allocated to BANK1
  4003     0037  30A0               	movlw	low __pbssBANK1
  4004     0038  0084               	movwf	4
  4005     0039  3000               	movlw	high __pbssBANK1
  4006     003A  0085               	movwf	5
  4007     003B  303B               	movlw	59
  4008     003C  31A6  26C4  3180   	fcall	clear_ram0
  4009                           
  4010                           ; Clear objects allocated to BANK2
  4011     003F  3020               	movlw	low __pbssBANK2
  4012     0040  0084               	movwf	4
  4013     0041  3001               	movlw	high __pbssBANK2
  4014     0042  0085               	movwf	5
  4015     0043  3028               	movlw	40
  4016     0044  31A6  26C4  3180   	fcall	clear_ram0
  4017     0047                     end_of_initialization:	
  4018                           ;End of C runtime variable initialization code
  4019                           
  4020     0047                     __end_of__initialization:
  4021     0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4022     0048  0020               	movlb	0
  4023     0049  3193  2BA0         	ljmp	_main	;jump to C main() function
  4024                           
  4025                           	psect	bssBANK0
  4026     0053                     __pbssBANK0:
  4027     0053                     _current_menu:
  4028     0053                     	ds	2
  4029     0055                     TUNE_Run@best_ind_step:
  4030     0055                     	ds	1
  4031     0056                     TUNE_Run@best_cap_step:
  4032     0056                     	ds	1
  4033     0057                     TUNE_Run@cap_step:
  4034     0057                     	ds	1
  4035     0058                     TUNE_Run@ind_step:
  4036     0058                     	ds	1
  4037     0059                     _BUTTON_count:
  4038     0059                     	ds	1
  4039     005A                     _DISP_i2_addr:
  4040     005A                     	ds	1
  4041     005B                     _MENU_var:
  4042     005B                     	ds	13
  4043                           
  4044                           	psect	bssBANK1
  4045     00A0                     __pbssBANK1:
  4046     00A0                     TUNE_Run@fine_ind:
  4047     00A0                     	ds	3
  4048     00A3                     TUNE_Run@fine_cap:
  4049     00A3                     	ds	3
  4050     00A6                     TUNE_Run@best_last_row_swr:
  4051     00A6                     	ds	2
  4052     00A8                     TUNE_Run@best_row_swr:
  4053     00A8                     	ds	2
  4054     00AA                     TUNE_Run@best_swr:
  4055     00AA                     	ds	2
  4056     00AC                     TUNE_Run@fine_ind_diff_high:
  4057     00AC                     	ds	1
  4058     00AD                     TUNE_Run@fine_ind_diff_low:
  4059     00AD                     	ds	1
  4060     00AE                     TUNE_Run@fine_cap_diff_high:
  4061     00AE                     	ds	1
  4062     00AF                     TUNE_Run@fine_cap_diff_low:
  4063     00AF                     	ds	1
  4064     00B0                     TUNE_Run@best_cap_sw:
  4065     00B0                     	ds	1
  4066     00B1                     _best_swr_valid:
  4067     00B1                     	ds	1
  4068     00B2                     _TUNE_delay:
  4069     00B2                     	ds	1
  4070     00B3                     _TUNE_step:
  4071     00B3                     	ds	1
  4072     00B4                     _MENU_cursor:
  4073     00B4                     	ds	1
  4074     00B5                     _TUNE_state:
  4075     00B5                     	ds	1
  4076     00B6                     _BUTTON_Bypass_count:
  4077     00B6                     	ds	1
  4078     00B7                     _BUTTON_Auto_count:
  4079     00B7                     	ds	1
  4080     00B8                     _BUTTON_was_long_pressed:
  4081     00B8                     	ds	1
  4082     00B9                     _DISP_rotate:
  4083     00B9                     	ds	1
  4084     00BA                     main@tick_10ms:
  4085     00BA                     	ds	1
  4086     00BB                     main@tick_old:
  4087     00BB                     	ds	1
  4088     00BC                     _tick_count:
  4089     00BC                     	ds	1
  4090     00BD                     _global:
  4091     00BD                     	ds	30
  4092                           
  4093                           	psect	dataBANK1
  4094     00DB                     __pdataBANK1:
  4095     00DB                     DISP_SWR@F2959:
  4096     00DB                     	ds	5
  4097     00E0                     MENU_StartupSave_Init@F3149:
  4098     00E0                     	ds	3
  4099     00E3                     MENU_NameEdit_Init@F3141:
  4100     00E3                     	ds	3
  4101     00E6                     MENU_Memory_Update@F3118:
  4102     00E6                     	ds	3
  4103     00E9                     MENU_CalPWR_Update@F3100:
  4104     00E9                     	ds	2
  4105                           
  4106                           	psect	bssBANK2
  4107     0120                     __pbssBANK2:
  4108     0120                     _r_buffer:
  4109     0120                     	ds	20
  4110     0134                     _f_buffer:
  4111     0134                     	ds	20
  4112                           
  4113                           	psect	dataBANK2
  4114     0148                     __pdataBANK2:
  4115     0148                     _str_TUNE_State:
  4116     0148                     	ds	12
  4117     0154                     _ptrSubTopMenu:
  4118     0154                     	ds	12
  4119     0160                     _ptrSubSetupMenu:
  4120     0160                     	ds	8
  4121                           
  4122                           	psect	bssEEDATA
  4123     0072                     __pbssEEDATA:
  4124     0072                     _ee_sleep_enable:
  4125     0072  0000               	db	0
  4126     0073                     _ee_tune_auto_enable:
  4127     0073  0000               	db	0
  4128                           
  4129                           	psect	dataEEDATA
  4130     0000                     __pdataEEDATA:
  4131                           
  4132                           	psect	inittext
  4133     26CA                     init_ram:
  4134     26CA  00FE               	movwf	btemp
  4135     26CB                     initloop:
  4136     26CB  0012               	moviw fsr0++
  4137     26CC  001E               	movwi fsr1++
  4138     26CD  0BFE               	decfsz	btemp,f
  4139     26CE  2ECB               	goto	initloop
  4140     26CF  3400               	retlw	0
  4141                           
  4142                           	psect	clrtext
  4143     26C4                     clear_ram0:	
  4144                           ;	Called with FSR0 containing the base address, and
  4145                           ;	WREG with the size to clear
  4146                           
  4147     26C4  0064               	clrwdt	;clear the watchdog before getting into this loop
  4148     26C5                     clrloop0:
  4149     26C5  0180               	clrf	0	;clear RAM location pointed to by FSR
  4150     26C6  3101               	addfsr 0,1
  4151     26C7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4152     26C8  2EC5               	goto	clrloop0	;have we reached the end yet?
  4153     26C9  3400               	retlw	0	;all done for this memory range, return
  4154                           
  4155                           	psect	cstackBANK3
  4156     01A0                     __pcstackBANK3:
  4157     01A0                     main@tunemem:
  4158                           
  4159                           ; 10 bytes @ 0x0
  4160     01A0                     	ds	10
  4161                           
  4162                           	psect	cstackCOMMON
  4163     0070                     __pcstackCOMMON:
  4164     0070                     ?_EEPROM_InitDefault:
  4165     0070                     ?_EEPROM_Init:	
  4166                           ; 1 bytes @ 0x0
  4167                           
  4168     0070                     ?_BUTTON_Init:	
  4169                           ; 1 bytes @ 0x0
  4170                           
  4171     0070                     ?_ADC_Init:	
  4172                           ; 1 bytes @ 0x0
  4173                           
  4174     0070                     ?_UTILI_Delay_ms:	
  4175                           ; 1 bytes @ 0x0
  4176                           
  4177     0070                     ?_DISP_Clr:	
  4178                           ; 1 bytes @ 0x0
  4179                           
  4180     0070                     ?_MENU_Init:	
  4181                           ; 1 bytes @ 0x0
  4182                           
  4183     0070                     ?_ADC_Run:	
  4184                           ; 1 bytes @ 0x0
  4185                           
  4186     0070                     ?_BUTTON_Run:	
  4187                           ; 1 bytes @ 0x0
  4188                           
  4189     0070                     ?_MENU_Run:	
  4190                           ; 1 bytes @ 0x0
  4191                           
  4192     0070                     ?_DISP_Off:	
  4193                           ; 1 bytes @ 0x0
  4194                           
  4195     0070                     ?_DISP_On:	
  4196                           ; 1 bytes @ 0x0
  4197                           
  4198     0070                     ?_MENU_Main_Init:	
  4199                           ; 1 bytes @ 0x0
  4200                           
  4201     0070                     ?_MENU_Main_Run:	
  4202                           ; 1 bytes @ 0x0
  4203                           
  4204     0070                     ?_MENU_SubTop_Init:	
  4205                           ; 1 bytes @ 0x0
  4206                           
  4207     0070                     ?_MENU_Sub_Run:	
  4208                           ; 1 bytes @ 0x0
  4209                           
  4210     0070                     ?_MENU_SubSetup_Init:	
  4211                           ; 1 bytes @ 0x0
  4212                           
  4213     0070                     ?_MENU_Bypass_Init:	
  4214                           ; 1 bytes @ 0x0
  4215                           
  4216     0070                     ?_MENU_Reset_Init:	
  4217                           ; 1 bytes @ 0x0
  4218                           
  4219     0070                     ?_MENU_MemorySave_Init:	
  4220                           ; 1 bytes @ 0x0
  4221                           
  4222     0070                     ?_MENU_Memory_Run:	
  4223                           ; 1 bytes @ 0x0
  4224                           
  4225     0070                     ?_MENU_MemoryLoad_Init:	
  4226                           ; 1 bytes @ 0x0
  4227                           
  4228     0070                     ?_MENU_About_Init:	
  4229                           ; 1 bytes @ 0x0
  4230                           
  4231     0070                     ?_MENU_About_Run:	
  4232                           ; 1 bytes @ 0x0
  4233                           
  4234     0070                     ?_MENU_TParam_Init:	
  4235                           ; 1 bytes @ 0x0
  4236                           
  4237     0070                     ?_MENU_TParam_Run:	
  4238                           ; 1 bytes @ 0x0
  4239                           
  4240     0070                     ?_MENU_Sleep_Init:	
  4241                           ; 1 bytes @ 0x0
  4242                           
  4243     0070                     ?_MENU_Sleep_Run:	
  4244                           ; 1 bytes @ 0x0
  4245                           
  4246     0070                     ?_MENU_RelTest_Init:	
  4247                           ; 1 bytes @ 0x0
  4248                           
  4249     0070                     ?_MENU_RelTest_Run:	
  4250                           ; 1 bytes @ 0x0
  4251                           
  4252     0070                     ?_MENU_CalPWR_Init:	
  4253                           ; 1 bytes @ 0x0
  4254                           
  4255     0070                     ?_MENU_CalPWR_Run:	
  4256                           ; 1 bytes @ 0x0
  4257                           
  4258     0070                     ?_MENU_Tune_Init:	
  4259                           ; 1 bytes @ 0x0
  4260                           
  4261     0070                     ?_MENU_Tune_Run:	
  4262                           ; 1 bytes @ 0x0
  4263                           
  4264     0070                     ?_MENU_NameEdit_Init:	
  4265                           ; 1 bytes @ 0x0
  4266                           
  4267     0070                     ?_MENU_NameEdit_Run:	
  4268                           ; 1 bytes @ 0x0
  4269                           
  4270     0070                     ?_MENU_StartupSave_Init:	
  4271                           ; 1 bytes @ 0x0
  4272                           
  4273     0070                     ?_MENU_StartupSave_Run:	
  4274                           ; 1 bytes @ 0x0
  4275                           
  4276     0070                     ?_eeprom_write:	
  4277                           ; 1 bytes @ 0x0
  4278                           
  4279     0070                     ?_TUNE_Init:	
  4280                           ; 1 bytes @ 0x0
  4281                           
  4282     0070                     ?_TUNE_Run:	
  4283                           ; 1 bytes @ 0x0
  4284                           
  4285     0070                     ?_MENU_Sub_Update:	
  4286                           ; 1 bytes @ 0x0
  4287                           
  4288     0070                     ?_eeprom_read:	
  4289                           ; 1 bytes @ 0x0
  4290                           
  4291     0070                     ?_MAIN_Init:	
  4292                           ; 1 bytes @ 0x0
  4293                           
  4294     0070                     ?_myIsr:	
  4295                           ; 1 bytes @ 0x0
  4296                           
  4297     0070                     ?_main:	
  4298                           ; 1 bytes @ 0x0
  4299                           
  4300     0070                     ?_UTILI_SetRelays:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303     0070                     ?_UTILI_CalPWR:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306     0070                     ?_UTILI_CalSWR:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309     0070                     ?_I2C_Start:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312     0070                     ?_I2C_Stop:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315     0070                     ?_I2C_Write:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318     0070                     ?_DISP_Command:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321     0070                     ?_BUTTON_Reset:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324     0070                     ?_MENU_Main_Update:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327     0070                     ?_MENU_Main_Weakup:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330     0070                     ?_MENU_Tune_Update:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333     0070                     ?_MENU_TParam_Update:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336     0070                     ?_MENU_Sleep_Update:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339     0070                     ?_MENU_RelTest_Update:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342     0070                     ?_MENU_CalPWR_Update:	
  4343                           ; 1 bytes @ 0x0
  4344                           
  4345     0070                     ?_MENU_Memory_Update:	
  4346                           ; 1 bytes @ 0x0
  4347                           
  4348     0070                     ?_MENU_Memory_Init:	
  4349                           ; 1 bytes @ 0x0
  4350                           
  4351     0070                     ?_MENU_NameEdit_Update:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354     0070                     ?_MENU_StartupSave_Update:	
  4355                           ; 1 bytes @ 0x0
  4356                           
  4357     0070                     ?___bmul:	
  4358                           ; 1 bytes @ 0x0
  4359                           
  4360     0070                     ?_UTILI_Get_LC_Relays:	
  4361                           ; 1 bytes @ 0x0
  4362                           
  4363     0070                     ?_UTILI_GetCapValue:	
  4364                           ; 2 bytes @ 0x0
  4365                           
  4366     0070                     ?_UTILI_GetIndValue:	
  4367                           ; 2 bytes @ 0x0
  4368                           
  4369     0070                     ?_ADC_GetSample:	
  4370                           ; 2 bytes @ 0x0
  4371                           
  4372     0070                     ?___wmul:	
  4373                           ; 2 bytes @ 0x0
  4374                           
  4375     0070                     ?___awdiv:	
  4376                           ; 2 bytes @ 0x0
  4377                           
  4378     0070                     ?___awmod:	
  4379                           ; 2 bytes @ 0x0
  4380                           
  4381     0070                     ?___lmul:	
  4382                           ; 2 bytes @ 0x0
  4383                           
  4384     0070                     UTILI_SetRelays@v:	
  4385                           ; 4 bytes @ 0x0
  4386                           
  4387     0070                     I2C_Write@value:	
  4388                           ; 1 bytes @ 0x0
  4389                           
  4390     0070                     eeprom_write@value:	
  4391                           ; 1 bytes @ 0x0
  4392                           
  4393     0070                     eeprom_read@addr:	
  4394                           ; 1 bytes @ 0x0
  4395                           
  4396     0070                     ___bmul@multiplicand:	
  4397                           ; 1 bytes @ 0x0
  4398                           
  4399     0070                     UTILI_Delay_ms@time_in_ms:	
  4400                           ; 1 bytes @ 0x0
  4401                           
  4402     0070                     ___wmul@multiplier:	
  4403                           ; 2 bytes @ 0x0
  4404                           
  4405     0070                     ___awdiv@divisor:	
  4406                           ; 2 bytes @ 0x0
  4407                           
  4408     0070                     ___awmod@divisor:	
  4409                           ; 2 bytes @ 0x0
  4410                           
  4411     0070                     ___lmul@multiplier:	
  4412                           ; 2 bytes @ 0x0
  4413                           
  4414     0070                     ??_BUTTON_Init:	
  4415                           ; 4 bytes @ 0x0
  4416                           
  4417     0070                     ??_ADC_Init:	
  4418                           ; 1 bytes @ 0x0
  4419                           
  4420     0070                     ??_BUTTON_Run:	
  4421                           ; 1 bytes @ 0x0
  4422                           
  4423     0070                     ??_eeprom_read:	
  4424                           ; 1 bytes @ 0x0
  4425                           
  4426     0070                     ??_MAIN_Init:	
  4427                           ; 1 bytes @ 0x0
  4428                           
  4429     0070                     ??_myIsr:	
  4430                           ; 1 bytes @ 0x0
  4431                           
  4432     0070                     ??_UTILI_SetRelays:	
  4433                           ; 1 bytes @ 0x0
  4434                           
  4435     0070                     ??_I2C_Start:	
  4436                           ; 1 bytes @ 0x0
  4437                           
  4438     0070                     ??_I2C_Stop:	
  4439                           ; 1 bytes @ 0x0
  4440                           
  4441     0070                     ??_I2C_Write:	
  4442                           ; 1 bytes @ 0x0
  4443                           
  4444     0070                     ??_BUTTON_Reset:	
  4445                           ; 1 bytes @ 0x0
  4446                           
  4447                           
  4448                           ; 1 bytes @ 0x0
  4449     0070                     	ds	1
  4450     0071                     ?_UTILI_Set_LC_Relays:
  4451     0071                     I2C_Write@i:	
  4452                           ; 1 bytes @ 0x1
  4453                           
  4454     0071                     eeprom_write@addr:	
  4455                           ; 1 bytes @ 0x1
  4456                           
  4457     0071                     ___bmul@product:	
  4458                           ; 1 bytes @ 0x1
  4459                           
  4460     0071                     UTILI_Set_LC_Relays@relays:	
  4461                           ; 1 bytes @ 0x1
  4462                           
  4463     0071                     ??_eeprom_write:	
  4464                           ; 2 bytes @ 0x1
  4465                           
  4466     0071                     ??_TUNE_Init:	
  4467                           ; 1 bytes @ 0x1
  4468                           
  4469     0071                     ??___bmul:	
  4470                           ; 1 bytes @ 0x1
  4471                           
  4472                           
  4473                           ; 1 bytes @ 0x1
  4474     0071                     	ds	1
  4475     0072                     ?_DISP_DataAddress:
  4476     0072                     DISP_Command@command:	
  4477                           ; 1 bytes @ 0x2
  4478                           
  4479     0072                     DISP_DataAddress@start:	
  4480                           ; 1 bytes @ 0x2
  4481                           
  4482     0072                     eeprom_write@gie_state:	
  4483                           ; 1 bytes @ 0x2
  4484                           
  4485     0072                     ___bmul@multiplier:	
  4486                           ; 1 bytes @ 0x2
  4487                           
  4488     0072                     ___wmul@multiplicand:	
  4489                           ; 1 bytes @ 0x2
  4490                           
  4491     0072                     ___awdiv@dividend:	
  4492                           ; 2 bytes @ 0x2
  4493                           
  4494     0072                     ___awmod@dividend:	
  4495                           ; 2 bytes @ 0x2
  4496                           
  4497     0072                     ??_UTILI_Delay_ms:	
  4498                           ; 2 bytes @ 0x2
  4499                           
  4500     0072                     ??_UTILI_Get_LC_Relays:	
  4501                           ; 1 bytes @ 0x2
  4502                           
  4503     0072                     ??_UTILI_GetCapValue:	
  4504                           ; 1 bytes @ 0x2
  4505                           
  4506     0072                     ??_UTILI_GetIndValue:	
  4507                           ; 1 bytes @ 0x2
  4508                           
  4509     0072                     ??_DISP_Command:	
  4510                           ; 1 bytes @ 0x2
  4511                           
  4512     0072                     ??_ADC_GetSample:	
  4513                           ; 1 bytes @ 0x2
  4514                           
  4515                           
  4516                           ; 1 bytes @ 0x2
  4517     0072                     	ds	1
  4518     0073                     ?_EEPROM_Read:
  4519     0073                     ?_EEPROM_Write:	
  4520                           ; 1 bytes @ 0x3
  4521                           
  4522     0073                     UTILI_Delay_ms@i:	
  4523                           ; 1 bytes @ 0x3
  4524                           
  4525     0073                     EEPROM_Write@ptrValue:	
  4526                           ; 2 bytes @ 0x3
  4527                           
  4528     0073                     EEPROM_Read@ptrValue:	
  4529                           ; 2 bytes @ 0x3
  4530                           
  4531     0073                     EEPROM_InitDefault@i:	
  4532                           ; 2 bytes @ 0x3
  4533                           
  4534     0073                     ??_EEPROM_InitDefault:	
  4535                           ; 2 bytes @ 0x3
  4536                           
  4537     0073                     ??_UTILI_Set_LC_Relays:	
  4538                           ; 1 bytes @ 0x3
  4539                           
  4540     0073                     ??_DISP_Off:	
  4541                           ; 1 bytes @ 0x3
  4542                           
  4543     0073                     ??_DISP_On:	
  4544                           ; 1 bytes @ 0x3
  4545                           
  4546     0073                     ??_DISP_DataAddress:	
  4547                           ; 1 bytes @ 0x3
  4548                           
  4549                           
  4550                           ; 1 bytes @ 0x3
  4551     0073                     	ds	1
  4552     0074                     DISP_DataAddress@page:
  4553     0074                     ___awdiv@counter:	
  4554                           ; 1 bytes @ 0x4
  4555                           
  4556     0074                     ___awmod@counter:	
  4557                           ; 1 bytes @ 0x4
  4558                           
  4559     0074                     ___wmul@product:	
  4560                           ; 1 bytes @ 0x4
  4561                           
  4562     0074                     ___lmul@multiplicand:	
  4563                           ; 2 bytes @ 0x4
  4564                           
  4565     0074                     ??___wmul:	
  4566                           ; 4 bytes @ 0x4
  4567                           
  4568     0074                     ??___awdiv:	
  4569                           ; 1 bytes @ 0x4
  4570                           
  4571     0074                     ??___awmod:	
  4572                           ; 1 bytes @ 0x4
  4573                           
  4574                           
  4575                           ; 1 bytes @ 0x4
  4576     0074                     	ds	1
  4577     0075                     DISP_Clr@i:
  4578     0075                     EEPROM_Write@size:	
  4579                           ; 1 bytes @ 0x5
  4580                           
  4581     0075                     EEPROM_Read@size:	
  4582                           ; 1 bytes @ 0x5
  4583                           
  4584     0075                     ___awdiv@sign:	
  4585                           ; 1 bytes @ 0x5
  4586                           
  4587     0075                     ___awmod@sign:	
  4588                           ; 1 bytes @ 0x5
  4589                           
  4590     0075                     UTILI_Get_LC_Relays@relays:	
  4591                           ; 1 bytes @ 0x5
  4592                           
  4593     0075                     ??_DISP_Clr:	
  4594                           ; 2 bytes @ 0x5
  4595                           
  4596                           
  4597                           ; 1 bytes @ 0x5
  4598     0075                     	ds	1
  4599     0076                     DISP_Clr@page:
  4600     0076                     EEPROM_Write@addr:	
  4601                           ; 1 bytes @ 0x6
  4602                           
  4603     0076                     EEPROM_Read@addr:	
  4604                           ; 1 bytes @ 0x6
  4605                           
  4606     0076                     UTILI_GetCapValue@value:	
  4607                           ; 1 bytes @ 0x6
  4608                           
  4609     0076                     UTILI_GetIndValue@value:	
  4610                           ; 2 bytes @ 0x6
  4611                           
  4612     0076                     ___awdiv@quotient:	
  4613                           ; 2 bytes @ 0x6
  4614                           
  4615     0076                     ??_EEPROM_Read:	
  4616                           ; 2 bytes @ 0x6
  4617                           
  4618     0076                     ??_EEPROM_Write:	
  4619                           ; 1 bytes @ 0x6
  4620                           
  4621                           
  4622                           ; 1 bytes @ 0x6
  4623     0076                     	ds	1
  4624     0077                     ?_DISP_Init:
  4625     0077                     DISP_Init@rotate:	
  4626                           ; 1 bytes @ 0x7
  4627                           
  4628     0077                     ADC_GetSample@ch:	
  4629                           ; 1 bytes @ 0x7
  4630                           
  4631     0077                     EEPROM_Write@ptr:	
  4632                           ; 1 bytes @ 0x7
  4633                           
  4634     0077                     EEPROM_Read@ptr:	
  4635                           ; 1 bytes @ 0x7
  4636                           
  4637                           
  4638                           ; 2 bytes @ 0x7
  4639     0077                     	ds	1
  4640     0078                     ?_DISP_Str:
  4641     0078                     ?_UTILI_Int2Str:	
  4642                           ; 1 bytes @ 0x8
  4643                           
  4644     0078                     UTILI_GetCapValue@i:	
  4645                           ; 1 bytes @ 0x8
  4646                           
  4647     0078                     UTILI_GetIndValue@i:	
  4648                           ; 1 bytes @ 0x8
  4649                           
  4650     0078                     DISP_Init@i2_addr:	
  4651                           ; 1 bytes @ 0x8
  4652                           
  4653     0078                     DISP_Str@row:	
  4654                           ; 1 bytes @ 0x8
  4655                           
  4656     0078                     UTILI_Int2Str@number:	
  4657                           ; 1 bytes @ 0x8
  4658                           
  4659     0078                     ADC_GetSample@hi:	
  4660                           ; 2 bytes @ 0x8
  4661                           
  4662     0078                     ___lmul@product:	
  4663                           ; 2 bytes @ 0x8
  4664                           
  4665     0078                     ??_DISP_Init:	
  4666                           ; 4 bytes @ 0x8
  4667                           
  4668     0078                     ??___lmul:	
  4669                           ; 1 bytes @ 0x8
  4670                           
  4671                           
  4672                           ; 1 bytes @ 0x8
  4673     0078                     	ds	1
  4674     0079                     DISP_Str@str:
  4675     0079                     ??_EEPROM_Init:	
  4676                           ; 2 bytes @ 0x9
  4677                           
  4678                           
  4679                           ; 1 bytes @ 0x9
  4680     0079                     	ds	1
  4681     007A                     UTILI_Int2Str@output:
  4682                           
  4683                           ; 1 bytes @ 0xA
  4684     007A                     	ds	1
  4685     007B                     UTILI_Int2Str@size:
  4686     007B                     DISP_Str@invert:	
  4687                           ; 1 bytes @ 0xB
  4688                           
  4689                           
  4690                           ; 1 bytes @ 0xB
  4691     007B                     	ds	1
  4692     007C                     ?_UTILI_deciWatt_to_centiVolt:
  4693     007C                     ?_UTILI_centiVolt_to_deciWatt:	
  4694                           ; 2 bytes @ 0xC
  4695                           
  4696     007C                     MENU_Tune_Update@state:	
  4697                           ; 2 bytes @ 0xC
  4698                           
  4699     007C                     MENU_Sub_Update@pos:	
  4700                           ; 1 bytes @ 0xC
  4701                           
  4702     007C                     UTILI_deciWatt_to_centiVolt@deciWatt:	
  4703                           ; 1 bytes @ 0xC
  4704                           
  4705     007C                     UTILI_centiVolt_to_deciWatt@centiVolt:	
  4706                           ; 2 bytes @ 0xC
  4707                           
  4708     007C                     ??_MENU_Init:	
  4709                           ; 2 bytes @ 0xC
  4710                           
  4711     007C                     ??_MENU_Main_Init:	
  4712                           ; 1 bytes @ 0xC
  4713                           
  4714     007C                     ??_MENU_Bypass_Init:	
  4715                           ; 1 bytes @ 0xC
  4716                           
  4717     007C                     ??_MENU_Reset_Init:	
  4718                           ; 1 bytes @ 0xC
  4719                           
  4720     007C                     ??_MENU_MemorySave_Init:	
  4721                           ; 1 bytes @ 0xC
  4722                           
  4723     007C                     ??_MENU_MemoryLoad_Init:	
  4724                           ; 1 bytes @ 0xC
  4725                           
  4726     007C                     ??_MENU_About_Init:	
  4727                           ; 1 bytes @ 0xC
  4728                           
  4729     007C                     ??_MENU_About_Run:	
  4730                           ; 1 bytes @ 0xC
  4731                           
  4732     007C                     ??_MENU_Tune_Init:	
  4733                           ; 1 bytes @ 0xC
  4734                           
  4735     007C                     ??_MENU_StartupSave_Init:	
  4736                           ; 1 bytes @ 0xC
  4737                           
  4738     007C                     ??_MENU_StartupSave_Run:	
  4739                           ; 1 bytes @ 0xC
  4740                           
  4741     007C                     ??_UTILI_Int2Str:	
  4742                           ; 1 bytes @ 0xC
  4743                           
  4744     007C                     ??_UTILI_CalSWR:	
  4745                           ; 1 bytes @ 0xC
  4746                           
  4747     007C                     ??_DISP_Char:	
  4748                           ; 1 bytes @ 0xC
  4749                           
  4750     007C                     ??_MENU_Main_Weakup:	
  4751                           ; 1 bytes @ 0xC
  4752                           
  4753     007C                     ??_MENU_Tune_Update:	
  4754                           ; 1 bytes @ 0xC
  4755                           
  4756     007C                     ??_MENU_Memory_Update:	
  4757                           ; 1 bytes @ 0xC
  4758                           
  4759     007C                     ??_MENU_Memory_Init:	
  4760                           ; 1 bytes @ 0xC
  4761                           
  4762     007C                     ??_MENU_NameEdit_Update:	
  4763                           ; 1 bytes @ 0xC
  4764                           
  4765     007C                     ??_MENU_StartupSave_Update:	
  4766                           ; 1 bytes @ 0xC
  4767                           
  4768     007C                     ??___aldiv:	
  4769                           ; 1 bytes @ 0xC
  4770                           
  4771                           
  4772                           ; 1 bytes @ 0xC
  4773     007C                     	ds	1
  4774     007D                     MENU_Sub_Update@i:
  4775                           
  4776                           ; 1 bytes @ 0xD
  4777     007D                     	ds	1
  4778     007E                     ??_MENU_SubTop_Init:
  4779     007E                     ??_MENU_SubSetup_Init:	
  4780                           ; 1 bytes @ 0xE
  4781                           
  4782     007E                     ??_MENU_TParam_Init:	
  4783                           ; 1 bytes @ 0xE
  4784                           
  4785     007E                     ??_MENU_Sleep_Init:	
  4786                           ; 1 bytes @ 0xE
  4787                           
  4788     007E                     ??_MENU_RelTest_Init:	
  4789                           ; 1 bytes @ 0xE
  4790                           
  4791     007E                     ??_MENU_RelTest_Run:	
  4792                           ; 1 bytes @ 0xE
  4793                           
  4794     007E                     ??_MENU_CalPWR_Init:	
  4795                           ; 1 bytes @ 0xE
  4796                           
  4797     007E                     ??_MENU_Tune_Run:	
  4798                           ; 1 bytes @ 0xE
  4799                           
  4800     007E                     ??_MENU_NameEdit_Init:	
  4801                           ; 1 bytes @ 0xE
  4802                           
  4803     007E                     ??_main:	
  4804                           ; 1 bytes @ 0xE
  4805                           
  4806     007E                     ??_UTILI_GetCapValueStr:	
  4807                           ; 1 bytes @ 0xE
  4808                           
  4809     007E                     ??_UTILI_GetIndValueStr:	
  4810                           ; 1 bytes @ 0xE
  4811                           
  4812     007E                     ??_MENU_Main_Update:	
  4813                           ; 1 bytes @ 0xE
  4814                           
  4815     007E                     ??_MENU_TParam_Update:	
  4816                           ; 1 bytes @ 0xE
  4817                           
  4818     007E                     ??_MENU_Sleep_Update:	
  4819                           ; 1 bytes @ 0xE
  4820                           
  4821                           
  4822                           	psect	cstackBANK0
  4823     0020                     __pcstackBANK0:	
  4824                           ; 1 bytes @ 0xE
  4825                           
  4826     0020                     ?___aldiv:
  4827     0020                     UTILI_Int2Str@minus:	
  4828                           ; 4 bytes @ 0x0
  4829                           
  4830     0020                     ___aldiv@divisor:	
  4831                           ; 1 bytes @ 0x0
  4832                           
  4833     0020                     ??_DISP_Str:	
  4834                           ; 4 bytes @ 0x0
  4835                           
  4836                           
  4837                           ; 1 bytes @ 0x0
  4838     0020                     	ds	1
  4839     0021                     UTILI_Int2Str@pos:
  4840                           
  4841                           ; 1 bytes @ 0x1
  4842     0021                     	ds	1
  4843     0022                     UTILI_Int2Str@p:
  4844                           
  4845                           ; 1 bytes @ 0x2
  4846     0022                     	ds	1
  4847     0023                     ?_UTILI_GetCapValueStr:
  4848     0023                     ?_UTILI_GetIndValueStr:	
  4849                           ; 1 bytes @ 0x3
  4850                           
  4851     0023                     UTILI_GetCapValueStr@str:	
  4852                           ; 1 bytes @ 0x3
  4853                           
  4854     0023                     UTILI_GetIndValueStr@str:	
  4855                           ; 1 bytes @ 0x3
  4856                           
  4857                           
  4858                           ; 1 bytes @ 0x3
  4859     0023                     	ds	1
  4860     0024                     UTILI_GetCapValueStr@str_size:
  4861     0024                     UTILI_GetIndValueStr@str_size:	
  4862                           ; 1 bytes @ 0x4
  4863                           
  4864     0024                     DISP_Str@col:	
  4865                           ; 1 bytes @ 0x4
  4866                           
  4867     0024                     ___aldiv@dividend:	
  4868                           ; 1 bytes @ 0x4
  4869                           
  4870                           
  4871                           ; 4 bytes @ 0x4
  4872     0024                     	ds	1
  4873     0025                     DISP_Str@page:
  4874     0025                     UTILI_GetCapValueStr@value:	
  4875                           ; 1 bytes @ 0x5
  4876                           
  4877     0025                     UTILI_GetIndValueStr@value:	
  4878                           ; 2 bytes @ 0x5
  4879                           
  4880                           
  4881                           ; 2 bytes @ 0x5
  4882     0025                     	ds	1
  4883     0026                     DISP_Str@fpos:
  4884                           
  4885                           ; 2 bytes @ 0x6
  4886     0026                     	ds	2
  4887     0028                     DISP_Str@start:
  4888     0028                     ___aldiv@counter:	
  4889                           ; 1 bytes @ 0x8
  4890                           
  4891                           
  4892                           ; 1 bytes @ 0x8
  4893     0028                     	ds	1
  4894     0029                     DISP_Str@len:
  4895     0029                     ___aldiv@sign:	
  4896                           ; 1 bytes @ 0x9
  4897                           
  4898                           
  4899                           ; 1 bytes @ 0x9
  4900     0029                     	ds	1
  4901     002A                     DISP_Str@h:
  4902     002A                     ___aldiv@quotient:	
  4903                           ; 1 bytes @ 0xA
  4904                           
  4905                           
  4906                           ; 4 bytes @ 0xA
  4907     002A                     	ds	1
  4908     002B                     DISP_Str@h_1074:
  4909                           
  4910                           ; 1 bytes @ 0xB
  4911     002B                     	ds	1
  4912     002C                     DISP_Str@p:
  4913                           
  4914                           ; 2 bytes @ 0xC
  4915     002C                     	ds	2
  4916     002E                     DISP_Str@empty:
  4917     002E                     UTILI_CalSWR@swr:	
  4918                           ; 1 bytes @ 0xE
  4919                           
  4920     002E                     ??_ADC_Run:	
  4921                           ; 2 bytes @ 0xE
  4922                           
  4923     002E                     ??_UTILI_deciWatt_to_centiVolt:	
  4924                           ; 1 bytes @ 0xE
  4925                           
  4926     002E                     ??_UTILI_centiVolt_to_deciWatt:	
  4927                           ; 1 bytes @ 0xE
  4928                           
  4929                           
  4930                           ; 1 bytes @ 0xE
  4931     002E                     	ds	1
  4932     002F                     DISP_Str@y:
  4933                           
  4934                           ; 1 bytes @ 0xF
  4935     002F                     	ds	1
  4936     0030                     DISP_Str@x:
  4937                           
  4938                           ; 1 bytes @ 0x10
  4939     0030                     	ds	1
  4940     0031                     ?_DISP_Char:
  4941     0031                     ?_DISP_PWR:	
  4942                           ; 1 bytes @ 0x11
  4943                           
  4944     0031                     ?_DISP_SWR:	
  4945                           ; 1 bytes @ 0x11
  4946                           
  4947     0031                     DISP_Char@row:	
  4948                           ; 1 bytes @ 0x11
  4949                           
  4950     0031                     DISP_PWR@row:	
  4951                           ; 1 bytes @ 0x11
  4952                           
  4953     0031                     DISP_SWR@row:	
  4954                           ; 1 bytes @ 0x11
  4955                           
  4956     0031                     MENU_Memory_Update@str_index:	
  4957                           ; 1 bytes @ 0x11
  4958                           
  4959     0031                     MENU_StartupSave_Init@str_index:	
  4960                           ; 3 bytes @ 0x11
  4961                           
  4962     0031                     MENU_Sleep_Update@str:	
  4963                           ; 3 bytes @ 0x11
  4964                           
  4965     0031                     ??_MENU_Sub_Update:	
  4966                           ; 4 bytes @ 0x11
  4967                           
  4968     0031                     ??_MENU_RelTest_Update:	
  4969                           ; 1 bytes @ 0x11
  4970                           
  4971                           
  4972                           ; 1 bytes @ 0x11
  4973     0031                     	ds	1
  4974     0032                     DISP_Char@c:
  4975     0032                     UTILI_centiVolt_to_deciWatt@deciWatt:	
  4976                           ; 1 bytes @ 0x12
  4977                           
  4978     0032                     DISP_PWR@deciWatt:	
  4979                           ; 2 bytes @ 0x12
  4980                           
  4981     0032                     DISP_SWR@centiSWR:	
  4982                           ; 2 bytes @ 0x12
  4983                           
  4984     0032                     _UTILI_deciWatt_to_centiVolt$2997:	
  4985                           ; 2 bytes @ 0x12
  4986                           
  4987                           
  4988                           ; 4 bytes @ 0x12
  4989     0032                     	ds	1
  4990     0033                     DISP_Char@invert:
  4991     0033                     MENU_RelTest_Update@str:	
  4992                           ; 1 bytes @ 0x13
  4993                           
  4994                           
  4995                           ; 7 bytes @ 0x13
  4996     0033                     	ds	1
  4997     0034                     DISP_Char@col:
  4998     0034                     DISP_PWR@invert:	
  4999                           ; 1 bytes @ 0x14
  5000                           
  5001     0034                     DISP_SWR@invert:	
  5002                           ; 1 bytes @ 0x14
  5003                           
  5004     0034                     MENU_Memory_Update@index:	
  5005                           ; 1 bytes @ 0x14
  5006                           
  5007     0034                     ADC_Run@f_sum:	
  5008                           ; 1 bytes @ 0x14
  5009                           
  5010     0034                     ??_UTILI_CalPWR:	
  5011                           ; 4 bytes @ 0x14
  5012                           
  5013                           
  5014                           ; 1 bytes @ 0x14
  5015     0034                     	ds	1
  5016     0035                     MENU_Sleep_Update@cursor:
  5017     0035                     UTILI_CalPWR@centiVolt:	
  5018                           ; 1 bytes @ 0x15
  5019                           
  5020     0035                     DISP_Char@str:	
  5021                           ; 2 bytes @ 0x15
  5022                           
  5023     0035                     MENU_Memory_Update@memory:	
  5024                           ; 2 bytes @ 0x15
  5025                           
  5026     0035                     ??_DISP_PWR:	
  5027                           ; 11 bytes @ 0x15
  5028                           
  5029     0035                     ??_DISP_SWR:	
  5030                           ; 1 bytes @ 0x15
  5031                           
  5032                           
  5033                           ; 1 bytes @ 0x15
  5034     0035                     	ds	1
  5035     0036                     DISP_PWR@col:
  5036     0036                     DISP_SWR@col:	
  5037                           ; 1 bytes @ 0x16
  5038                           
  5039     0036                     UTILI_deciWatt_to_centiVolt@number:	
  5040                           ; 1 bytes @ 0x16
  5041                           
  5042     0036                     ??_MENU_Sleep_Run:	
  5043                           ; 4 bytes @ 0x16
  5044                           
  5045                           
  5046                           ; 1 bytes @ 0x16
  5047     0036                     	ds	1
  5048     0037                     DISP_PWR@low_value:
  5049     0037                     MENU_NameEdit_Update@c:	
  5050                           ; 1 bytes @ 0x17
  5051                           
  5052     0037                     UTILI_CalPWR@deciWatt:	
  5053                           ; 1 bytes @ 0x17
  5054                           
  5055     0037                     DISP_SWR@str:	
  5056                           ; 2 bytes @ 0x17
  5057                           
  5058                           
  5059                           ; 5 bytes @ 0x17
  5060     0037                     	ds	1
  5061     0038                     MENU_NameEdit_Update@x:
  5062     0038                     ADC_Run@r_sum:	
  5063                           ; 1 bytes @ 0x18
  5064                           
  5065     0038                     DISP_PWR@str:	
  5066                           ; 4 bytes @ 0x18
  5067                           
  5068                           
  5069                           ; 5 bytes @ 0x18
  5070     0038                     	ds	1
  5071     0039                     MENU_NameEdit_Update@i:
  5072     0039                     ??_TUNE_Run:	
  5073                           ; 1 bytes @ 0x19
  5074                           
  5075                           
  5076                           ; 1 bytes @ 0x19
  5077     0039                     	ds	1
  5078     003A                     MENU_RelTest_Update@c_row:
  5079     003A                     MENU_NameEdit_Init@str_index:	
  5080                           ; 1 bytes @ 0x1A
  5081                           
  5082     003A                     UTILI_deciWatt_to_centiVolt@sqrt:	
  5083                           ; 3 bytes @ 0x1A
  5084                           
  5085     003A                     ??_MENU_NameEdit_Run:	
  5086                           ; 4 bytes @ 0x1A
  5087                           
  5088                           
  5089                           ; 1 bytes @ 0x1A
  5090     003A                     	ds	1
  5091     003B                     MENU_RelTest_Update@l_row:
  5092                           
  5093                           ; 1 bytes @ 0x1B
  5094     003B                     	ds	1
  5095     003C                     MENU_TParam_Update@cursor:
  5096     003C                     MENU_RelTest_Update@cursor:	
  5097                           ; 1 bytes @ 0x1C
  5098                           
  5099     003C                     MENU_NameEdit_Run@c:	
  5100                           ; 1 bytes @ 0x1C
  5101                           
  5102     003C                     ADC_Run@i:	
  5103                           ; 1 bytes @ 0x1C
  5104                           
  5105     003C                     _TUNE_Run$2197:	
  5106                           ; 1 bytes @ 0x1C
  5107                           
  5108                           
  5109                           ; 2 bytes @ 0x1C
  5110     003C                     	ds	1
  5111     003D                     MENU_RelTest_Run@update:
  5112     003D                     MENU_NameEdit_Run@i:	
  5113                           ; 1 bytes @ 0x1D
  5114                           
  5115     003D                     ADC_Run@s:	
  5116                           ; 1 bytes @ 0x1D
  5117                           
  5118     003D                     MENU_Main_Update@str:	
  5119                           ; 1 bytes @ 0x1D
  5120                           
  5121     003D                     ??_MENU_TParam_Run:	
  5122                           ; 7 bytes @ 0x1D
  5123                           
  5124     003D                     ??_MENU_CalPWR_Update:	
  5125                           ; 1 bytes @ 0x1D
  5126                           
  5127                           
  5128                           ; 1 bytes @ 0x1D
  5129     003D                     	ds	1
  5130     003E                     _TUNE_Run$2198:
  5131     003E                     UTILI_deciWatt_to_centiVolt@temp:	
  5132                           ; 2 bytes @ 0x1E
  5133                           
  5134                           
  5135                           ; 4 bytes @ 0x1E
  5136     003E                     	ds	2
  5137     0040                     MENU_Memory_Update@i:
  5138     0040                     _TUNE_Run$2199:	
  5139                           ; 1 bytes @ 0x20
  5140                           
  5141                           
  5142                           ; 2 bytes @ 0x20
  5143     0040                     	ds	1
  5144     0041                     MENU_CalPWR_Update@str:
  5145                           
  5146                           ; 2 bytes @ 0x21
  5147     0041                     	ds	1
  5148     0042                     _TUNE_Run$2200:
  5149                           
  5150                           ; 2 bytes @ 0x22
  5151     0042                     	ds	1
  5152     0043                     ??_MENU_Sub_Run:
  5153     0043                     ??_MENU_Memory_Run:	
  5154                           ; 1 bytes @ 0x23
  5155                           
  5156     0043                     ??_MENU_CalPWR_Run:	
  5157                           ; 1 bytes @ 0x23
  5158                           
  5159                           
  5160                           ; 1 bytes @ 0x23
  5161     0043                     	ds	1
  5162     0044                     MENU_Main_Update@p_str:
  5163                           
  5164                           ; 2 bytes @ 0x24
  5165     0044                     	ds	2
  5166     0046                     MENU_Main_Update@c_row:
  5167     0046                     MENU_Sub_Run@cursor_pos:	
  5168                           ; 1 bytes @ 0x26
  5169                           
  5170     0046                     MENU_Memory_Run@cursor_pos:	
  5171                           ; 1 bytes @ 0x26
  5172                           
  5173                           
  5174                           ; 1 bytes @ 0x26
  5175     0046                     	ds	1
  5176     0047                     MENU_Main_Update@l_row:
  5177     0047                     MENU_Memory_Run@tunemem:	
  5178                           ; 1 bytes @ 0x27
  5179                           
  5180                           
  5181                           ; 10 bytes @ 0x27
  5182     0047                     	ds	1
  5183     0048                     MENU_Main_Update@i:
  5184                           
  5185                           ; 1 bytes @ 0x28
  5186     0048                     	ds	1
  5187     0049                     MENU_CalPWR_Run@y2:
  5188     0049                     ??_MENU_Main_Run:	
  5189                           ; 2 bytes @ 0x29
  5190                           
  5191                           
  5192                           ; 1 bytes @ 0x29
  5193     0049                     	ds	2
  5194     004B                     MENU_CalPWR_Run@y1:
  5195                           
  5196                           ; 2 bytes @ 0x2B
  5197     004B                     	ds	2
  5198     004D                     MENU_CalPWR_Run@value:
  5199                           
  5200                           ; 2 bytes @ 0x2D
  5201     004D                     	ds	4
  5202     0051                     ??_MENU_Run:
  5203                           
  5204                           ; 1 bytes @ 0x31
  5205     0051                     	ds	2
  5206                           
  5207                           	psect	maintext
  5208     13A0                     __pmaintext:	
  5209 ;;
  5210 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5211 ;;
  5212 ;; *************** function _main *****************
  5213 ;; Defined at:
  5214 ;;		line 159 in file "main.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;  tunemem        10    0[BANK3 ] struct .
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      void 
  5221 ;; Registers used:
  5222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : B1F/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5229 ;;      Locals:         0       0       0       0      10       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;      Totals:         0       0       0       0      10       0       0       0       0       0       0       0       
      +0       0
  5232 ;;Total ram usage:       10 bytes
  5233 ;; Hardware stack levels required when called: 7
  5234 ;; This function calls:
  5235 ;;		_ADC_Init
  5236 ;;		_ADC_Run
  5237 ;;		_BUTTON_Init
  5238 ;;		_BUTTON_Run
  5239 ;;		_DISP_Clr
  5240 ;;		_DISP_Init
  5241 ;;		_DISP_Str
  5242 ;;		_EEPROM_Init
  5243 ;;		_EEPROM_InitDefault
  5244 ;;		_EEPROM_Read
  5245 ;;		_MAIN_Init
  5246 ;;		_MENU_Init
  5247 ;;		_MENU_Run
  5248 ;;		_UTILI_Delay_ms
  5249 ;;		_UTILI_Set_LC_Relays
  5250 ;; This function is called by:
  5251 ;;		Startup code after reset
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255     13A0                     _main:	
  5256                           ;psect for function _main
  5257                           
  5258     13A0                     l9314:	
  5259                           ;incstack = 0
  5260                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5261                           
  5262                           
  5263                           ;main.c: 161:   static uint8_t tick_old=0;;main.c: 162:   static uint8_t tick_10ms =0;;m
      +                          ain.c: 169:   EEPROM_InitDefault();
  5264     13A0  3199  21E1  3193   	fcall	_EEPROM_InitDefault
  5265     13A3                     l9316:
  5266                           
  5267                           ;main.c: 170:   MAIN_Init();
  5268     13A3  319B  23C5  3193   	fcall	_MAIN_Init
  5269     13A6                     l9318:
  5270                           
  5271                           ;main.c: 171:   EEPROM_Init();
  5272     13A6  319F  27A5  3193   	fcall	_EEPROM_Init
  5273     13A9                     l9320:
  5274                           
  5275                           ;main.c: 172:   BUTTON_Init();
  5276     13A9  31A6  26F3  3193   	fcall	_BUTTON_Init
  5277     13AC                     l9322:
  5278                           
  5279                           ;main.c: 173:   ADC_Init();
  5280     13AC  31A7  27D4  3193   	fcall	_ADC_Init
  5281     13AF                     l9324:
  5282                           
  5283                           ;main.c: 184:   UTILI_Delay_ms(500);
  5284     13AF  30F4               	movlw	244
  5285     13B0  00F0               	movwf	UTILI_Delay_ms@time_in_ms
  5286     13B1  3001               	movlw	1
  5287     13B2  00F1               	movwf	UTILI_Delay_ms@time_in_ms+1
  5288     13B3  3198  205D  3193   	fcall	_UTILI_Delay_ms
  5289     13B6                     l9326:
  5290                           
  5291                           ;main.c: 185:   DISP_Init(0x78, 1);
  5292     13B6  01F7               	clrf	DISP_Init@rotate
  5293     13B7  0AF7               	incf	DISP_Init@rotate,f
  5294     13B8  3078               	movlw	120
  5295     13B9  3197  275E  3193   	fcall	_DISP_Init
  5296     13BC                     l9328:
  5297                           
  5298                           ;main.c: 186:   DISP_Str(0x80,0,str_ATU100EXT,0);
  5299     13BC  01F8               	clrf	DISP_Str@row
  5300     13BD  302E               	movlw	low (_str_ATU100EXT| (0+32768))
  5301     13BE  00F9               	movwf	DISP_Str@str
  5302     13BF  30A9               	movlw	high (_str_ATU100EXT| (0+32768))
  5303     13C0  00FA               	movwf	DISP_Str@str+1
  5304     13C1  01FB               	clrf	DISP_Str@invert
  5305     13C2  3080               	movlw	128
  5306     13C3  318D  2547  3193   	fcall	_DISP_Str
  5307     13C6                     l9330:
  5308                           
  5309                           ;main.c: 187:   DISP_Str(0x80,1,str_YAF,0);
  5310     13C6  01F8               	clrf	DISP_Str@row
  5311     13C7  0AF8               	incf	DISP_Str@row,f
  5312     13C8  30EE               	movlw	low (_str_YAF| (0+32768))
  5313     13C9  00F9               	movwf	DISP_Str@str
  5314     13CA  30A8               	movlw	high (_str_YAF| (0+32768))
  5315     13CB  00FA               	movwf	DISP_Str@str+1
  5316     13CC  01FB               	clrf	DISP_Str@invert
  5317     13CD  3080               	movlw	128
  5318     13CE  318D  2547  3193   	fcall	_DISP_Str
  5319     13D1                     l9332:
  5320                           
  5321                           ;main.c: 188:   DISP_Str(0x80,2,str_Version,0);
  5322     13D1  3002               	movlw	2
  5323     13D2  00F8               	movwf	DISP_Str@row
  5324     13D3  30BA               	movlw	low (_str_Version| (0+32768))
  5325     13D4  00F9               	movwf	DISP_Str@str
  5326     13D5  30A9               	movlw	high (_str_Version| (0+32768))
  5327     13D6  00FA               	movwf	DISP_Str@str+1
  5328     13D7  01FB               	clrf	DISP_Str@invert
  5329     13D8  3080               	movlw	128
  5330     13D9  318D  2547  3193   	fcall	_DISP_Str
  5331     13DC                     l9334:
  5332                           
  5333                           ;main.c: 194:   UTILI_Delay_ms(1500);
  5334     13DC  30DC               	movlw	220
  5335     13DD  00F0               	movwf	UTILI_Delay_ms@time_in_ms
  5336     13DE  3005               	movlw	5
  5337     13DF  00F1               	movwf	UTILI_Delay_ms@time_in_ms+1
  5338     13E0  3198  205D  3193   	fcall	_UTILI_Delay_ms
  5339     13E3                     l9336:
  5340                           
  5341                           ;main.c: 197:   DISP_Clr();
  5342     13E3  3199  2146  3193   	fcall	_DISP_Clr
  5343     13E6                     l9338:
  5344                           
  5345                           ;main.c: 198:   MENU_Init();
  5346     13E6  3187  27F6  3193   	fcall	_MENU_Init
  5347     13E9                     l9340:
  5348                           
  5349                           ;main.c: 201:   {;main.c: 202:     tunemem_t tunemem;;main.c: 203:     EEPROM_Read((uint
      +                          8_t) & ee_tunemem , &tunemem, sizeof (tunemem_t));
  5350     13E9  30A0               	movlw	low main@tunemem
  5351     13EA  00F3               	movwf	EEPROM_Read@ptrValue
  5352     13EB  3001               	movlw	high main@tunemem
  5353     13EC  00F4               	movwf	EEPROM_Read@ptrValue+1
  5354     13ED  300A               	movlw	10
  5355     13EE  00F5               	movwf	EEPROM_Read@size
  5356     13EF  3000               	movlw	(low _ee_tunemem)& (0+255)
  5357     13F0  3198  2093  3193   	fcall	_EEPROM_Read
  5358     13F3                     l9342:
  5359                           
  5360                           ;main.c: 204:     UTILI_Set_LC_Relays(tunemem.relays);
  5361     13F3  0023               	movlb	3	; select bank3
  5362     13F4  0821               	movf	(main@tunemem+1)^(0+384),w
  5363     13F5  00F2               	movwf	UTILI_Set_LC_Relays@relays+1
  5364     13F6  0820               	movf	main@tunemem^(0+384),w
  5365     13F7  00F1               	movwf	UTILI_Set_LC_Relays@relays
  5366     13F8  31A7  2758  3193   	fcall	_UTILI_Set_LC_Relays
  5367     13FB                     l9344:
  5368                           
  5369                           ;main.c: 209:   {;main.c: 211:     if(tick_old != tick_count)
  5370     13FB  0021               	movlb	1	; select bank1
  5371     13FC  083B               	movf	main@tick_old^(0+128),w
  5372     13FD  063C               	xorwf	_tick_count^(0+128),w	;volatile
  5373     13FE  1903               	skipnz
  5374     13FF  2C01               	goto	u11041
  5375     1400  2C02               	goto	u11040
  5376     1401                     u11041:
  5377     1401  2C09               	goto	l9350
  5378     1402                     u11040:
  5379     1402                     l9346:
  5380                           
  5381                           ;main.c: 212:     {;main.c: 213:       tick_old++;
  5382     1402  3001               	movlw	1
  5383     1403  07BB               	addwf	main@tick_old^(0+128),f
  5384                           
  5385                           ;main.c: 214:       tick_10ms++;
  5386     1404  3001               	movlw	1
  5387     1405  07BA               	addwf	main@tick_10ms^(0+128),f
  5388     1406                     l9348:
  5389                           
  5390                           ;main.c: 216:       ADC_Run();
  5391     1406  3187  271D  3193   	fcall	_ADC_Run
  5392     1409                     l9350:
  5393                           
  5394                           ;main.c: 227:     if(tick_10ms==10)
  5395     1409  300A               	movlw	10
  5396     140A  0021               	movlb	1	; select bank1
  5397     140B  063A               	xorwf	main@tick_10ms^(0+128),w
  5398     140C  1D03               	btfss	3,2
  5399     140D  2C0F               	goto	u11051
  5400     140E  2C10               	goto	u11050
  5401     140F                     u11051:
  5402     140F  2BFB               	goto	l9344
  5403     1410                     u11050:
  5404     1410                     l9352:
  5405                           
  5406                           ;main.c: 228:     {;main.c: 229:       tick_10ms=0;
  5407     1410  01BA               	clrf	main@tick_10ms^(0+128)
  5408     1411                     l9354:
  5409                           
  5410                           ;main.c: 232:       BUTTON_Run();
  5411     1411  319E  26F6  3193   	fcall	_BUTTON_Run
  5412     1414                     l9356:
  5413                           
  5414                           ;main.c: 233:       MENU_Run();
  5415     1414  3198  20CD  3193   	fcall	_MENU_Run
  5416     1417  0064               	clrwdt	;# 
  5417     1418  2BFB               	goto	l9344
  5418     1419  3180  2815         	ljmp	start
  5419     141B                     __end_of_main:
  5420                           
  5421                           	psect	text1
  5422     185D                     __ptext1:	
  5423 ;; *************** function _UTILI_Delay_ms *****************
  5424 ;; Defined at:
  5425 ;;		line 8 in file "utili.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  time_in_ms      2    0[COMMON] const unsigned int 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;  i               2    3[COMMON] unsigned int 
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  1    wreg      void 
  5432 ;; Registers used:
  5433 ;;		wreg, status,2, status,0
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5440 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5442 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5443 ;;Total ram usage:        5 bytes
  5444 ;; Hardware stack levels used: 1
  5445 ;; Hardware stack levels required when called: 1
  5446 ;; This function calls:
  5447 ;;		Nothing
  5448 ;; This function is called by:
  5449 ;;		_main
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453     185D                     _UTILI_Delay_ms:	
  5454                           ;psect for function _UTILI_Delay_ms
  5455                           
  5456     185D                     l9182:	
  5457                           ;incstack = 0
  5458                           ; Regs used in _UTILI_Delay_ms: [wreg+status,2+status,0]
  5459                           
  5460                           
  5461                           ;utili.c: 8: void UTILI_Delay_ms(const unsigned int time_in_ms);utili.c: 9: {;utili.c: 1
      +                          0:   unsigned int i = time_in_ms;
  5462     185D  0871               	movf	UTILI_Delay_ms@time_in_ms+1,w
  5463     185E  00F4               	movwf	UTILI_Delay_ms@i+1
  5464     185F  0870               	movf	UTILI_Delay_ms@time_in_ms,w
  5465     1860  00F3               	movwf	UTILI_Delay_ms@i
  5466     1861  0064               	clrwdt	;# 
  5467                           
  5468                           ;utili.c: 13:   while (i > 0)
  5469     1862  2870               	goto	l9186
  5470     1863                     l9184:
  5471                           
  5472                           ;utili.c: 14:   {;utili.c: 15:     _delay((unsigned long) (4000));
  5473     1863  3006               	movlw	6
  5474     1864  00F2               	movwf	??_UTILI_Delay_ms
  5475     1865  3030               	movlw	48
  5476     1866                     u11067:
  5477     1866  0B89               	decfsz	9,f
  5478     1867  2866               	goto	u11067
  5479     1868  0BF2               	decfsz	??_UTILI_Delay_ms,f
  5480     1869  2866               	goto	u11067
  5481     186A  3200               	nop2
  5482     186B  0064               	clrwdt	;# 
  5483                           
  5484                           ;utili.c: 17:     i--;
  5485     186C  3001               	movlw	1
  5486     186D  02F3               	subwf	UTILI_Delay_ms@i,f
  5487     186E  3000               	movlw	0
  5488     186F  3BF4               	subwfb	UTILI_Delay_ms@i+1,f
  5489     1870                     l9186:
  5490                           
  5491                           ;utili.c: 13:   while (i > 0)
  5492     1870  0873               	movf	UTILI_Delay_ms@i,w
  5493     1871  0474               	iorwf	UTILI_Delay_ms@i+1,w
  5494     1872  1D03               	btfss	3,2
  5495     1873  2875               	goto	u10901
  5496     1874  2876               	goto	u10900
  5497     1875                     u10901:
  5498     1875  2863               	goto	l9184
  5499     1876                     u10900:
  5500     1876                     l475:
  5501     1876  0008               	return
  5502     1877                     __end_of_UTILI_Delay_ms:
  5503                           
  5504                           	psect	text2
  5505     18CD                     __ptext2:	
  5506 ;; *************** function _MENU_Run *****************
  5507 ;; Defined at:
  5508 ;;		line 1373 in file "menu.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;Total ram usage:        2 bytes
  5527 ;; Hardware stack levels used: 1
  5528 ;; Hardware stack levels required when called: 6
  5529 ;; This function calls:
  5530 ;;		NULL
  5531 ;;		_MENU_About_Run
  5532 ;;		_MENU_CalPWR_Run
  5533 ;;		_MENU_Main_Run
  5534 ;;		_MENU_Memory_Run
  5535 ;;		_MENU_NameEdit_Run
  5536 ;;		_MENU_RelTest_Run
  5537 ;;		_MENU_Sleep_Run
  5538 ;;		_MENU_StartupSave_Run
  5539 ;;		_MENU_Sub_Run
  5540 ;;		_MENU_TParam_Run
  5541 ;;		_MENU_Tune_Run
  5542 ;; This function is called by:
  5543 ;;		_main
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547     18CD                     _MENU_Run:	
  5548                           ;psect for function _MENU_Run
  5549                           
  5550     18CD                     l9310:	
  5551                           ;incstack = 0
  5552                           ; Regs used in _MENU_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5553                           
  5554                           
  5555                           ;menu.c: 1375:   if(current_menu->Run != ((void*)0))
  5556     18CD  3004               	movlw	4
  5557     18CE  0020               	movlb	0	; select bank0
  5558     18CF  0753               	addwf	_current_menu,w
  5559     18D0  0084               	movwf	4
  5560     18D1  0854               	movf	_current_menu+1,w
  5561     18D2  1803               	skipnc
  5562     18D3  3E01               	addlw	1
  5563     18D4  0085               	movwf	5
  5564     18D5  0012               	moviw fsr0++
  5565     18D6  00D1               	movwf	??_MENU_Run
  5566     18D7  0012               	moviw fsr0++
  5567     18D8  04D1               	iorwf	??_MENU_Run,f
  5568     18D9  1903               	btfsc	3,2
  5569     18DA  28DC               	goto	u11031
  5570     18DB  28DD               	goto	u11030
  5571     18DC                     u11031:
  5572     18DC  28E9               	goto	l1504
  5573     18DD                     u11030:
  5574     18DD                     l9312:
  5575                           
  5576                           ;menu.c: 1376:   {;menu.c: 1377:     current_menu->Run();
  5577     18DD  3004               	movlw	4
  5578     18DE  0753               	addwf	_current_menu,w
  5579     18DF  0084               	movwf	4
  5580     18E0  0854               	movf	_current_menu+1,w
  5581     18E1  1803               	skipnc
  5582     18E2  3E01               	addlw	1
  5583     18E3  0085               	movwf	5
  5584     18E4  3F01               	moviw [1]fsr0
  5585     18E5  008A               	movwf	10
  5586     18E6  3F00               	moviw [0]fsr0
  5587     18E7  000A               	callw
  5588     18E8  3198               	pagesel	$
  5589     18E9                     l1504:
  5590     18E9  0008               	return
  5591     18EA                     __end_of_MENU_Run:
  5592                           
  5593                           	psect	text3
  5594     1BFA                     __ptext3:	
  5595 ;; *************** function _MENU_StartupSave_Run *****************
  5596 ;; Defined at:
  5597 ;;		line 1296 in file "menu.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;		None
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;		None
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      void 
  5604 ;; Registers used:
  5605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5615 ;;Total ram usage:        0 bytes
  5616 ;; Hardware stack levels used: 1
  5617 ;; Hardware stack levels required when called: 2
  5618 ;; This function calls:
  5619 ;;		_EEPROM_Write
  5620 ;;		_MENU_Init
  5621 ;;		_MENU_StartupSave_Update
  5622 ;;		_UTILI_Get_LC_Relays
  5623 ;; This function is called by:
  5624 ;;		_MENU_Run
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628     1BFA                     _MENU_StartupSave_Run:	
  5629                           ;psect for function _MENU_StartupSave_Run
  5630                           
  5631     1BFA                     l9026:	
  5632                           ;incstack = 0
  5633                           ; Regs used in _MENU_StartupSave_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5634                           
  5635                           
  5636                           ;menu.c: 1298:   if(BUTTON_count == 251)
  5637     1BFA  30FB               	movlw	251
  5638     1BFB  0020               	movlb	0	; select bank0
  5639     1BFC  0659               	xorwf	_BUTTON_count,w
  5640     1BFD  1D03               	btfss	3,2
  5641     1BFE  2C00               	goto	u10801
  5642     1BFF  2C01               	goto	u10800
  5643     1C00                     u10801:
  5644     1C00  2C0D               	goto	l9036
  5645     1C01                     u10800:
  5646     1C01                     l9028:
  5647                           
  5648                           ;menu.c: 1299:   {;menu.c: 1301:     MENU_var.startupsave.cursor++;
  5649     1C01  3001               	movlw	1
  5650     1C02  07DC               	addwf	_MENU_var+1,f
  5651     1C03                     l9030:
  5652                           
  5653                           ;menu.c: 1302:     if(MENU_var.startupsave.cursor > 1)
  5654     1C03  3002               	movlw	2
  5655     1C04  025C               	subwf	_MENU_var+1,w
  5656     1C05  1C03               	skipc
  5657     1C06  2C08               	goto	u10811
  5658     1C07  2C09               	goto	u10810
  5659     1C08                     u10811:
  5660     1C08  2C0A               	goto	l9034
  5661     1C09                     u10810:
  5662     1C09                     l9032:
  5663                           
  5664                           ;menu.c: 1303:     {;menu.c: 1304:       MENU_var.startupsave.cursor=0;
  5665     1C09  01DC               	clrf	_MENU_var+1
  5666     1C0A                     l9034:
  5667                           
  5668                           ;menu.c: 1306:     MENU_StartupSave_Update();
  5669     1C0A  3199  2190  319B   	fcall	_MENU_StartupSave_Update
  5670     1C0D                     l9036:
  5671                           
  5672                           ;menu.c: 1309:    if (BUTTON_count == 80)
  5673     1C0D  3050               	movlw	80
  5674     1C0E  0020               	movlb	0	; select bank0
  5675     1C0F  0659               	xorwf	_BUTTON_count,w
  5676     1C10  1D03               	btfss	3,2
  5677     1C11  2C13               	goto	u10821
  5678     1C12  2C14               	goto	u10820
  5679     1C13                     u10821:
  5680     1C13  2C2E               	goto	l1487
  5681     1C14                     u10820:
  5682     1C14                     l9038:
  5683                           
  5684                           ;menu.c: 1310:    {;menu.c: 1312:      if(MENU_var.startupsave.cursor == 0)
  5685     1C14  085C               	movf	_MENU_var+1,w
  5686     1C15  1D03               	btfss	3,2
  5687     1C16  2C18               	goto	u10831
  5688     1C17  2C19               	goto	u10830
  5689     1C18                     u10831:
  5690     1C18  2C2B               	goto	l9044
  5691     1C19                     u10830:
  5692     1C19                     l9040:
  5693                           
  5694                           ;menu.c: 1313:      {;menu.c: 1314:        MENU_var.startupsave.tunemem.relays = UTILI_G
      +                          et_LC_Relays();
  5695     1C19  3198  2013  319B   	fcall	_UTILI_Get_LC_Relays
  5696     1C1C  0871               	movf	?_UTILI_Get_LC_Relays+1,w
  5697     1C1D  0020               	movlb	0	; select bank0
  5698     1C1E  00DE               	movwf	_MENU_var+3
  5699     1C1F  0870               	movf	?_UTILI_Get_LC_Relays,w
  5700     1C20  00DD               	movwf	_MENU_var+2
  5701     1C21                     l9042:
  5702                           
  5703                           ;menu.c: 1315:        EEPROM_Write((uint8_t)ee_tunemem , &MENU_var.startupsave.tunemem, 
      +                          sizeof(tunemem_t));
  5704     1C21  305D               	movlw	low (_MENU_var+2)
  5705     1C22  00F3               	movwf	EEPROM_Write@ptrValue
  5706     1C23  3000               	movlw	high (_MENU_var+2)
  5707     1C24  00F4               	movwf	EEPROM_Write@ptrValue+1
  5708     1C25  300A               	movlw	10
  5709     1C26  00F5               	movwf	EEPROM_Write@size
  5710     1C27  3000               	movlw	(low _ee_tunemem)& (0+255)
  5711     1C28  3198  2044  319B   	fcall	_EEPROM_Write
  5712     1C2B                     l9044:
  5713                           
  5714                           ;menu.c: 1317:      MENU_Init();
  5715     1C2B  3187  27F6  319B   	fcall	_MENU_Init
  5716     1C2E                     l1487:
  5717     1C2E  0008               	return
  5718     1C2F                     __end_of_MENU_StartupSave_Run:
  5719                           
  5720                           	psect	text4
  5721     16C0                     __ptext4:	
  5722 ;; *************** function _MENU_NameEdit_Run *****************
  5723 ;; Defined at:
  5724 ;;		line 1214 in file "menu.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;		None
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  i               1   29[BANK0 ] unsigned char 
  5729 ;;  c               1   28[BANK0 ] unsigned char 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      void 
  5732 ;; Registers used:
  5733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5740 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5741 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5742 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;Total ram usage:        4 bytes
  5744 ;; Hardware stack levels used: 1
  5745 ;; Hardware stack levels required when called: 2
  5746 ;; This function calls:
  5747 ;;		_EEPROM_Write
  5748 ;;		_MENU_Init
  5749 ;;		_MENU_NameEdit_Update
  5750 ;;		_UTILI_Get_LC_Relays
  5751 ;;		___bmul
  5752 ;; This function is called by:
  5753 ;;		_MENU_Run
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757     16C0                     _MENU_NameEdit_Run:	
  5758                           ;psect for function _MENU_NameEdit_Run
  5759                           
  5760     16C0                     l8966:	
  5761                           ;incstack = 0
  5762                           ; Regs used in _MENU_NameEdit_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5763                           
  5764                           
  5765                           ;menu.c: 1216:   if(BUTTON_count == 0)
  5766     16C0  0020               	movlb	0	; select bank0
  5767     16C1  0859               	movf	_BUTTON_count,w
  5768     16C2  1D03               	btfss	3,2
  5769     16C3  2EC5               	goto	u10691
  5770     16C4  2EC6               	goto	u10690
  5771     16C5                     u10691:
  5772     16C5  2EC8               	goto	l8970
  5773     16C6                     u10690:
  5774     16C6                     l8968:
  5775                           
  5776                           ;menu.c: 1217:   {;menu.c: 1218:     MENU_var.nameedit.button_repeat_delay = 40;
  5777     16C6  3028               	movlw	40
  5778     16C7  00DD               	movwf	_MENU_var+2
  5779     16C8                     l8970:
  5780                           
  5781                           ;menu.c: 1221:   if(BUTTON_count == 251)
  5782     16C8  30FB               	movlw	251
  5783     16C9  0659               	xorwf	_BUTTON_count,w
  5784     16CA  1D03               	btfss	3,2
  5785     16CB  2ECD               	goto	u10701
  5786     16CC  2ECE               	goto	u10700
  5787     16CD                     u10701:
  5788     16CD  2EDA               	goto	l8980
  5789     16CE                     u10700:
  5790     16CE                     l8972:
  5791                           
  5792                           ;menu.c: 1222:   {;menu.c: 1224:     MENU_var.nameedit.cursor++;
  5793     16CE  3001               	movlw	1
  5794     16CF  07DC               	addwf	_MENU_var+1,f
  5795     16D0                     l8974:
  5796                           
  5797                           ;menu.c: 1225:     if(MENU_var.nameedit.cursor > 8 +1)
  5798     16D0  300A               	movlw	10
  5799     16D1  025C               	subwf	_MENU_var+1,w
  5800     16D2  1C03               	skipc
  5801     16D3  2ED5               	goto	u10711
  5802     16D4  2ED6               	goto	u10710
  5803     16D5                     u10711:
  5804     16D5  2ED7               	goto	l8978
  5805     16D6                     u10710:
  5806     16D6                     l8976:
  5807                           
  5808                           ;menu.c: 1226:     {;menu.c: 1227:       MENU_var.nameedit.cursor=0;
  5809     16D6  01DC               	clrf	_MENU_var+1
  5810     16D7                     l8978:
  5811                           
  5812                           ;menu.c: 1229:     MENU_NameEdit_Update();
  5813     16D7  3189  21D5  3196   	fcall	_MENU_NameEdit_Update
  5814     16DA                     l8980:
  5815                           
  5816                           ;menu.c: 1232:    if (BUTTON_count == 80)
  5817     16DA  3050               	movlw	80
  5818     16DB  0020               	movlb	0	; select bank0
  5819     16DC  0659               	xorwf	_BUTTON_count,w
  5820     16DD  1D03               	btfss	3,2
  5821     16DE  2EE0               	goto	u10721
  5822     16DF  2EE1               	goto	u10720
  5823     16E0                     u10721:
  5824     16E0  2F5D               	goto	l1471
  5825     16E1                     u10720:
  5826     16E1                     l8982:
  5827                           
  5828                           ;menu.c: 1233:    {;menu.c: 1234:       BUTTON_count -= MENU_var.nameedit.button_repeat_
      +                          delay;
  5829     16E1  085D               	movf	_MENU_var+2,w
  5830     16E2  02D9               	subwf	_BUTTON_count,f
  5831     16E3                     l8984:
  5832                           
  5833                           ;menu.c: 1236:       if(MENU_var.nameedit.button_repeat_delay > 10)
  5834     16E3  300B               	movlw	11
  5835     16E4  025D               	subwf	_MENU_var+2,w
  5836     16E5  1C03               	skipc
  5837     16E6  2EE8               	goto	u10731
  5838     16E7  2EE9               	goto	u10730
  5839     16E8                     u10731:
  5840     16E8  2EEB               	goto	l8988
  5841     16E9                     u10730:
  5842     16E9                     l8986:
  5843                           
  5844                           ;menu.c: 1237:       {;menu.c: 1238:         MENU_var.nameedit.button_repeat_delay -= 5;
  5845     16E9  3005               	movlw	5
  5846     16EA  02DD               	subwf	_MENU_var+2,f
  5847     16EB                     l8988:
  5848                           
  5849                           ;menu.c: 1241:      if(MENU_var.nameedit.cursor < 8)
  5850     16EB  3008               	movlw	8
  5851     16EC  025C               	subwf	_MENU_var+1,w
  5852     16ED  1803               	skipnc
  5853     16EE  2EF0               	goto	u10741
  5854     16EF  2EF1               	goto	u10740
  5855     16F0                     u10741:
  5856     16F0  2F33               	goto	l9010
  5857     16F1                     u10740:
  5858     16F1                     l8990:
  5859                           
  5860                           ;menu.c: 1242:      {;menu.c: 1243:        char c = MENU_var.nameedit.tunemem.str_name[M
      +                          ENU_var.nameedit.cursor];
  5861     16F1  3060               	movlw	low (_MENU_var+5)
  5862     16F2  00BA               	movwf	??_MENU_NameEdit_Run
  5863     16F3  3000               	movlw	high (_MENU_var+5)
  5864     16F4  00BB               	movwf	??_MENU_NameEdit_Run+1
  5865     16F5  085C               	movf	_MENU_var+1,w
  5866     16F6  073A               	addwf	??_MENU_NameEdit_Run,w
  5867     16F7  0086               	movwf	6
  5868     16F8  3000               	movlw	0
  5869     16F9  3D3B               	addwfc	??_MENU_NameEdit_Run+1,w
  5870     16FA  0087               	movwf	7
  5871     16FB  0801               	movf	1,w
  5872     16FC  00BC               	movwf	MENU_NameEdit_Run@c
  5873     16FD                     l8992:
  5874                           
  5875                           ;menu.c: 1244:        uint8_t i=0;
  5876     16FD  01BD               	clrf	MENU_NameEdit_Run@i
  5877                           
  5878                           ;menu.c: 1245:        while( (c != NameEditChar[i]) && (i<sizeof(NameEditChar)) )
  5879     16FE  2F01               	goto	l8996
  5880     16FF                     l8994:
  5881                           
  5882                           ;menu.c: 1246:        {;menu.c: 1247:          i++;
  5883     16FF  3001               	movlw	1
  5884     1700  07BD               	addwf	MENU_NameEdit_Run@i,f
  5885     1701                     l8996:
  5886                           
  5887                           ;menu.c: 1245:        while( (c != NameEditChar[i]) && (i<sizeof(NameEditChar)) )
  5888     1701  083D               	movf	MENU_NameEdit_Run@i,w
  5889     1702  3E00               	addlw	low (_NameEditChar| (0+32768))
  5890     1703  0084               	movwf	4
  5891     1704  30A0               	movlw	high (_NameEditChar| (0+32768))
  5892     1705  1803               	skipnc
  5893     1706  3E01               	addlw	1
  5894     1707  0085               	movwf	5
  5895     1708  0800               	movf	0,w	;code access
  5896     1709  063C               	xorwf	MENU_NameEdit_Run@c,w
  5897     170A  1903               	skipnz
  5898     170B  2F0D               	goto	u10751
  5899     170C  2F0E               	goto	u10750
  5900     170D                     u10751:
  5901     170D  2F14               	goto	l9000
  5902     170E                     u10750:
  5903     170E                     l8998:
  5904     170E  3049               	movlw	73
  5905     170F  023D               	subwf	MENU_NameEdit_Run@i,w
  5906     1710  1C03               	skipc
  5907     1711  2F13               	goto	u10761
  5908     1712  2F14               	goto	u10760
  5909     1713                     u10761:
  5910     1713  2EFF               	goto	l8994
  5911     1714                     u10760:
  5912     1714                     l9000:
  5913                           
  5914                           ;menu.c: 1249:        i++;
  5915     1714  3001               	movlw	1
  5916     1715  07BD               	addwf	MENU_NameEdit_Run@i,f
  5917     1716                     l9002:
  5918                           
  5919                           ;menu.c: 1250:        if (i >= (sizeof(NameEditChar)-1) )
  5920     1716  3048               	movlw	72
  5921     1717  023D               	subwf	MENU_NameEdit_Run@i,w
  5922     1718  1C03               	skipc
  5923     1719  2F1B               	goto	u10771
  5924     171A  2F1C               	goto	u10770
  5925     171B                     u10771:
  5926     171B  2F1D               	goto	l9006
  5927     171C                     u10770:
  5928     171C                     l9004:
  5929                           
  5930                           ;menu.c: 1251:        {;menu.c: 1252:          i=0;
  5931     171C  01BD               	clrf	MENU_NameEdit_Run@i
  5932     171D                     l9006:
  5933                           
  5934                           ;menu.c: 1254:        MENU_var.nameedit.tunemem.str_name[MENU_var.nameedit.cursor] = Nam
      +                          eEditChar[i];
  5935     171D  3060               	movlw	low (_MENU_var+5)
  5936     171E  00BA               	movwf	??_MENU_NameEdit_Run
  5937     171F  3000               	movlw	high (_MENU_var+5)
  5938     1720  00BB               	movwf	??_MENU_NameEdit_Run+1
  5939     1721  085C               	movf	_MENU_var+1,w
  5940     1722  073A               	addwf	??_MENU_NameEdit_Run,w
  5941     1723  0086               	movwf	6
  5942     1724  3000               	movlw	0
  5943     1725  3D3B               	addwfc	??_MENU_NameEdit_Run+1,w
  5944     1726  0087               	movwf	7
  5945     1727  083D               	movf	MENU_NameEdit_Run@i,w
  5946     1728  3E00               	addlw	low (_NameEditChar| (0+32768))
  5947     1729  0084               	movwf	4
  5948     172A  30A0               	movlw	high (_NameEditChar| (0+32768))
  5949     172B  1803               	skipnc
  5950     172C  3E01               	addlw	1
  5951     172D  0085               	movwf	5
  5952     172E  0800               	movf	0,w	;code access
  5953     172F  0081               	movwf	1
  5954     1730                     l9008:
  5955                           
  5956                           ;menu.c: 1255:        MENU_NameEdit_Update();
  5957     1730  3189  21D5  3196   	fcall	_MENU_NameEdit_Update
  5958     1733                     l9010:
  5959                           
  5960                           ;menu.c: 1258:      if(MENU_var.nameedit.cursor == 8)
  5961     1733  3008               	movlw	8
  5962     1734  0020               	movlb	0	; select bank0
  5963     1735  065C               	xorwf	_MENU_var+1,w
  5964     1736  1D03               	btfss	3,2
  5965     1737  2F39               	goto	u10781
  5966     1738  2F3A               	goto	u10780
  5967     1739                     u10781:
  5968     1739  2F56               	goto	l9020
  5969     173A                     u10780:
  5970     173A                     l9012:
  5971                           
  5972                           ;menu.c: 1259:      {;menu.c: 1260:        MENU_var.nameedit.tunemem.relays = UTILI_Get_
      +                          LC_Relays();
  5973     173A  3198  2013  3196   	fcall	_UTILI_Get_LC_Relays
  5974     173D  0871               	movf	?_UTILI_Get_LC_Relays+1,w
  5975     173E  0020               	movlb	0	; select bank0
  5976     173F  00DF               	movwf	_MENU_var+4
  5977     1740  0870               	movf	?_UTILI_Get_LC_Relays,w
  5978     1741  00DE               	movwf	_MENU_var+3
  5979     1742                     l9014:
  5980                           
  5981                           ;menu.c: 1261:        EEPROM_Write((uint8_t)ee_tunemem + (sizeof(tunemem_t) * MENU_var.n
      +                          ameedit.mem_index) , &MENU_var.nameedit.tunemem, sizeof(tunemem_t));
  5982     1742  305E               	movlw	low (_MENU_var+3)
  5983     1743  00F3               	movwf	EEPROM_Write@ptrValue
  5984     1744  3000               	movlw	high (_MENU_var+3)
  5985     1745  00F4               	movwf	EEPROM_Write@ptrValue+1
  5986     1746  300A               	movlw	10
  5987     1747  00F5               	movwf	EEPROM_Write@size
  5988     1748  300A               	movlw	10
  5989     1749  00F0               	movwf	___bmul@multiplicand
  5990     174A  085B               	movf	_MENU_var,w
  5991     174B  31A7  2745  3196   	fcall	___bmul
  5992     174E  3E00               	addlw	low _ee_tunemem
  5993     174F  3198  2044  3196   	fcall	_EEPROM_Write
  5994     1752                     l9016:
  5995                           
  5996                           ;menu.c: 1262:        MENU_Init();
  5997     1752  3187  27F6  3196   	fcall	_MENU_Init
  5998     1755  2F5D               	goto	l1471
  5999     1756                     l9020:
  6000                           
  6001                           ;menu.c: 1266:      if(MENU_var.nameedit.cursor == 8 +1)
  6002     1756  3009               	movlw	9
  6003     1757  065C               	xorwf	_MENU_var+1,w
  6004     1758  1D03               	btfss	3,2
  6005     1759  2F5B               	goto	u10791
  6006     175A  2F5C               	goto	u10790
  6007     175B                     u10791:
  6008     175B  2F5D               	goto	l1471
  6009     175C                     u10790:
  6010     175C  2F52               	goto	l9016
  6011     175D                     l1471:
  6012     175D  0008               	return
  6013     175E                     __end_of_MENU_NameEdit_Run:
  6014                           
  6015                           	psect	text5
  6016     055F                     __ptext5:	
  6017 ;; *************** function _MENU_CalPWR_Run *****************
  6018 ;; Defined at:
  6019 ;;		line 848 in file "menu.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  y1              2   43[BANK0 ] short 
  6024 ;;  y2              2   41[BANK0 ] short 
  6025 ;;  value           2   45[BANK0 ] short 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  1    wreg      void 
  6028 ;; Registers used:
  6029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6038 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6039 ;;Total ram usage:       12 bytes
  6040 ;; Hardware stack levels used: 1
  6041 ;; Hardware stack levels required when called: 5
  6042 ;; This function calls:
  6043 ;;		_DISP_Clr
  6044 ;;		_DISP_Str
  6045 ;;		_EEPROM_Write
  6046 ;;		_MENU_CalPWR_Update
  6047 ;;		_MENU_Init
  6048 ;;		_UTILI_deciWatt_to_centiVolt
  6049 ;;		___aldiv
  6050 ;;		___lmul
  6051 ;; This function is called by:
  6052 ;;		_MENU_Run
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056     055F                     _MENU_CalPWR_Run:	
  6057                           ;psect for function _MENU_CalPWR_Run
  6058                           
  6059     055F                     l8800:	
  6060                           ;incstack = 0
  6061                           ; Regs used in _MENU_CalPWR_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6062                           
  6063                           
  6064                           ;menu.c: 850:   if (BUTTON_count == 251)
  6065     055F  30FB               	movlw	251
  6066     0560  0020               	movlb	0	; select bank0
  6067     0561  0659               	xorwf	_BUTTON_count,w
  6068     0562  1D03               	btfss	3,2
  6069     0563  2D65               	goto	u10451
  6070     0564  2D66               	goto	u10450
  6071     0565                     u10451:
  6072     0565  2D6C               	goto	l8806
  6073     0566                     u10450:
  6074     0566                     l8802:
  6075                           
  6076                           ;menu.c: 851:   {;menu.c: 852:     MENU_var.cal.cursor = MENU_var.cal.cursor ^ 0x01;
  6077     0566  085B               	movf	_MENU_var,w
  6078     0567  3A01               	xorlw	1
  6079     0568  00DB               	movwf	_MENU_var
  6080     0569                     l8804:
  6081                           
  6082                           ;menu.c: 853:     MENU_CalPWR_Update();
  6083     0569  3191  21D9  3185   	fcall	_MENU_CalPWR_Update
  6084     056C                     l8806:
  6085                           
  6086                           ;menu.c: 856:   if (BUTTON_count == 80)
  6087     056C  3050               	movlw	80
  6088     056D  0020               	movlb	0	; select bank0
  6089     056E  0659               	xorwf	_BUTTON_count,w
  6090     056F  1D03               	btfss	3,2
  6091     0570  2D72               	goto	u10461
  6092     0571  2D73               	goto	u10460
  6093     0572                     u10461:
  6094     0572  2DE9               	goto	l8838
  6095     0573                     u10460:
  6096     0573                     l8808:
  6097                           
  6098                           ;menu.c: 857:   {;menu.c: 858:     BUTTON_count -= 40;
  6099     0573  3028               	movlw	40
  6100     0574  02D9               	subwf	_BUTTON_count,f
  6101                           
  6102                           ;menu.c: 860:     if ((MENU_var.cal.cursor == 0)&&(MENU_var.cal.step <=1))
  6103     0575  085B               	movf	_MENU_var,w
  6104     0576  1D03               	btfss	3,2
  6105     0577  2D79               	goto	u10471
  6106     0578  2D7A               	goto	u10470
  6107     0579                     u10471:
  6108     0579  2DE5               	goto	l8834
  6109     057A                     u10470:
  6110     057A                     l8810:
  6111     057A  3002               	movlw	2
  6112     057B  025C               	subwf	_MENU_var+1,w
  6113     057C  1803               	skipnc
  6114     057D  2D7F               	goto	u10481
  6115     057E  2D80               	goto	u10480
  6116     057F                     u10481:
  6117     057F  2DE5               	goto	l8834
  6118     0580                     u10480:
  6119     0580                     l8812:
  6120                           
  6121                           ;menu.c: 861:     {;menu.c: 862:       int16_t value = MENU_var.cal.cal_point[MENU_var.c
      +                          al.step];
  6122     0580  085C               	movf	_MENU_var+1,w
  6123     0581  00C3               	movwf	??_MENU_CalPWR_Run
  6124     0582  01C4               	clrf	??_MENU_CalPWR_Run+1
  6125     0583  35C3               	lslf	??_MENU_CalPWR_Run,f
  6126     0584  0DC4               	rlf	??_MENU_CalPWR_Run+1,f
  6127     0585  305D               	movlw	low (_MENU_var+2)
  6128     0586  00C5               	movwf	??_MENU_CalPWR_Run+2
  6129     0587  3000               	movlw	high (_MENU_var+2)
  6130     0588  00C6               	movwf	??_MENU_CalPWR_Run+3
  6131     0589  0843               	movf	??_MENU_CalPWR_Run,w
  6132     058A  0745               	addwf	??_MENU_CalPWR_Run+2,w
  6133     058B  0086               	movwf	6
  6134     058C  0844               	movf	??_MENU_CalPWR_Run+1,w
  6135     058D  3D46               	addwfc	??_MENU_CalPWR_Run+3,w
  6136     058E  0087               	movwf	7
  6137     058F  3F40               	moviw [0]fsr1
  6138     0590  00CD               	movwf	MENU_CalPWR_Run@value
  6139     0591  3F41               	moviw [1]fsr1
  6140     0592  00CE               	movwf	MENU_CalPWR_Run@value+1
  6141     0593                     l8814:
  6142                           
  6143                           ;menu.c: 864:       if (value < 100) value += 5;
  6144     0593  084E               	movf	MENU_CalPWR_Run@value+1,w
  6145     0594  3A80               	xorlw	128
  6146     0595  00C3               	movwf	??_MENU_CalPWR_Run
  6147     0596  3080               	movlw	128
  6148     0597  0243               	subwf	??_MENU_CalPWR_Run,w
  6149     0598  1D03               	skipz
  6150     0599  2D9C               	goto	u10495
  6151     059A  3064               	movlw	100
  6152     059B  024D               	subwf	MENU_CalPWR_Run@value,w
  6153     059C                     u10495:
  6154     059C  1803               	skipnc
  6155     059D  2D9F               	goto	u10491
  6156     059E  2DA0               	goto	u10490
  6157     059F                     u10491:
  6158     059F  2DA6               	goto	l8818
  6159     05A0                     u10490:
  6160     05A0                     l8816:
  6161     05A0  3005               	movlw	5
  6162     05A1  0020               	movlb	0	; select bank0
  6163     05A2  07CD               	addwf	MENU_CalPWR_Run@value,f
  6164     05A3  3000               	movlw	0
  6165     05A4  3DCE               	addwfc	MENU_CalPWR_Run@value+1,f
  6166     05A5  2DAB               	goto	l8820
  6167     05A6                     l8818:
  6168     05A6  3032               	movlw	50
  6169     05A7  0020               	movlb	0	; select bank0
  6170     05A8  07CD               	addwf	MENU_CalPWR_Run@value,f
  6171     05A9  3000               	movlw	0
  6172     05AA  3DCE               	addwfc	MENU_CalPWR_Run@value+1,f
  6173     05AB                     l8820:
  6174                           
  6175                           ;menu.c: 867:       if (MENU_var.cal.step == 0)
  6176     05AB  085C               	movf	_MENU_var+1,w
  6177     05AC  1D03               	btfss	3,2
  6178     05AD  2DAF               	goto	u10501
  6179     05AE  2DB0               	goto	u10500
  6180     05AF                     u10501:
  6181     05AF  2DC1               	goto	l8826
  6182     05B0                     u10500:
  6183     05B0                     l8822:
  6184                           
  6185                           ;menu.c: 868:       {;menu.c: 869:         if (value > 200) value = 0;
  6186     05B0  084E               	movf	MENU_CalPWR_Run@value+1,w
  6187     05B1  3A80               	xorlw	128
  6188     05B2  00C3               	movwf	??_MENU_CalPWR_Run
  6189     05B3  3080               	movlw	128
  6190     05B4  0243               	subwf	??_MENU_CalPWR_Run,w
  6191     05B5  1D03               	skipz
  6192     05B6  2DB9               	goto	u10515
  6193     05B7  30C9               	movlw	201
  6194     05B8  024D               	subwf	MENU_CalPWR_Run@value,w
  6195     05B9                     u10515:
  6196     05B9  1C03               	skipc
  6197     05BA  2DBC               	goto	u10511
  6198     05BB  2DBD               	goto	u10510
  6199     05BC                     u10511:
  6200     05BC  2DD3               	goto	l8830
  6201     05BD                     u10510:
  6202     05BD                     l8824:
  6203     05BD  0020               	movlb	0	; select bank0
  6204     05BE  01CD               	clrf	MENU_CalPWR_Run@value
  6205     05BF  01CE               	clrf	MENU_CalPWR_Run@value+1
  6206     05C0  2DD3               	goto	l8830
  6207     05C1                     l8826:
  6208                           
  6209                           ;menu.c: 872:       {;menu.c: 874:         if (value > 1000) value = MENU_var.cal.cal_po
      +                          int[0];
  6210     05C1  084E               	movf	MENU_CalPWR_Run@value+1,w
  6211     05C2  3A80               	xorlw	128
  6212     05C3  00C3               	movwf	??_MENU_CalPWR_Run
  6213     05C4  3083               	movlw	131
  6214     05C5  0243               	subwf	??_MENU_CalPWR_Run,w
  6215     05C6  1D03               	skipz
  6216     05C7  2DCA               	goto	u10525
  6217     05C8  30E9               	movlw	233
  6218     05C9  024D               	subwf	MENU_CalPWR_Run@value,w
  6219     05CA                     u10525:
  6220     05CA  1C03               	skipc
  6221     05CB  2DCD               	goto	u10521
  6222     05CC  2DCE               	goto	u10520
  6223     05CD                     u10521:
  6224     05CD  2DD3               	goto	l8830
  6225     05CE                     u10520:
  6226     05CE                     l8828:
  6227     05CE  0020               	movlb	0	; select bank0
  6228     05CF  085E               	movf	_MENU_var+3,w
  6229     05D0  00CE               	movwf	MENU_CalPWR_Run@value+1
  6230     05D1  085D               	movf	_MENU_var+2,w
  6231     05D2  00CD               	movwf	MENU_CalPWR_Run@value
  6232     05D3                     l8830:
  6233                           
  6234                           ;menu.c: 877:       MENU_var.cal.cal_point[MENU_var.cal.step] = value;
  6235     05D3  0020               	movlb	0	; select bank0
  6236     05D4  355C               	lslf	_MENU_var+1,w
  6237     05D5  3E5D               	addlw	low (_MENU_var+2)
  6238     05D6  0086               	movwf	6
  6239     05D7  0187               	clrf	7
  6240     05D8  3000               	movlw	high (_MENU_var+2)
  6241     05D9  3D87               	addwfc	7,f
  6242     05DA  355C               	lslf	_MENU_var+1,w
  6243     05DB  3000               	movlw	0
  6244     05DC  3D87               	addwfc	7,f
  6245     05DD  084D               	movf	MENU_CalPWR_Run@value,w
  6246     05DE  3FC0               	movwi [0]fsr1
  6247     05DF  084E               	movf	MENU_CalPWR_Run@value+1,w
  6248     05E0  3FC1               	movwi [1]fsr1
  6249     05E1                     l8832:
  6250                           
  6251                           ;menu.c: 878:       MENU_CalPWR_Update();
  6252     05E1  3191  21D9  3185   	fcall	_MENU_CalPWR_Update
  6253                           
  6254                           ;menu.c: 879:     }
  6255     05E4  2DE9               	goto	l8838
  6256     05E5                     l8834:
  6257                           
  6258                           ;menu.c: 881:     {;menu.c: 882:       MENU_Init();
  6259     05E5  3187  27F6  3185   	fcall	_MENU_Init
  6260     05E8  2F1C               	goto	l1372
  6261     05E9                     l8838:
  6262                           
  6263                           ;menu.c: 888:   if (MENU_var.cal.step <= 1)
  6264     05E9  3002               	movlw	2
  6265     05EA  0020               	movlb	0	; select bank0
  6266     05EB  025C               	subwf	_MENU_var+1,w
  6267     05EC  1803               	skipnc
  6268     05ED  2DEF               	goto	u10531
  6269     05EE  2DF0               	goto	u10530
  6270     05EF                     u10531:
  6271     05EF  2E2F               	goto	l8852
  6272     05F0                     u10530:
  6273     05F0                     l8840:
  6274                           
  6275                           ;menu.c: 889:   {;menu.c: 890:     if (global.adc_f_mV > 100)
  6276     05F0  0021               	movlb	1	; select bank1
  6277     05F1  0857               	movf	((_global+1)^(0+128)+25),w
  6278     05F2  3A80               	xorlw	128
  6279     05F3  0020               	movlb	0	; select bank0
  6280     05F4  00C3               	movwf	??_MENU_CalPWR_Run
  6281     05F5  3080               	movlw	128
  6282     05F6  0243               	subwf	??_MENU_CalPWR_Run,w
  6283     05F7  1D03               	skipz
  6284     05F8  2DFC               	goto	u10545
  6285     05F9  3065               	movlw	101
  6286     05FA  0021               	movlb	1	; select bank1
  6287     05FB  0256               	subwf	(_global^(0+128)+25),w
  6288     05FC                     u10545:
  6289     05FC  1C03               	skipc
  6290     05FD  2DFF               	goto	u10541
  6291     05FE  2E00               	goto	u10540
  6292     05FF                     u10541:
  6293     05FF  2F14               	goto	l8882
  6294     0600                     u10540:
  6295     0600                     l8842:
  6296                           
  6297                           ;menu.c: 891:     {;menu.c: 892:       if (global.adc_f_mV == MENU_var.cal.adc_value_old
      +                          )
  6298     0600  0020               	movlb	0	; select bank0
  6299     0601  0866               	movf	_MENU_var+11,w
  6300     0602  0021               	movlb	1	; select bank1
  6301     0603  0657               	xorwf	((_global+1)^(0+128)+25),w
  6302     0604  1D03               	skipz
  6303     0605  2E0A               	goto	u10555
  6304     0606  0020               	movlb	0	; select bank0
  6305     0607  0865               	movf	_MENU_var+10,w
  6306     0608  0021               	movlb	1	; select bank1
  6307     0609  0656               	xorwf	(_global^(0+128)+25),w
  6308     060A                     u10555:
  6309     060A  1D03               	skipz
  6310     060B  2E0D               	goto	u10551
  6311     060C  2E0E               	goto	u10550
  6312     060D                     u10551:
  6313     060D  2F14               	goto	l8882
  6314     060E                     u10550:
  6315     060E                     l8844:
  6316                           
  6317                           ;menu.c: 893:       {;menu.c: 894:         MENU_var.cal.adc_value[MENU_var.cal.step] = g
      +                          lobal.adc_f_mV;
  6318     060E  0020               	movlb	0	; select bank0
  6319     060F  355C               	lslf	_MENU_var+1,w
  6320     0610  3E61               	addlw	low (_MENU_var+6)
  6321     0611  0086               	movwf	6
  6322     0612  0187               	clrf	7
  6323     0613  3000               	movlw	high (_MENU_var+6)
  6324     0614  3D87               	addwfc	7,f
  6325     0615  355C               	lslf	_MENU_var+1,w
  6326     0616  3000               	movlw	0
  6327     0617  3D87               	addwfc	7,f
  6328     0618  0021               	movlb	1	; select bank1
  6329     0619  0856               	movf	(_global^(0+128)+25),w
  6330     061A  3FC0               	movwi [0]fsr1
  6331     061B  0857               	movf	((_global+1)^(0+128)+25),w
  6332     061C  3FC1               	movwi [1]fsr1
  6333     061D                     l8846:
  6334                           
  6335                           ;menu.c: 896:         DISP_Clr();
  6336     061D  3199  2146  3185   	fcall	_DISP_Clr
  6337     0620                     l8848:
  6338                           
  6339                           ;menu.c: 897:         DISP_Str(0x80, 1, str_Ok, 0);
  6340     0620  01F8               	clrf	DISP_Str@row
  6341     0621  0AF8               	incf	DISP_Str@row,f
  6342     0622  30F2               	movlw	low (_str_Ok| (0+32768))
  6343     0623  00F9               	movwf	DISP_Str@str
  6344     0624  30A9               	movlw	high (_str_Ok| (0+32768))
  6345     0625  00FA               	movwf	DISP_Str@str+1
  6346     0626  01FB               	clrf	DISP_Str@invert
  6347     0627  3080               	movlw	128
  6348     0628  318D  2547  3185   	fcall	_DISP_Str
  6349     062B                     l8850:
  6350                           
  6351                           ;menu.c: 898:         MENU_var.cal.step += 2;
  6352     062B  3002               	movlw	2
  6353     062C  0020               	movlb	0	; select bank0
  6354     062D  07DC               	addwf	_MENU_var+1,f
  6355     062E  2F14               	goto	l8882
  6356     062F                     l8852:
  6357                           
  6358                           ;menu.c: 903:   {;menu.c: 905:     if (global.adc_f_mV < 5)
  6359     062F  0021               	movlb	1	; select bank1
  6360     0630  0857               	movf	((_global+1)^(0+128)+25),w
  6361     0631  3A80               	xorlw	128
  6362     0632  0020               	movlb	0	; select bank0
  6363     0633  00C3               	movwf	??_MENU_CalPWR_Run
  6364     0634  3080               	movlw	128
  6365     0635  0243               	subwf	??_MENU_CalPWR_Run,w
  6366     0636  1D03               	skipz
  6367     0637  2E3B               	goto	u10565
  6368     0638  3005               	movlw	5
  6369     0639  0021               	movlb	1	; select bank1
  6370     063A  0256               	subwf	(_global^(0+128)+25),w
  6371     063B                     u10565:
  6372     063B  1803               	skipnc
  6373     063C  2E3E               	goto	u10561
  6374     063D  2E3F               	goto	u10560
  6375     063E                     u10561:
  6376     063E  2F14               	goto	l8882
  6377     063F                     u10560:
  6378     063F                     l8854:
  6379                           
  6380                           ;menu.c: 906:     {;menu.c: 907:       MENU_var.cal.step--;
  6381     063F  3001               	movlw	1
  6382     0640  0020               	movlb	0	; select bank0
  6383     0641  02DC               	subwf	_MENU_var+1,f
  6384                           
  6385                           ;menu.c: 908:       if (MENU_var.cal.step == 1)
  6386     0642  035C               	decf	_MENU_var+1,w
  6387     0643  1D03               	btfss	3,2
  6388     0644  2E46               	goto	u10571
  6389     0645  2E47               	goto	u10570
  6390     0646                     u10571:
  6391     0646  2E4E               	goto	l8860
  6392     0647                     u10570:
  6393     0647                     l8856:
  6394                           
  6395                           ;menu.c: 909:       {;menu.c: 910:         DISP_Clr();
  6396     0647  3199  2146  3185   	fcall	_DISP_Clr
  6397     064A                     l8858:
  6398                           
  6399                           ;menu.c: 911:         MENU_CalPWR_Update();
  6400     064A  3191  21D9  3185   	fcall	_MENU_CalPWR_Update
  6401                           
  6402                           ;menu.c: 912:       }
  6403     064D  2F14               	goto	l8882
  6404     064E                     l8860:
  6405                           
  6406                           ;menu.c: 914:       {;menu.c: 915:         global.cal_point[0] = MENU_var.cal.cal_point[
      +                          0];
  6407     064E  085E               	movf	_MENU_var+3,w
  6408     064F  0021               	movlb	1	; select bank1
  6409     0650  00CD               	movwf	((_global+1)^(0+128)+15)
  6410     0651  0020               	movlb	0	; select bank0
  6411     0652  085D               	movf	_MENU_var+2,w
  6412     0653  0021               	movlb	1	; select bank1
  6413     0654  00CC               	movwf	(_global^(0+128)+15)
  6414                           
  6415                           ;menu.c: 916:         global.cal_point[1] = MENU_var.cal.cal_point[1];
  6416     0655  0020               	movlb	0	; select bank0
  6417     0656  0860               	movf	_MENU_var+5,w
  6418     0657  0021               	movlb	1	; select bank1
  6419     0658  00CF               	movwf	((_global+1)^(0+128)+17)
  6420     0659  0020               	movlb	0	; select bank0
  6421     065A  085F               	movf	_MENU_var+4,w
  6422     065B  0021               	movlb	1	; select bank1
  6423     065C  00CE               	movwf	(_global^(0+128)+17)
  6424     065D                     l8862:
  6425                           
  6426                           ;menu.c: 918:         int16_t y1 = UTILI_deciWatt_to_centiVolt(global.cal_point[0]);
  6427     065D  084D               	movf	((_global+1)^(0+128)+15),w
  6428     065E  00FD               	movwf	UTILI_deciWatt_to_centiVolt@deciWatt+1
  6429     065F  084C               	movf	(_global^(0+128)+15),w
  6430     0660  00FC               	movwf	UTILI_deciWatt_to_centiVolt@deciWatt
  6431     0661  3188  2084  3185   	fcall	_UTILI_deciWatt_to_centiVolt
  6432     0664  087D               	movf	?_UTILI_deciWatt_to_centiVolt+1,w
  6433     0665  0020               	movlb	0	; select bank0
  6434     0666  00CC               	movwf	MENU_CalPWR_Run@y1+1
  6435     0667  087C               	movf	?_UTILI_deciWatt_to_centiVolt,w
  6436     0668  00CB               	movwf	MENU_CalPWR_Run@y1
  6437     0669                     l8864:
  6438                           
  6439                           ;menu.c: 919:         int16_t y2 = UTILI_deciWatt_to_centiVolt(global.cal_point[1]);
  6440     0669  0021               	movlb	1	; select bank1
  6441     066A  084F               	movf	((_global+1)^(0+128)+17),w
  6442     066B  00FD               	movwf	UTILI_deciWatt_to_centiVolt@deciWatt+1
  6443     066C  084E               	movf	(_global^(0+128)+17),w
  6444     066D  00FC               	movwf	UTILI_deciWatt_to_centiVolt@deciWatt
  6445     066E  3188  2084  3185   	fcall	_UTILI_deciWatt_to_centiVolt
  6446     0671  087D               	movf	?_UTILI_deciWatt_to_centiVolt+1,w
  6447     0672  0020               	movlb	0	; select bank0
  6448     0673  00CA               	movwf	MENU_CalPWR_Run@y2+1
  6449     0674  087C               	movf	?_UTILI_deciWatt_to_centiVolt,w
  6450     0675  00C9               	movwf	MENU_CalPWR_Run@y2
  6451     0676                     l8866:
  6452                           
  6453                           ;menu.c: 921:         global.cal_gain = (int16_t) (((y2 - y1) * (int32_t) 4096) / (MENU_
      +                          var.cal.adc_value[1] - MENU_var.cal.adc_value[0]));
  6454     0676  305B               	movlw	low _MENU_var
  6455     0677  0086               	movwf	6
  6456     0678  3000               	movlw	high _MENU_var
  6457     0679  0087               	movwf	7
  6458     067A  3146               	addfsr 1,6
  6459     067B  305B               	movlw	low _MENU_var
  6460     067C  0084               	movwf	4
  6461     067D  3000               	movlw	high _MENU_var
  6462     067E  0085               	movwf	5
  6463     067F  3108               	addfsr 0,8
  6464     0680  3F40               	moviw [0]fsr1
  6465     0681  0200               	subwf	0,w
  6466     0682  00A0               	movwf	___aldiv@divisor
  6467     0683  3101               	addfsr 0,1
  6468     0684  3F41               	moviw [1]fsr1
  6469     0685  3B00               	subwfb	0,w
  6470     0686  00A1               	movwf	___aldiv@divisor+1
  6471     0687  01A2               	clrf	___aldiv@divisor+2
  6472     0688  1BA1               	btfsc	___aldiv@divisor+1,7
  6473     0689  03A2               	decf	___aldiv@divisor+2,f
  6474     068A  0822               	movf	___aldiv@divisor+2,w
  6475     068B  00A3               	movwf	___aldiv@divisor+3
  6476     068C  084B               	movf	MENU_CalPWR_Run@y1,w
  6477     068D  0249               	subwf	MENU_CalPWR_Run@y2,w
  6478     068E  00C3               	movwf	??_MENU_CalPWR_Run
  6479     068F  084C               	movf	MENU_CalPWR_Run@y1+1,w
  6480     0690  3B4A               	subwfb	MENU_CalPWR_Run@y2+1,w
  6481     0691  00C4               	movwf	??_MENU_CalPWR_Run+1
  6482     0692  0843               	movf	??_MENU_CalPWR_Run,w
  6483     0693  00C5               	movwf	??_MENU_CalPWR_Run+2
  6484     0694  0844               	movf	??_MENU_CalPWR_Run+1,w
  6485     0695  00C6               	movwf	??_MENU_CalPWR_Run+3
  6486     0696  3000               	movlw	0
  6487     0697  1BC6               	btfsc	??_MENU_CalPWR_Run+3,7
  6488     0698  30FF               	movlw	255
  6489     0699  00C7               	movwf	??_MENU_CalPWR_Run+4
  6490     069A  00C8               	movwf	??_MENU_CalPWR_Run+5
  6491     069B  300C               	movlw	12
  6492     069C                     u10585:
  6493     069C  35C5               	lslf	??_MENU_CalPWR_Run+2,f
  6494     069D  0DC6               	rlf	??_MENU_CalPWR_Run+3,f
  6495     069E  0DC7               	rlf	??_MENU_CalPWR_Run+4,f
  6496     069F  0DC8               	rlf	??_MENU_CalPWR_Run+5,f
  6497     06A0                     u10580:
  6498     06A0  0B89               	decfsz	9,f
  6499     06A1  2E9C               	goto	u10585
  6500     06A2  0848               	movf	??_MENU_CalPWR_Run+5,w
  6501     06A3  00A7               	movwf	___aldiv@dividend+3
  6502     06A4  0847               	movf	??_MENU_CalPWR_Run+4,w
  6503     06A5  00A6               	movwf	___aldiv@dividend+2
  6504     06A6  0846               	movf	??_MENU_CalPWR_Run+3,w
  6505     06A7  00A5               	movwf	___aldiv@dividend+1
  6506     06A8  0845               	movf	??_MENU_CalPWR_Run+2,w
  6507     06A9  00A4               	movwf	___aldiv@dividend
  6508     06AA  3195  25A2  3185   	fcall	___aldiv
  6509     06AD  0020               	movlb	0	; select bank0
  6510     06AE  0821               	movf	?___aldiv+1,w
  6511     06AF  0021               	movlb	1	; select bank1
  6512     06B0  00D3               	movwf	((_global+1)^(0+128)+21)
  6513     06B1  0020               	movlb	0	; select bank0
  6514     06B2  0820               	movf	?___aldiv,w
  6515     06B3  0021               	movlb	1	; select bank1
  6516     06B4  00D2               	movwf	(_global^(0+128)+21)
  6517     06B5                     l8868:
  6518                           
  6519                           ;menu.c: 922:         global.cal_offset = y1 - (int16_t) (((int32_t) global.cal_gain * M
      +                          ENU_var.cal.adc_value[0]) / 4096);
  6520     06B5  3000               	movlw	0
  6521     06B6  0020               	movlb	0	; select bank0
  6522     06B7  00A3               	movwf	___aldiv@divisor+3
  6523     06B8  3000               	movlw	0
  6524     06B9  00A2               	movwf	___aldiv@divisor+2
  6525     06BA  3010               	movlw	16
  6526     06BB  00A1               	movwf	___aldiv@divisor+1
  6527     06BC  3000               	movlw	0
  6528     06BD  00A0               	movwf	___aldiv@divisor
  6529     06BE  0021               	movlb	1	; select bank1
  6530     06BF  0852               	movf	(_global^(0+128)+21),w
  6531     06C0  00F0               	movwf	___lmul@multiplier
  6532     06C1  0853               	movf	((_global+1)^(0+128)+21),w
  6533     06C2  00F1               	movwf	___lmul@multiplier+1
  6534     06C3  0D89               	rlf	9,f
  6535     06C4  3B89               	subwfb	9,f
  6536     06C5  0989               	comf	9,f
  6537     06C6  00F2               	movwf	___lmul@multiplier+2
  6538     06C7  00F3               	movwf	___lmul@multiplier+3
  6539     06C8  0020               	movlb	0	; select bank0
  6540     06C9  0861               	movf	_MENU_var+6,w
  6541     06CA  00F4               	movwf	___lmul@multiplicand
  6542     06CB  0862               	movf	_MENU_var+7,w
  6543     06CC  00F5               	movwf	___lmul@multiplicand+1
  6544     06CD  0D89               	rlf	9,f
  6545     06CE  3B89               	subwfb	9,f
  6546     06CF  0989               	comf	9,f
  6547     06D0  00F6               	movwf	___lmul@multiplicand+2
  6548     06D1  00F7               	movwf	___lmul@multiplicand+3
  6549     06D2  319B  232A  3185   	fcall	___lmul
  6550     06D5  0873               	movf	?___lmul+3,w
  6551     06D6  0020               	movlb	0	; select bank0
  6552     06D7  00A7               	movwf	___aldiv@dividend+3
  6553     06D8  0872               	movf	?___lmul+2,w
  6554     06D9  00A6               	movwf	___aldiv@dividend+2
  6555     06DA  0871               	movf	?___lmul+1,w
  6556     06DB  00A5               	movwf	___aldiv@dividend+1
  6557     06DC  0870               	movf	?___lmul,w
  6558     06DD  00A4               	movwf	___aldiv@dividend
  6559     06DE  3195  25A2  3185   	fcall	___aldiv
  6560     06E1  0020               	movlb	0	; select bank0
  6561     06E2  0820               	movf	?___aldiv,w
  6562     06E3  024B               	subwf	MENU_CalPWR_Run@y1,w
  6563     06E4  0021               	movlb	1	; select bank1
  6564     06E5  00D0               	movwf	(_global^(0+128)+19)
  6565     06E6  0020               	movlb	0	; select bank0
  6566     06E7  0821               	movf	?___aldiv+1,w
  6567     06E8  3B4C               	subwfb	MENU_CalPWR_Run@y1+1,w
  6568     06E9  0021               	movlb	1	; select bank1
  6569     06EA  00D1               	movwf	((_global+1)^(0+128)+19)
  6570     06EB                     l8870:
  6571                           
  6572                           ;menu.c: 925:         EEPROM_Write((uint8_t)&ee_cal_point_0, &global.cal_point[0], sizeo
      +                          f (ee_cal_point_0));
  6573     06EB  30CC               	movlw	low (_global+15)
  6574     06EC  00F3               	movwf	EEPROM_Write@ptrValue
  6575     06ED  3000               	movlw	high (_global+15)
  6576     06EE  00F4               	movwf	EEPROM_Write@ptrValue+1
  6577     06EF  3002               	movlw	2
  6578     06F0  00F5               	movwf	EEPROM_Write@size
  6579     06F1  306A               	movlw	(low _ee_cal_point_0)& (0+255)
  6580     06F2  3198  2044  3185   	fcall	_EEPROM_Write
  6581     06F5                     l8872:
  6582                           
  6583                           ;menu.c: 926:         EEPROM_Write((uint8_t)&ee_cal_point_1, &global.cal_point[1], sizeo
      +                          f (ee_cal_point_1));
  6584     06F5  30CE               	movlw	low (_global+17)
  6585     06F6  00F3               	movwf	EEPROM_Write@ptrValue
  6586     06F7  3000               	movlw	high (_global+17)
  6587     06F8  00F4               	movwf	EEPROM_Write@ptrValue+1
  6588     06F9  3002               	movlw	2
  6589     06FA  00F5               	movwf	EEPROM_Write@size
  6590     06FB  3068               	movlw	(low _ee_cal_point_1)& (0+255)
  6591     06FC  3198  2044  3185   	fcall	_EEPROM_Write
  6592     06FF                     l8874:
  6593                           
  6594                           ;menu.c: 927:         EEPROM_Write((uint8_t)&ee_cal_offset, &global.cal_offset, sizeof (
      +                          ee_cal_offset));
  6595     06FF  30D0               	movlw	low (_global+19)
  6596     0700  00F3               	movwf	EEPROM_Write@ptrValue
  6597     0701  3000               	movlw	high (_global+19)
  6598     0702  00F4               	movwf	EEPROM_Write@ptrValue+1
  6599     0703  3002               	movlw	2
  6600     0704  00F5               	movwf	EEPROM_Write@size
  6601     0705  3066               	movlw	(low _ee_cal_offset)& (0+255)
  6602     0706  3198  2044  3185   	fcall	_EEPROM_Write
  6603     0709                     l8876:
  6604                           
  6605                           ;menu.c: 928:         EEPROM_Write((uint8_t)&ee_cal_gain, &global.cal_gain, sizeof (ee_c
      +                          al_gain));
  6606     0709  30D2               	movlw	low (_global+21)
  6607     070A  00F3               	movwf	EEPROM_Write@ptrValue
  6608     070B  3000               	movlw	high (_global+21)
  6609     070C  00F4               	movwf	EEPROM_Write@ptrValue+1
  6610     070D  3002               	movlw	2
  6611     070E  00F5               	movwf	EEPROM_Write@size
  6612     070F  3064               	movlw	(low _ee_cal_gain)& (0+255)
  6613     0710  3198  2044  3185   	fcall	_EEPROM_Write
  6614     0713  2DE5               	goto	l8834
  6615     0714                     l8882:
  6616                           
  6617                           ;menu.c: 936:   MENU_var.cal.adc_value_old = global.adc_f_mV;
  6618     0714  0021               	movlb	1	; select bank1
  6619     0715  0857               	movf	((_global+1)^(0+128)+25),w
  6620     0716  0020               	movlb	0	; select bank0
  6621     0717  00E6               	movwf	_MENU_var+11
  6622     0718  0021               	movlb	1	; select bank1
  6623     0719  0856               	movf	(_global^(0+128)+25),w
  6624     071A  0020               	movlb	0	; select bank0
  6625     071B  00E5               	movwf	_MENU_var+10
  6626     071C                     l1372:
  6627     071C  0008               	return
  6628     071D                     __end_of_MENU_CalPWR_Run:
  6629                           
  6630                           	psect	text6
  6631     0C09                     __ptext6:	
  6632 ;; *************** function _MENU_RelTest_Run *****************
  6633 ;; Defined at:
  6634 ;;		line 699 in file "menu.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;		None
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;  update          1   29[BANK0 ] unsigned char 
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  1    wreg      void 
  6641 ;; Registers used:
  6642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6652 ;;Total ram usage:        1 bytes
  6653 ;; Hardware stack levels used: 1
  6654 ;; Hardware stack levels required when called: 2
  6655 ;; This function calls:
  6656 ;;		_DISP_PWR
  6657 ;;		_DISP_SWR
  6658 ;;		_MENU_Init
  6659 ;;		_MENU_RelTest_Update
  6660 ;;		_UTILI_CalPWR
  6661 ;;		_UTILI_CalSWR
  6662 ;;		_UTILI_SetRelays
  6663 ;;		_UTILI_Set_LC_Relays
  6664 ;; This function is called by:
  6665 ;;		_MENU_Run
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669     0C09                     _MENU_RelTest_Run:	
  6670                           ;psect for function _MENU_RelTest_Run
  6671                           
  6672     0C09                     l8680:	
  6673                           ;incstack = 0
  6674                           ; Regs used in _MENU_RelTest_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6675                           
  6676                           
  6677                           ;menu.c: 701:   MENU_var.reltest.update_cnt++;
  6678     0C09  3001               	movlw	1
  6679     0C0A  0020               	movlb	0	; select bank0
  6680     0C0B  07DE               	addwf	_MENU_var+3,f
  6681                           
  6682                           ;menu.c: 702:   if (MENU_var.reltest.update_cnt == 10)
  6683     0C0C  300A               	movlw	10
  6684     0C0D  065E               	xorwf	_MENU_var+3,w
  6685     0C0E  1D03               	btfss	3,2
  6686     0C0F  2C11               	goto	u10111
  6687     0C10  2C12               	goto	u10110
  6688     0C11                     u10111:
  6689     0C11  2C37               	goto	l8692
  6690     0C12                     u10110:
  6691     0C12                     l8682:
  6692                           
  6693                           ;menu.c: 703:   {;menu.c: 704:     MENU_var.reltest.update_cnt = 0;
  6694     0C12  01DE               	clrf	_MENU_var+3
  6695     0C13                     l8684:
  6696                           
  6697                           ;menu.c: 705:     UTILI_CalPWR();
  6698     0C13  3191  217D  318C   	fcall	_UTILI_CalPWR
  6699     0C16                     l8686:
  6700                           
  6701                           ;menu.c: 706:     UTILI_CalSWR();
  6702     0C16  3188  2000  318C   	fcall	_UTILI_CalSWR
  6703     0C19                     l8688:
  6704                           
  6705                           ;menu.c: 707:     DISP_SWR(0, 0, global.SWR, 0);
  6706     0C19  0020               	movlb	0	; select bank0
  6707     0C1A  01B1               	clrf	DISP_SWR@row
  6708     0C1B  0021               	movlb	1	; select bank1
  6709     0C1C  0840               	movf	((_global+1)^(0+128)+2),w
  6710     0C1D  0020               	movlb	0	; select bank0
  6711     0C1E  00B3               	movwf	DISP_SWR@centiSWR+1
  6712     0C1F  0021               	movlb	1	; select bank1
  6713     0C20  083F               	movf	(_global^(0+128)+2),w
  6714     0C21  0020               	movlb	0	; select bank0
  6715     0C22  00B2               	movwf	DISP_SWR@centiSWR
  6716     0C23  01B4               	clrf	DISP_SWR@invert
  6717     0C24  3000               	movlw	0
  6718     0C25  319D  2545  318C   	fcall	_DISP_SWR
  6719     0C28                     l8690:
  6720                           
  6721                           ;menu.c: 708:     DISP_PWR(6, 0, global.PWR, 0);
  6722     0C28  0020               	movlb	0	; select bank0
  6723     0C29  01B1               	clrf	DISP_PWR@row
  6724     0C2A  0021               	movlb	1	; select bank1
  6725     0C2B  083E               	movf	(_global+1)^(0+128),w
  6726     0C2C  0020               	movlb	0	; select bank0
  6727     0C2D  00B3               	movwf	DISP_PWR@deciWatt+1
  6728     0C2E  0021               	movlb	1	; select bank1
  6729     0C2F  083D               	movf	_global^(0+128),w
  6730     0C30  0020               	movlb	0	; select bank0
  6731     0C31  00B2               	movwf	DISP_PWR@deciWatt
  6732     0C32  01B4               	clrf	DISP_PWR@invert
  6733     0C33  3006               	movlw	6
  6734     0C34  319E  26A5  318C   	fcall	_DISP_PWR
  6735     0C37                     l8692:
  6736                           
  6737                           ;menu.c: 711:   if (BUTTON_count == 251)
  6738     0C37  30FB               	movlw	251
  6739     0C38  0020               	movlb	0	; select bank0
  6740     0C39  0659               	xorwf	_BUTTON_count,w
  6741     0C3A  1D03               	btfss	3,2
  6742     0C3B  2C3D               	goto	u10121
  6743     0C3C  2C3E               	goto	u10120
  6744     0C3D                     u10121:
  6745     0C3D  2C4A               	goto	l8702
  6746     0C3E                     u10120:
  6747     0C3E                     l8694:
  6748                           
  6749                           ;menu.c: 712:   {;menu.c: 713:     MENU_var.reltest.cursor++;
  6750     0C3E  3001               	movlw	1
  6751     0C3F  07DB               	addwf	_MENU_var,f
  6752     0C40                     l8696:
  6753                           
  6754                           ;menu.c: 714:     if (MENU_var.reltest.cursor > 3)
  6755     0C40  3004               	movlw	4
  6756     0C41  025B               	subwf	_MENU_var,w
  6757     0C42  1C03               	skipc
  6758     0C43  2C45               	goto	u10131
  6759     0C44  2C46               	goto	u10130
  6760     0C45                     u10131:
  6761     0C45  2C47               	goto	l8700
  6762     0C46                     u10130:
  6763     0C46                     l8698:
  6764                           
  6765                           ;menu.c: 715:     {;menu.c: 716:       MENU_var.reltest.cursor = 0;
  6766     0C46  01DB               	clrf	_MENU_var
  6767     0C47                     l8700:
  6768                           
  6769                           ;menu.c: 719:     MENU_RelTest_Update();
  6770     0C47  318A  2289  318C   	fcall	_MENU_RelTest_Update
  6771     0C4A                     l8702:
  6772                           
  6773                           ;menu.c: 722:   if (BUTTON_count == 80)
  6774     0C4A  3050               	movlw	80
  6775     0C4B  0020               	movlb	0	; select bank0
  6776     0C4C  0659               	xorwf	_BUTTON_count,w
  6777     0C4D  1D03               	btfss	3,2
  6778     0C4E  2C50               	goto	u10141
  6779     0C4F  2C51               	goto	u10140
  6780     0C50                     u10141:
  6781     0C50  2CC6               	goto	l8752
  6782     0C51                     u10140:
  6783     0C51                     l8704:
  6784                           
  6785                           ;menu.c: 723:   {;menu.c: 724:     BUTTON_count -= 40;
  6786     0C51  3028               	movlw	40
  6787     0C52  02D9               	subwf	_BUTTON_count,f
  6788                           
  6789                           ;menu.c: 727:     if ((!global.cap_sw && (MENU_var.reltest.cursor == 0))
  6790     0C53  0021               	movlb	1	; select bank1
  6791     0C54  0858               	movf	(_global^(0+128)+27),w
  6792     0C55  1D03               	btfss	3,2
  6793     0C56  2C58               	goto	u10151
  6794     0C57  2C59               	goto	u10150
  6795     0C58                     u10151:
  6796     0C58  2C5F               	goto	l8708
  6797     0C59                     u10150:
  6798     0C59                     l8706:
  6799     0C59  0020               	movlb	0	; select bank0
  6800     0C5A  085B               	movf	_MENU_var,w
  6801     0C5B  1903               	btfsc	3,2
  6802     0C5C  2C5E               	goto	u10161
  6803     0C5D  2C5F               	goto	u10160
  6804     0C5E                     u10161:
  6805     0C5E  2C6B               	goto	l8712
  6806     0C5F                     u10160:
  6807     0C5F                     l8708:
  6808     0C5F  0021               	movlb	1	; select bank1
  6809     0C60  0858               	movf	(_global^(0+128)+27),w
  6810     0C61  1903               	btfsc	3,2
  6811     0C62  2C64               	goto	u10171
  6812     0C63  2C65               	goto	u10170
  6813     0C64                     u10171:
  6814     0C64  2C77               	goto	l1313
  6815     0C65                     u10170:
  6816     0C65                     l8710:
  6817     0C65  0020               	movlb	0	; select bank0
  6818     0C66  035B               	decf	_MENU_var,w
  6819     0C67  1D03               	btfss	3,2
  6820     0C68  2C6A               	goto	u10181
  6821     0C69  2C6B               	goto	u10180
  6822     0C6A                     u10181:
  6823     0C6A  2C77               	goto	l1313
  6824     0C6B                     u10180:
  6825     0C6B                     l8712:
  6826                           
  6827                           ;menu.c: 729:     {;menu.c: 730:       if (global.cap_relays == 0)
  6828     0C6B  0021               	movlb	1	; select bank1
  6829     0C6C  0859               	movf	(_global^(0+128)+28),w
  6830     0C6D  1D03               	btfss	3,2
  6831     0C6E  2C70               	goto	u10191
  6832     0C6F  2C71               	goto	u10190
  6833     0C70                     u10191:
  6834     0C70  2C74               	goto	l8716
  6835     0C71                     u10190:
  6836     0C71                     l8714:
  6837                           
  6838                           ;menu.c: 731:       {;menu.c: 732:         global.cap_relays = 1;
  6839     0C71  3001               	movlw	1
  6840     0C72  00D9               	movwf	(_global^(0+128)+28)
  6841                           
  6842                           ;menu.c: 733:       } else
  6843     0C73  2C77               	goto	l1313
  6844     0C74                     l8716:
  6845                           
  6846                           ;menu.c: 734:       {;menu.c: 735:         global.cap_relays = (uint8_t) (global.cap_rel
      +                          ays << 1) & 0x7f;
  6847     0C74  3559               	lslf	(_global^(0+128)+28),w
  6848     0C75  397F               	andlw	127
  6849     0C76  00D9               	movwf	(_global^(0+128)+28)
  6850     0C77                     l1313:	
  6851                           ;menu.c: 737:     }
  6852                           
  6853                           
  6854                           ;menu.c: 740:     if ((!global.cap_sw && (MENU_var.reltest.cursor == 1))
  6855     0C77  0021               	movlb	1	; select bank1
  6856     0C78  0858               	movf	(_global^(0+128)+27),w
  6857     0C79  1D03               	btfss	3,2
  6858     0C7A  2C7C               	goto	u10201
  6859     0C7B  2C7D               	goto	u10200
  6860     0C7C                     u10201:
  6861     0C7C  2C83               	goto	l8720
  6862     0C7D                     u10200:
  6863     0C7D                     l8718:
  6864     0C7D  0020               	movlb	0	; select bank0
  6865     0C7E  035B               	decf	_MENU_var,w
  6866     0C7F  1903               	btfsc	3,2
  6867     0C80  2C82               	goto	u10211
  6868     0C81  2C83               	goto	u10210
  6869     0C82                     u10211:
  6870     0C82  2C8F               	goto	l8724
  6871     0C83                     u10210:
  6872     0C83                     l8720:
  6873     0C83  0021               	movlb	1	; select bank1
  6874     0C84  0858               	movf	(_global^(0+128)+27),w
  6875     0C85  1903               	btfsc	3,2
  6876     0C86  2C88               	goto	u10221
  6877     0C87  2C89               	goto	u10220
  6878     0C88                     u10221:
  6879     0C88  2C9B               	goto	l1320
  6880     0C89                     u10220:
  6881     0C89                     l8722:
  6882     0C89  0020               	movlb	0	; select bank0
  6883     0C8A  085B               	movf	_MENU_var,w
  6884     0C8B  1D03               	btfss	3,2
  6885     0C8C  2C8E               	goto	u10231
  6886     0C8D  2C8F               	goto	u10230
  6887     0C8E                     u10231:
  6888     0C8E  2C9B               	goto	l1320
  6889     0C8F                     u10230:
  6890     0C8F                     l8724:
  6891                           
  6892                           ;menu.c: 742:     {;menu.c: 743:       if (global.ind_relays == 0)
  6893     0C8F  0021               	movlb	1	; select bank1
  6894     0C90  085A               	movf	(_global^(0+128)+29),w
  6895     0C91  1D03               	btfss	3,2
  6896     0C92  2C94               	goto	u10241
  6897     0C93  2C95               	goto	u10240
  6898     0C94                     u10241:
  6899     0C94  2C98               	goto	l8728
  6900     0C95                     u10240:
  6901     0C95                     l8726:
  6902                           
  6903                           ;menu.c: 744:       {;menu.c: 745:         global.ind_relays = 1;
  6904     0C95  3001               	movlw	1
  6905     0C96  00DA               	movwf	(_global^(0+128)+29)
  6906                           
  6907                           ;menu.c: 746:       } else
  6908     0C97  2C9B               	goto	l1320
  6909     0C98                     l8728:
  6910                           
  6911                           ;menu.c: 747:       {;menu.c: 748:         global.ind_relays = (uint8_t) (global.ind_rel
      +                          ays << 1) & 0x7f;
  6912     0C98  355A               	lslf	(_global^(0+128)+29),w
  6913     0C99  397F               	andlw	127
  6914     0C9A  00DA               	movwf	(_global^(0+128)+29)
  6915     0C9B                     l1320:	
  6916                           ;menu.c: 750:     }
  6917                           
  6918                           
  6919                           ;menu.c: 752:     if (MENU_var.reltest.cursor == 2)
  6920     0C9B  3002               	movlw	2
  6921     0C9C  0020               	movlb	0	; select bank0
  6922     0C9D  065B               	xorwf	_MENU_var,w
  6923     0C9E  1D03               	btfss	3,2
  6924     0C9F  2CA1               	goto	u10251
  6925     0CA0  2CA2               	goto	u10250
  6926     0CA1                     u10251:
  6927     0CA1  2CAF               	goto	l8738
  6928     0CA2                     u10250:
  6929     0CA2                     l8730:
  6930                           
  6931                           ;menu.c: 753:     {;menu.c: 754:       if (global.cap_sw == 0)
  6932     0CA2  0021               	movlb	1	; select bank1
  6933     0CA3  0858               	movf	(_global^(0+128)+27),w
  6934     0CA4  1D03               	btfss	3,2
  6935     0CA5  2CA7               	goto	u10261
  6936     0CA6  2CA8               	goto	u10260
  6937     0CA7                     u10261:
  6938     0CA7  2CAB               	goto	l8734
  6939     0CA8                     u10260:
  6940     0CA8                     l8732:
  6941                           
  6942                           ;menu.c: 755:       {;menu.c: 756:         global.cap_sw = 1;
  6943     0CA8  3001               	movlw	1
  6944     0CA9  00D8               	movwf	(_global^(0+128)+27)
  6945                           
  6946                           ;menu.c: 757:       } else
  6947     0CAA  2CAC               	goto	l8736
  6948     0CAB                     l8734:
  6949                           
  6950                           ;menu.c: 758:       {;menu.c: 759:         global.cap_sw = 0;
  6951     0CAB  01D8               	clrf	(_global^(0+128)+27)
  6952     0CAC                     l8736:
  6953                           
  6954                           ;menu.c: 761:       BUTTON_count = 255;
  6955     0CAC  30FF               	movlw	255
  6956     0CAD  0020               	movlb	0	; select bank0
  6957     0CAE  00D9               	movwf	_BUTTON_count
  6958     0CAF                     l8738:
  6959                           
  6960                           ;menu.c: 764:     if (MENU_var.reltest.cursor == 3)
  6961     0CAF  3003               	movlw	3
  6962     0CB0  065B               	xorwf	_MENU_var,w
  6963     0CB1  1D03               	btfss	3,2
  6964     0CB2  2CB4               	goto	u10271
  6965     0CB3  2CB5               	goto	u10270
  6966     0CB4                     u10271:
  6967     0CB4  2CC0               	goto	l8748
  6968     0CB5                     u10270:
  6969     0CB5                     l8740:
  6970                           
  6971                           ;menu.c: 765:     {;menu.c: 767:       UTILI_Set_LC_Relays(MENU_var.reltest.relais_backu
      +                          p);
  6972     0CB5  085D               	movf	_MENU_var+2,w
  6973     0CB6  00F2               	movwf	UTILI_Set_LC_Relays@relays+1
  6974     0CB7  085C               	movf	_MENU_var+1,w
  6975     0CB8  00F1               	movwf	UTILI_Set_LC_Relays@relays
  6976     0CB9  31A7  2758  318C   	fcall	_UTILI_Set_LC_Relays
  6977     0CBC                     l8742:
  6978                           
  6979                           ;menu.c: 768:       MENU_Init();
  6980     0CBC  3187  27F6  318C   	fcall	_MENU_Init
  6981     0CBF  2D46               	goto	l1331
  6982     0CC0                     l8748:
  6983                           
  6984                           ;menu.c: 772:     {;menu.c: 773:       MENU_RelTest_Update();
  6985     0CC0  318A  2289  318C   	fcall	_MENU_RelTest_Update
  6986     0CC3                     l8750:
  6987                           
  6988                           ;menu.c: 775:     UTILI_SetRelays();
  6989     0CC3  3194  2499  318C   	fcall	_UTILI_SetRelays
  6990     0CC6                     l8752:
  6991                           
  6992                           ;menu.c: 779:   uint8_t update =0;
  6993     0CC6  0020               	movlb	0	; select bank0
  6994     0CC7  01BD               	clrf	MENU_RelTest_Run@update
  6995     0CC8                     l8754:
  6996                           
  6997                           ;menu.c: 782:   if ((!global.cap_sw && (MENU_var.reltest.cursor == 0))
  6998     0CC8  0021               	movlb	1	; select bank1
  6999     0CC9  0858               	movf	(_global^(0+128)+27),w
  7000     0CCA  1D03               	btfss	3,2
  7001     0CCB  2CCD               	goto	u10281
  7002     0CCC  2CCE               	goto	u10280
  7003     0CCD                     u10281:
  7004     0CCD  2CD4               	goto	l8758
  7005     0CCE                     u10280:
  7006     0CCE                     l8756:
  7007     0CCE  0020               	movlb	0	; select bank0
  7008     0CCF  085B               	movf	_MENU_var,w
  7009     0CD0  1903               	btfsc	3,2
  7010     0CD1  2CD3               	goto	u10291
  7011     0CD2  2CD4               	goto	u10290
  7012     0CD3                     u10291:
  7013     0CD3  2CE0               	goto	l8762
  7014     0CD4                     u10290:
  7015     0CD4                     l8758:
  7016     0CD4  0021               	movlb	1	; select bank1
  7017     0CD5  0858               	movf	(_global^(0+128)+27),w
  7018     0CD6  1903               	btfsc	3,2
  7019     0CD7  2CD9               	goto	u10301
  7020     0CD8  2CDA               	goto	u10300
  7021     0CD9                     u10301:
  7022     0CD9  2D01               	goto	l1333
  7023     0CDA                     u10300:
  7024     0CDA                     l8760:
  7025     0CDA  0020               	movlb	0	; select bank0
  7026     0CDB  035B               	decf	_MENU_var,w
  7027     0CDC  1D03               	btfss	3,2
  7028     0CDD  2CDF               	goto	u10311
  7029     0CDE  2CE0               	goto	u10310
  7030     0CDF                     u10311:
  7031     0CDF  2D01               	goto	l1333
  7032     0CE0                     u10310:
  7033     0CE0                     l8762:
  7034                           
  7035                           ;menu.c: 784:   {;menu.c: 785:     if(BUTTON_Bypass_count == 1)
  7036     0CE0  0021               	movlb	1	; select bank1
  7037     0CE1  0336               	decf	_BUTTON_Bypass_count^(0+128),w
  7038     0CE2  1D03               	btfss	3,2
  7039     0CE3  2CE5               	goto	u10321
  7040     0CE4  2CE6               	goto	u10320
  7041     0CE5                     u10321:
  7042     0CE5  2CF0               	goto	l1338
  7043     0CE6                     u10320:
  7044     0CE6                     l8764:
  7045                           
  7046                           ;menu.c: 786:     {;menu.c: 787:       if(global.cap_relays > 0) global.cap_relays--;
  7047     0CE6  0859               	movf	(_global^(0+128)+28),w
  7048     0CE7  1903               	btfsc	3,2
  7049     0CE8  2CEA               	goto	u10331
  7050     0CE9  2CEB               	goto	u10330
  7051     0CEA                     u10331:
  7052     0CEA  2CED               	goto	l8768
  7053     0CEB                     u10330:
  7054     0CEB                     l8766:
  7055     0CEB  3001               	movlw	1
  7056     0CEC  02D9               	subwf	(_global^(0+128)+28),f
  7057     0CED                     l8768:
  7058                           
  7059                           ;menu.c: 788:       update=1;
  7060     0CED  3001               	movlw	1
  7061     0CEE  0020               	movlb	0	; select bank0
  7062     0CEF  00BD               	movwf	MENU_RelTest_Run@update
  7063     0CF0                     l1338:	
  7064                           ;menu.c: 789:     }
  7065                           
  7066                           
  7067                           ;menu.c: 790:     if(BUTTON_Auto_count == 1)
  7068     0CF0  0021               	movlb	1	; select bank1
  7069     0CF1  0337               	decf	_BUTTON_Auto_count^(0+128),w
  7070     0CF2  1D03               	btfss	3,2
  7071     0CF3  2CF5               	goto	u10341
  7072     0CF4  2CF6               	goto	u10340
  7073     0CF5                     u10341:
  7074     0CF5  2D01               	goto	l1333
  7075     0CF6                     u10340:
  7076     0CF6                     l8770:
  7077                           
  7078                           ;menu.c: 791:     {;menu.c: 792:       if(global.cap_relays < 0x7f) global.cap_relays++;
  7079     0CF6  307F               	movlw	127
  7080     0CF7  0259               	subwf	(_global^(0+128)+28),w
  7081     0CF8  1803               	skipnc
  7082     0CF9  2CFB               	goto	u10351
  7083     0CFA  2CFC               	goto	u10350
  7084     0CFB                     u10351:
  7085     0CFB  2CFE               	goto	l8774
  7086     0CFC                     u10350:
  7087     0CFC                     l8772:
  7088     0CFC  3001               	movlw	1
  7089     0CFD  07D9               	addwf	(_global^(0+128)+28),f
  7090     0CFE                     l8774:
  7091                           
  7092                           ;menu.c: 793:       update=1;
  7093     0CFE  3001               	movlw	1
  7094     0CFF  0020               	movlb	0	; select bank0
  7095     0D00  00BD               	movwf	MENU_RelTest_Run@update
  7096     0D01                     l1333:	
  7097                           ;menu.c: 795:   }
  7098                           
  7099                           
  7100                           ;menu.c: 798:   if ((!global.cap_sw && (MENU_var.reltest.cursor == 1))
  7101     0D01  0021               	movlb	1	; select bank1
  7102     0D02  0858               	movf	(_global^(0+128)+27),w
  7103     0D03  1D03               	btfss	3,2
  7104     0D04  2D06               	goto	u10361
  7105     0D05  2D07               	goto	u10360
  7106     0D06                     u10361:
  7107     0D06  2D0D               	goto	l8778
  7108     0D07                     u10360:
  7109     0D07                     l8776:
  7110     0D07  0020               	movlb	0	; select bank0
  7111     0D08  035B               	decf	_MENU_var,w
  7112     0D09  1903               	btfsc	3,2
  7113     0D0A  2D0C               	goto	u10371
  7114     0D0B  2D0D               	goto	u10370
  7115     0D0C                     u10371:
  7116     0D0C  2D19               	goto	l8782
  7117     0D0D                     u10370:
  7118     0D0D                     l8778:
  7119     0D0D  0021               	movlb	1	; select bank1
  7120     0D0E  0858               	movf	(_global^(0+128)+27),w
  7121     0D0F  1903               	btfsc	3,2
  7122     0D10  2D12               	goto	u10381
  7123     0D11  2D13               	goto	u10380
  7124     0D12                     u10381:
  7125     0D12  2D3A               	goto	l1342
  7126     0D13                     u10380:
  7127     0D13                     l8780:
  7128     0D13  0020               	movlb	0	; select bank0
  7129     0D14  085B               	movf	_MENU_var,w
  7130     0D15  1D03               	btfss	3,2
  7131     0D16  2D18               	goto	u10391
  7132     0D17  2D19               	goto	u10390
  7133     0D18                     u10391:
  7134     0D18  2D3A               	goto	l1342
  7135     0D19                     u10390:
  7136     0D19                     l8782:
  7137                           
  7138                           ;menu.c: 800:   {;menu.c: 801:     if(BUTTON_Bypass_count == 1)
  7139     0D19  0021               	movlb	1	; select bank1
  7140     0D1A  0336               	decf	_BUTTON_Bypass_count^(0+128),w
  7141     0D1B  1D03               	btfss	3,2
  7142     0D1C  2D1E               	goto	u10401
  7143     0D1D  2D1F               	goto	u10400
  7144     0D1E                     u10401:
  7145     0D1E  2D29               	goto	l1347
  7146     0D1F                     u10400:
  7147     0D1F                     l8784:
  7148                           
  7149                           ;menu.c: 802:     {;menu.c: 803:       if(global.ind_relays > 0) global.ind_relays--;
  7150     0D1F  085A               	movf	(_global^(0+128)+29),w
  7151     0D20  1903               	btfsc	3,2
  7152     0D21  2D23               	goto	u10411
  7153     0D22  2D24               	goto	u10410
  7154     0D23                     u10411:
  7155     0D23  2D26               	goto	l8788
  7156     0D24                     u10410:
  7157     0D24                     l8786:
  7158     0D24  3001               	movlw	1
  7159     0D25  02DA               	subwf	(_global^(0+128)+29),f
  7160     0D26                     l8788:
  7161                           
  7162                           ;menu.c: 804:       update=1;
  7163     0D26  3001               	movlw	1
  7164     0D27  0020               	movlb	0	; select bank0
  7165     0D28  00BD               	movwf	MENU_RelTest_Run@update
  7166     0D29                     l1347:	
  7167                           ;menu.c: 805:     }
  7168                           
  7169                           
  7170                           ;menu.c: 806:     if(BUTTON_Auto_count == 1)
  7171     0D29  0021               	movlb	1	; select bank1
  7172     0D2A  0337               	decf	_BUTTON_Auto_count^(0+128),w
  7173     0D2B  1D03               	btfss	3,2
  7174     0D2C  2D2E               	goto	u10421
  7175     0D2D  2D2F               	goto	u10420
  7176     0D2E                     u10421:
  7177     0D2E  2D3A               	goto	l1342
  7178     0D2F                     u10420:
  7179     0D2F                     l8790:
  7180                           
  7181                           ;menu.c: 807:     {;menu.c: 808:       if(global.ind_relays < 0x7f) global.ind_relays++;
  7182     0D2F  307F               	movlw	127
  7183     0D30  025A               	subwf	(_global^(0+128)+29),w
  7184     0D31  1803               	skipnc
  7185     0D32  2D34               	goto	u10431
  7186     0D33  2D35               	goto	u10430
  7187     0D34                     u10431:
  7188     0D34  2D37               	goto	l8794
  7189     0D35                     u10430:
  7190     0D35                     l8792:
  7191     0D35  3001               	movlw	1
  7192     0D36  07DA               	addwf	(_global^(0+128)+29),f
  7193     0D37                     l8794:
  7194                           
  7195                           ;menu.c: 809:       update=1;
  7196     0D37  3001               	movlw	1
  7197     0D38  0020               	movlb	0	; select bank0
  7198     0D39  00BD               	movwf	MENU_RelTest_Run@update
  7199     0D3A                     l1342:	
  7200                           ;menu.c: 811:   }
  7201                           
  7202                           
  7203                           ;menu.c: 813:   if(update)
  7204     0D3A  0020               	movlb	0	; select bank0
  7205     0D3B  083D               	movf	MENU_RelTest_Run@update,w
  7206     0D3C  1903               	btfsc	3,2
  7207     0D3D  2D3F               	goto	u10441
  7208     0D3E  2D40               	goto	u10440
  7209     0D3F                     u10441:
  7210     0D3F  2D46               	goto	l1331
  7211     0D40                     u10440:
  7212     0D40                     l8796:
  7213                           
  7214                           ;menu.c: 814:   {;menu.c: 815:     UTILI_SetRelays();
  7215     0D40  3194  2499  318C   	fcall	_UTILI_SetRelays
  7216     0D43                     l8798:
  7217                           
  7218                           ;menu.c: 816:     MENU_RelTest_Update();
  7219     0D43  318A  2289  318C   	fcall	_MENU_RelTest_Update
  7220     0D46                     l1331:
  7221     0D46  0008               	return
  7222     0D47                     __end_of_MENU_RelTest_Run:
  7223                           
  7224                           	psect	text7
  7225     162E                     __ptext7:	
  7226 ;; *************** function _MENU_Sleep_Run *****************
  7227 ;; Defined at:
  7228 ;;		line 584 in file "menu.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;		None
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;		None
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1    wreg      void 
  7235 ;; Registers used:
  7236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7246 ;;Total ram usage:        1 bytes
  7247 ;; Hardware stack levels used: 1
  7248 ;; Hardware stack levels required when called: 2
  7249 ;; This function calls:
  7250 ;;		_EEPROM_Write
  7251 ;;		_MENU_Init
  7252 ;;		_MENU_Sleep_Update
  7253 ;; This function is called by:
  7254 ;;		_MENU_Run
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258     162E                     _MENU_Sleep_Run:	
  7259                           ;psect for function _MENU_Sleep_Run
  7260                           
  7261     162E                     l8630:	
  7262                           ;incstack = 0
  7263                           ; Regs used in _MENU_Sleep_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7264                           
  7265                           
  7266                           ;menu.c: 586:   if (BUTTON_count == 251)
  7267     162E  30FB               	movlw	251
  7268     162F  0020               	movlb	0	; select bank0
  7269     1630  0659               	xorwf	_BUTTON_count,w
  7270     1631  1D03               	btfss	3,2
  7271     1632  2E34               	goto	u10011
  7272     1633  2E35               	goto	u10010
  7273     1634                     u10011:
  7274     1634  2E41               	goto	l8640
  7275     1635                     u10010:
  7276     1635                     l8632:
  7277                           
  7278                           ;menu.c: 587:   {;menu.c: 588:     MENU_var.sleep.cursor++;
  7279     1635  3001               	movlw	1
  7280     1636  07DB               	addwf	_MENU_var,f
  7281     1637                     l8634:
  7282                           
  7283                           ;menu.c: 589:     if (MENU_var.sleep.cursor > 3)
  7284     1637  3004               	movlw	4
  7285     1638  025B               	subwf	_MENU_var,w
  7286     1639  1C03               	skipc
  7287     163A  2E3C               	goto	u10021
  7288     163B  2E3D               	goto	u10020
  7289     163C                     u10021:
  7290     163C  2E3E               	goto	l8638
  7291     163D                     u10020:
  7292     163D                     l8636:
  7293                           
  7294                           ;menu.c: 590:     {;menu.c: 591:       MENU_var.sleep.cursor = 0;
  7295     163D  01DB               	clrf	_MENU_var
  7296     163E                     l8638:
  7297                           
  7298                           ;menu.c: 593:     MENU_Sleep_Update();
  7299     163E  3192  22B2  3196   	fcall	_MENU_Sleep_Update
  7300     1641                     l8640:
  7301                           
  7302                           ;menu.c: 596:   if (BUTTON_count == 80)
  7303     1641  3050               	movlw	80
  7304     1642  0020               	movlb	0	; select bank0
  7305     1643  0659               	xorwf	_BUTTON_count,w
  7306     1644  1D03               	btfss	3,2
  7307     1645  2E47               	goto	u10031
  7308     1646  2E48               	goto	u10030
  7309     1647                     u10031:
  7310     1647  2EBF               	goto	l1296
  7311     1648                     u10030:
  7312     1648                     l8642:
  7313                           
  7314                           ;menu.c: 597:   {;menu.c: 598:     BUTTON_count -= 40;
  7315     1648  3028               	movlw	40
  7316     1649  02D9               	subwf	_BUTTON_count,f
  7317                           
  7318                           ;menu.c: 601:     if(MENU_var.sleep.cursor == 0)
  7319     164A  085B               	movf	_MENU_var,w
  7320     164B  1D03               	btfss	3,2
  7321     164C  2E4E               	goto	u10041
  7322     164D  2E4F               	goto	u10040
  7323     164E                     u10041:
  7324     164E  2E5B               	goto	l8650
  7325     164F                     u10040:
  7326     164F                     l8644:
  7327                           
  7328                           ;menu.c: 602:     {;menu.c: 603:       if(MENU_var.sleep.enable == 1)
  7329     164F  035C               	decf	_MENU_var+1,w
  7330     1650  1D03               	btfss	3,2
  7331     1651  2E53               	goto	u10051
  7332     1652  2E54               	goto	u10050
  7333     1653                     u10051:
  7334     1653  2E56               	goto	l1289
  7335     1654                     u10050:
  7336     1654                     l8646:
  7337                           
  7338                           ;menu.c: 604:       {;menu.c: 605:         MENU_var.sleep.enable = 0;
  7339     1654  01DC               	clrf	_MENU_var+1
  7340                           
  7341                           ;menu.c: 606:       }
  7342     1655  2E58               	goto	l8648
  7343     1656                     l1289:	
  7344                           ;menu.c: 607:       else
  7345                           
  7346                           
  7347                           ;menu.c: 608:       {;menu.c: 609:         MENU_var.sleep.enable = 1;
  7348     1656  3001               	movlw	1
  7349     1657  00DC               	movwf	_MENU_var+1
  7350     1658                     l8648:
  7351                           
  7352                           ;menu.c: 611:       MENU_Sleep_Update();
  7353     1658  3192  22B2  3196   	fcall	_MENU_Sleep_Update
  7354     165B                     l8650:
  7355                           
  7356                           ;menu.c: 615:     if(MENU_var.sleep.cursor == 1)
  7357     165B  0020               	movlb	0	; select bank0
  7358     165C  035B               	decf	_MENU_var,w
  7359     165D  1D03               	btfss	3,2
  7360     165E  2E60               	goto	u10061
  7361     165F  2E61               	goto	u10060
  7362     1660                     u10061:
  7363     1660  2E8E               	goto	l8662
  7364     1661                     u10060:
  7365     1661                     l8652:
  7366                           
  7367                           ;menu.c: 616:     {;menu.c: 617:       if(MENU_var.sleep.delay_sec >= 100)
  7368     1661  085E               	movf	_MENU_var+3,w
  7369     1662  3A80               	xorlw	128
  7370     1663  00B6               	movwf	??_MENU_Sleep_Run
  7371     1664  3080               	movlw	128
  7372     1665  0236               	subwf	??_MENU_Sleep_Run,w
  7373     1666  1D03               	skipz
  7374     1667  2E6A               	goto	u10075
  7375     1668  3064               	movlw	100
  7376     1669  025D               	subwf	_MENU_var+2,w
  7377     166A                     u10075:
  7378     166A  1C03               	skipc
  7379     166B  2E6D               	goto	u10071
  7380     166C  2E6E               	goto	u10070
  7381     166D                     u10071:
  7382     166D  2E74               	goto	l8656
  7383     166E                     u10070:
  7384     166E                     l8654:
  7385                           
  7386                           ;menu.c: 618:       {;menu.c: 619:         MENU_var.sleep.delay_sec += 10;
  7387     166E  300A               	movlw	10
  7388     166F  0020               	movlb	0	; select bank0
  7389     1670  07DD               	addwf	_MENU_var+2,f
  7390     1671  3000               	movlw	0
  7391     1672  3DDE               	addwfc	_MENU_var+3,f
  7392                           
  7393                           ;menu.c: 620:       }
  7394     1673  2E79               	goto	l1293
  7395     1674                     l8656:
  7396                           
  7397                           ;menu.c: 622:       {;menu.c: 623:         MENU_var.sleep.delay_sec += 5;
  7398     1674  3005               	movlw	5
  7399     1675  0020               	movlb	0	; select bank0
  7400     1676  07DD               	addwf	_MENU_var+2,f
  7401     1677  3000               	movlw	0
  7402     1678  3DDE               	addwfc	_MENU_var+3,f
  7403     1679                     l1293:	
  7404                           ;menu.c: 624:       }
  7405                           
  7406                           
  7407                           ;menu.c: 626:       if(MENU_var.sleep.delay_sec > 900)
  7408     1679  085E               	movf	_MENU_var+3,w
  7409     167A  3A80               	xorlw	128
  7410     167B  00B6               	movwf	??_MENU_Sleep_Run
  7411     167C  3083               	movlw	131
  7412     167D  0236               	subwf	??_MENU_Sleep_Run,w
  7413     167E  1D03               	skipz
  7414     167F  2E82               	goto	u10085
  7415     1680  3085               	movlw	133
  7416     1681  025D               	subwf	_MENU_var+2,w
  7417     1682                     u10085:
  7418     1682  1C03               	skipc
  7419     1683  2E85               	goto	u10081
  7420     1684  2E86               	goto	u10080
  7421     1685                     u10081:
  7422     1685  2E8B               	goto	l8660
  7423     1686                     u10080:
  7424     1686                     l8658:
  7425                           
  7426                           ;menu.c: 627:       {;menu.c: 628:         MENU_var.sleep.delay_sec = 5;
  7427     1686  3005               	movlw	5
  7428     1687  0020               	movlb	0	; select bank0
  7429     1688  00DD               	movwf	_MENU_var+2
  7430     1689  3000               	movlw	0
  7431     168A  00DE               	movwf	_MENU_var+3
  7432     168B                     l8660:
  7433                           
  7434                           ;menu.c: 631:       MENU_Sleep_Update();
  7435     168B  3192  22B2  3196   	fcall	_MENU_Sleep_Update
  7436     168E                     l8662:
  7437                           
  7438                           ;menu.c: 634:     if (MENU_var.sleep.cursor == 2)
  7439     168E  3002               	movlw	2
  7440     168F  0020               	movlb	0	; select bank0
  7441     1690  065B               	xorwf	_MENU_var,w
  7442     1691  1D03               	btfss	3,2
  7443     1692  2E94               	goto	u10091
  7444     1693  2E95               	goto	u10090
  7445     1694                     u10091:
  7446     1694  2EB8               	goto	l8674
  7447     1695                     u10090:
  7448     1695                     l8664:
  7449                           
  7450                           ;menu.c: 635:     {;menu.c: 636:       global.sleep_delay_sec = MENU_var.sleep.delay_sec
      +                          ;
  7451     1695  085E               	movf	_MENU_var+3,w
  7452     1696  0021               	movlb	1	; select bank1
  7453     1697  00C8               	movwf	((_global+1)^(0+128)+10)
  7454     1698  0020               	movlb	0	; select bank0
  7455     1699  085D               	movf	_MENU_var+2,w
  7456     169A  0021               	movlb	1	; select bank1
  7457     169B  00C7               	movwf	(_global^(0+128)+10)
  7458                           
  7459                           ;menu.c: 637:       global.sleep_enable = MENU_var.sleep.enable;
  7460     169C  0020               	movlb	0	; select bank0
  7461     169D  085C               	movf	_MENU_var+1,w
  7462     169E  0021               	movlb	1	; select bank1
  7463     169F  00C6               	movwf	(_global^(0+128)+9)
  7464     16A0                     l8666:
  7465                           
  7466                           ;menu.c: 638:       EEPROM_Write((uint8_t)&ee_sleep_delay_sec, &global.sleep_delay_sec, 
      +                          sizeof(ee_sleep_delay_sec));
  7467     16A0  30C7               	movlw	low (_global+10)
  7468     16A1  00F3               	movwf	EEPROM_Write@ptrValue
  7469     16A2  3000               	movlw	high (_global+10)
  7470     16A3  00F4               	movwf	EEPROM_Write@ptrValue+1
  7471     16A4  3002               	movlw	2
  7472     16A5  00F5               	movwf	EEPROM_Write@size
  7473     16A6  306C               	movlw	(low _ee_sleep_delay_sec)& (0+255)
  7474     16A7  3198  2044  3196   	fcall	_EEPROM_Write
  7475     16AA                     l8668:
  7476                           
  7477                           ;menu.c: 639:       EEPROM_Write((uint8_t)&ee_sleep_enable, &global.sleep_enable, sizeof
      +                          (ee_sleep_enable));
  7478     16AA  30C6               	movlw	low (_global+9)
  7479     16AB  00F3               	movwf	EEPROM_Write@ptrValue
  7480     16AC  3000               	movlw	high (_global+9)
  7481     16AD  00F4               	movwf	EEPROM_Write@ptrValue+1
  7482     16AE  01F5               	clrf	EEPROM_Write@size
  7483     16AF  0AF5               	incf	EEPROM_Write@size,f
  7484     16B0  3072               	movlw	(low _ee_sleep_enable)& (0+255)
  7485     16B1  3198  2044  3196   	fcall	_EEPROM_Write
  7486     16B4                     l8670:
  7487                           
  7488                           ;menu.c: 640:       MENU_Init();
  7489     16B4  3187  27F6  3196   	fcall	_MENU_Init
  7490     16B7  2EBF               	goto	l1296
  7491     16B8                     l8674:
  7492                           
  7493                           ;menu.c: 644:     if (MENU_var.sleep.cursor == 3)
  7494     16B8  3003               	movlw	3
  7495     16B9  065B               	xorwf	_MENU_var,w
  7496     16BA  1D03               	btfss	3,2
  7497     16BB  2EBD               	goto	u10101
  7498     16BC  2EBE               	goto	u10100
  7499     16BD                     u10101:
  7500     16BD  2EBF               	goto	l1296
  7501     16BE                     u10100:
  7502     16BE  2EB4               	goto	l8670
  7503     16BF                     l1296:
  7504     16BF  0008               	return
  7505     16C0                     __end_of_MENU_Sleep_Run:
  7506                           
  7507                           	psect	text8
  7508     0B3F                     __ptext8:	
  7509 ;; *************** function _MENU_TParam_Run *****************
  7510 ;; Defined at:
  7511 ;;		line 469 in file "menu.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;		None
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      void 
  7518 ;; Registers used:
  7519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;Total ram usage:        1 bytes
  7530 ;; Hardware stack levels used: 1
  7531 ;; Hardware stack levels required when called: 2
  7532 ;; This function calls:
  7533 ;;		_EEPROM_Write
  7534 ;;		_MENU_Init
  7535 ;;		_MENU_TParam_Update
  7536 ;; This function is called by:
  7537 ;;		_MENU_Run
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541     0B3F                     _MENU_TParam_Run:	
  7542                           ;psect for function _MENU_TParam_Run
  7543                           
  7544     0B3F                     l8566:	
  7545                           ;incstack = 0
  7546                           ; Regs used in _MENU_TParam_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7547                           
  7548                           
  7549                           ;menu.c: 471:   if (BUTTON_count == 251)
  7550     0B3F  30FB               	movlw	251
  7551     0B40  0020               	movlb	0	; select bank0
  7552     0B41  0659               	xorwf	_BUTTON_count,w
  7553     0B42  1D03               	btfss	3,2
  7554     0B43  2B45               	goto	u9891
  7555     0B44  2B46               	goto	u9890
  7556     0B45                     u9891:
  7557     0B45  2B52               	goto	l8576
  7558     0B46                     u9890:
  7559     0B46                     l8568:
  7560                           
  7561                           ;menu.c: 472:   {;menu.c: 473:     MENU_var.tparam.cursor++;
  7562     0B46  3001               	movlw	1
  7563     0B47  07DB               	addwf	_MENU_var,f
  7564     0B48                     l8570:
  7565                           
  7566                           ;menu.c: 474:     if (MENU_var.tparam.cursor > 4)
  7567     0B48  3005               	movlw	5
  7568     0B49  025B               	subwf	_MENU_var,w
  7569     0B4A  1C03               	skipc
  7570     0B4B  2B4D               	goto	u9901
  7571     0B4C  2B4E               	goto	u9900
  7572     0B4D                     u9901:
  7573     0B4D  2B4F               	goto	l8574
  7574     0B4E                     u9900:
  7575     0B4E                     l8572:
  7576                           
  7577                           ;menu.c: 475:     {;menu.c: 476:       MENU_var.tparam.cursor = 0;
  7578     0B4E  01DB               	clrf	_MENU_var
  7579     0B4F                     l8574:
  7580                           
  7581                           ;menu.c: 479:     MENU_TParam_Update();
  7582     0B4F  3193  2325  318B   	fcall	_MENU_TParam_Update
  7583     0B52                     l8576:
  7584                           
  7585                           ;menu.c: 482:   if (BUTTON_count == 80)
  7586     0B52  3050               	movlw	80
  7587     0B53  0020               	movlb	0	; select bank0
  7588     0B54  0659               	xorwf	_BUTTON_count,w
  7589     0B55  1D03               	btfss	3,2
  7590     0B56  2B58               	goto	u9911
  7591     0B57  2B59               	goto	u9910
  7592     0B58                     u9911:
  7593     0B58  2C08               	goto	l1273
  7594     0B59                     u9910:
  7595     0B59                     l8578:
  7596                           
  7597                           ;menu.c: 483:   {;menu.c: 484:     BUTTON_count -= 40;
  7598     0B59  3028               	movlw	40
  7599     0B5A  02D9               	subwf	_BUTTON_count,f
  7600                           
  7601                           ;menu.c: 487:     if(MENU_var.tparam.cursor == 0)
  7602     0B5B  085B               	movf	_MENU_var,w
  7603     0B5C  1D03               	btfss	3,2
  7604     0B5D  2B5F               	goto	u9921
  7605     0B5E  2B60               	goto	u9920
  7606     0B5F                     u9921:
  7607     0B5F  2B6C               	goto	l8586
  7608     0B60                     u9920:
  7609     0B60                     l8580:
  7610                           
  7611                           ;menu.c: 488:     {;menu.c: 489:       if(MENU_var.tparam.auto_enable == 1)
  7612     0B60  0360               	decf	_MENU_var+5,w
  7613     0B61  1D03               	btfss	3,2
  7614     0B62  2B64               	goto	u9931
  7615     0B63  2B65               	goto	u9930
  7616     0B64                     u9931:
  7617     0B64  2B67               	goto	l1265
  7618     0B65                     u9930:
  7619     0B65                     l8582:
  7620                           
  7621                           ;menu.c: 490:       {;menu.c: 491:         MENU_var.tparam.auto_enable = 0;
  7622     0B65  01E0               	clrf	_MENU_var+5
  7623                           
  7624                           ;menu.c: 492:       }
  7625     0B66  2B69               	goto	l8584
  7626     0B67                     l1265:	
  7627                           ;menu.c: 493:       else
  7628                           
  7629                           
  7630                           ;menu.c: 494:       {;menu.c: 495:         MENU_var.tparam.auto_enable = 1;
  7631     0B67  3001               	movlw	1
  7632     0B68  00E0               	movwf	_MENU_var+5
  7633     0B69                     l8584:
  7634                           
  7635                           ;menu.c: 497:       MENU_TParam_Update();
  7636     0B69  3193  2325  318B   	fcall	_MENU_TParam_Update
  7637     0B6C                     l8586:
  7638                           
  7639                           ;menu.c: 501:     if(MENU_var.tparam.cursor == 1)
  7640     0B6C  0020               	movlb	0	; select bank0
  7641     0B6D  035B               	decf	_MENU_var,w
  7642     0B6E  1D03               	btfss	3,2
  7643     0B6F  2B71               	goto	u9941
  7644     0B70  2B72               	goto	u9940
  7645     0B71                     u9941:
  7646     0B71  2B8B               	goto	l8594
  7647     0B72                     u9940:
  7648     0B72                     l8588:
  7649                           
  7650                           ;menu.c: 502:     {;menu.c: 503:       MENU_var.tparam.auto_swr += 5;
  7651     0B72  3005               	movlw	5
  7652     0B73  07DE               	addwf	_MENU_var+3,f
  7653     0B74  3000               	movlw	0
  7654     0B75  3DDF               	addwfc	_MENU_var+4,f
  7655                           
  7656                           ;menu.c: 504:       if(MENU_var.tparam.auto_swr > 300)
  7657     0B76  085F               	movf	_MENU_var+4,w
  7658     0B77  3A80               	xorlw	128
  7659     0B78  00BD               	movwf	??_MENU_TParam_Run
  7660     0B79  3081               	movlw	129
  7661     0B7A  023D               	subwf	??_MENU_TParam_Run,w
  7662     0B7B  1D03               	skipz
  7663     0B7C  2B7F               	goto	u9955
  7664     0B7D  302D               	movlw	45
  7665     0B7E  025E               	subwf	_MENU_var+3,w
  7666     0B7F                     u9955:
  7667     0B7F  1C03               	skipc
  7668     0B80  2B82               	goto	u9951
  7669     0B81  2B83               	goto	u9950
  7670     0B82                     u9951:
  7671     0B82  2B88               	goto	l8592
  7672     0B83                     u9950:
  7673     0B83                     l8590:
  7674                           
  7675                           ;menu.c: 505:       {;menu.c: 506:         MENU_var.tparam.auto_swr = 120;
  7676     0B83  3078               	movlw	120
  7677     0B84  0020               	movlb	0	; select bank0
  7678     0B85  00DE               	movwf	_MENU_var+3
  7679     0B86  3000               	movlw	0
  7680     0B87  00DF               	movwf	_MENU_var+4
  7681     0B88                     l8592:
  7682                           
  7683                           ;menu.c: 508:       MENU_TParam_Update();
  7684     0B88  3193  2325  318B   	fcall	_MENU_TParam_Update
  7685     0B8B                     l8594:
  7686                           
  7687                           ;menu.c: 512:     if(MENU_var.tparam.cursor == 2)
  7688     0B8B  3002               	movlw	2
  7689     0B8C  0020               	movlb	0	; select bank0
  7690     0B8D  065B               	xorwf	_MENU_var,w
  7691     0B8E  1D03               	btfss	3,2
  7692     0B8F  2B91               	goto	u9961
  7693     0B90  2B92               	goto	u9960
  7694     0B91                     u9961:
  7695     0B91  2BAB               	goto	l8602
  7696     0B92                     u9960:
  7697     0B92                     l8596:
  7698                           
  7699                           ;menu.c: 513:     {;menu.c: 514:       MENU_var.tparam.stop_swr += 5;
  7700     0B92  3005               	movlw	5
  7701     0B93  07DC               	addwf	_MENU_var+1,f
  7702     0B94  3000               	movlw	0
  7703     0B95  3DDD               	addwfc	_MENU_var+2,f
  7704                           
  7705                           ;menu.c: 515:       if(MENU_var.tparam.stop_swr > 200)
  7706     0B96  085D               	movf	_MENU_var+2,w
  7707     0B97  3A80               	xorlw	128
  7708     0B98  00BD               	movwf	??_MENU_TParam_Run
  7709     0B99  3080               	movlw	128
  7710     0B9A  023D               	subwf	??_MENU_TParam_Run,w
  7711     0B9B  1D03               	skipz
  7712     0B9C  2B9F               	goto	u9975
  7713     0B9D  30C9               	movlw	201
  7714     0B9E  025C               	subwf	_MENU_var+1,w
  7715     0B9F                     u9975:
  7716     0B9F  1C03               	skipc
  7717     0BA0  2BA2               	goto	u9971
  7718     0BA1  2BA3               	goto	u9970
  7719     0BA2                     u9971:
  7720     0BA2  2BA8               	goto	l8600
  7721     0BA3                     u9970:
  7722     0BA3                     l8598:
  7723                           
  7724                           ;menu.c: 516:       {;menu.c: 517:         MENU_var.tparam.stop_swr = 100;
  7725     0BA3  3064               	movlw	100
  7726     0BA4  0020               	movlb	0	; select bank0
  7727     0BA5  00DC               	movwf	_MENU_var+1
  7728     0BA6  3000               	movlw	0
  7729     0BA7  00DD               	movwf	_MENU_var+2
  7730     0BA8                     l8600:
  7731                           
  7732                           ;menu.c: 519:       MENU_TParam_Update();
  7733     0BA8  3193  2325  318B   	fcall	_MENU_TParam_Update
  7734     0BAB                     l8602:
  7735                           
  7736                           ;menu.c: 522: if (MENU_var.tparam.cursor == 3)
  7737     0BAB  3003               	movlw	3
  7738     0BAC  0020               	movlb	0	; select bank0
  7739     0BAD  065B               	xorwf	_MENU_var,w
  7740     0BAE  1D03               	btfss	3,2
  7741     0BAF  2BB1               	goto	u9981
  7742     0BB0  2BB2               	goto	u9980
  7743     0BB1                     u9981:
  7744     0BB1  2C01               	goto	l8624
  7745     0BB2                     u9980:
  7746     0BB2                     l8604:
  7747                           
  7748                           ;menu.c: 523: {;menu.c: 525:   if (MENU_var.tparam.stop_swr >= MENU_var.tparam.auto_swr)
  7749     0BB2  085D               	movf	_MENU_var+2,w
  7750     0BB3  3A80               	xorlw	128
  7751     0BB4  00BD               	movwf	??_MENU_TParam_Run
  7752     0BB5  085F               	movf	_MENU_var+4,w
  7753     0BB6  3A80               	xorlw	128
  7754     0BB7  023D               	subwf	??_MENU_TParam_Run,w
  7755     0BB8  1D03               	skipz
  7756     0BB9  2BBC               	goto	u9995
  7757     0BBA  085E               	movf	_MENU_var+3,w
  7758     0BBB  025C               	subwf	_MENU_var+1,w
  7759     0BBC                     u9995:
  7760     0BBC  1C03               	skipc
  7761     0BBD  2BBF               	goto	u9991
  7762     0BBE  2BC0               	goto	u9990
  7763     0BBF                     u9991:
  7764     0BBF  2BCB               	goto	l8612
  7765     0BC0                     u9990:
  7766     0BC0                     l8606:
  7767                           
  7768                           ;menu.c: 526:   {;menu.c: 528:     MENU_var.tparam.stop_swr = MENU_var.tparam.auto_swr -
      +                           5;
  7769     0BC0  0020               	movlb	0	; select bank0
  7770     0BC1  085E               	movf	_MENU_var+3,w
  7771     0BC2  3EFB               	addlw	251
  7772     0BC3  00DC               	movwf	_MENU_var+1
  7773     0BC4  30FF               	movlw	255
  7774     0BC5  3D5F               	addwfc	_MENU_var+4,w
  7775     0BC6  00DD               	movwf	_MENU_var+2
  7776     0BC7                     l8608:
  7777                           
  7778                           ;menu.c: 529:     MENU_TParam_Update();
  7779     0BC7  3193  2325  318B   	fcall	_MENU_TParam_Update
  7780     0BCA  2C08               	goto	l1273
  7781     0BCB                     l8612:
  7782                           
  7783                           ;menu.c: 533:   global.tune_auto_enable = MENU_var.tparam.auto_enable;
  7784     0BCB  0020               	movlb	0	; select bank0
  7785     0BCC  0860               	movf	_MENU_var+5,w
  7786     0BCD  0021               	movlb	1	; select bank1
  7787     0BCE  00C5               	movwf	(_global^(0+128)+8)
  7788                           
  7789                           ;menu.c: 534:   global.tune_auto_swr = MENU_var.tparam.auto_swr;
  7790     0BCF  0020               	movlb	0	; select bank0
  7791     0BD0  085F               	movf	_MENU_var+4,w
  7792     0BD1  0021               	movlb	1	; select bank1
  7793     0BD2  00C4               	movwf	((_global+1)^(0+128)+6)
  7794     0BD3  0020               	movlb	0	; select bank0
  7795     0BD4  085E               	movf	_MENU_var+3,w
  7796     0BD5  0021               	movlb	1	; select bank1
  7797     0BD6  00C3               	movwf	(_global^(0+128)+6)
  7798                           
  7799                           ;menu.c: 535:   global.tune_stop_swr = MENU_var.tparam.stop_swr;
  7800     0BD7  0020               	movlb	0	; select bank0
  7801     0BD8  085D               	movf	_MENU_var+2,w
  7802     0BD9  0021               	movlb	1	; select bank1
  7803     0BDA  00C2               	movwf	((_global+1)^(0+128)+4)
  7804     0BDB  0020               	movlb	0	; select bank0
  7805     0BDC  085C               	movf	_MENU_var+1,w
  7806     0BDD  0021               	movlb	1	; select bank1
  7807     0BDE  00C1               	movwf	(_global^(0+128)+4)
  7808     0BDF                     l8614:
  7809                           
  7810                           ;menu.c: 537:   EEPROM_Write((uint8_t)&ee_tune_stop_swr, &global.tune_stop_swr, sizeof(e
      +                          e_tune_stop_swr));
  7811     0BDF  30C1               	movlw	low (_global+4)
  7812     0BE0  00F3               	movwf	EEPROM_Write@ptrValue
  7813     0BE1  3000               	movlw	high (_global+4)
  7814     0BE2  00F4               	movwf	EEPROM_Write@ptrValue+1
  7815     0BE3  3002               	movlw	2
  7816     0BE4  00F5               	movwf	EEPROM_Write@size
  7817     0BE5  3070               	movlw	(low _ee_tune_stop_swr)& (0+255)
  7818     0BE6  3198  2044  318B   	fcall	_EEPROM_Write
  7819     0BE9                     l8616:
  7820                           
  7821                           ;menu.c: 538:   EEPROM_Write((uint8_t)&ee_tune_auto_swr, &global.tune_auto_swr, sizeof(e
      +                          e_tune_auto_swr));
  7822     0BE9  30C3               	movlw	low (_global+6)
  7823     0BEA  00F3               	movwf	EEPROM_Write@ptrValue
  7824     0BEB  3000               	movlw	high (_global+6)
  7825     0BEC  00F4               	movwf	EEPROM_Write@ptrValue+1
  7826     0BED  3002               	movlw	2
  7827     0BEE  00F5               	movwf	EEPROM_Write@size
  7828     0BEF  306E               	movlw	(low _ee_tune_auto_swr)& (0+255)
  7829     0BF0  3198  2044  318B   	fcall	_EEPROM_Write
  7830     0BF3                     l8618:
  7831                           
  7832                           ;menu.c: 539:   EEPROM_Write((uint8_t)&ee_tune_auto_enable, &global.tune_auto_enable, si
      +                          zeof(ee_tune_auto_enable));
  7833     0BF3  30C5               	movlw	low (_global+8)
  7834     0BF4  00F3               	movwf	EEPROM_Write@ptrValue
  7835     0BF5  3000               	movlw	high (_global+8)
  7836     0BF6  00F4               	movwf	EEPROM_Write@ptrValue+1
  7837     0BF7  01F5               	clrf	EEPROM_Write@size
  7838     0BF8  0AF5               	incf	EEPROM_Write@size,f
  7839     0BF9  3073               	movlw	(low _ee_tune_auto_enable)& (0+255)
  7840     0BFA  3198  2044  318B   	fcall	_EEPROM_Write
  7841     0BFD                     l8620:
  7842                           
  7843                           ;menu.c: 540:   MENU_Init();
  7844     0BFD  3187  27F6  318B   	fcall	_MENU_Init
  7845     0C00  2C08               	goto	l1273
  7846     0C01                     l8624:
  7847                           
  7848                           ;menu.c: 544:     if (MENU_var.tparam.cursor == 4)
  7849     0C01  3004               	movlw	4
  7850     0C02  065B               	xorwf	_MENU_var,w
  7851     0C03  1D03               	btfss	3,2
  7852     0C04  2C06               	goto	u10001
  7853     0C05  2C07               	goto	u10000
  7854     0C06                     u10001:
  7855     0C06  2C08               	goto	l1273
  7856     0C07                     u10000:
  7857     0C07  2BFD               	goto	l8620
  7858     0C08                     l1273:
  7859     0C08  0008               	return
  7860     0C09                     __end_of_MENU_TParam_Run:
  7861                           
  7862                           	psect	text9
  7863     1E05                     __ptext9:	
  7864 ;; *************** function _MENU_About_Run *****************
  7865 ;; Defined at:
  7866 ;;		line 1336 in file "menu.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;		None
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;		None
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  1    wreg      void 
  7873 ;; Registers used:
  7874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7884 ;;Total ram usage:        0 bytes
  7885 ;; Hardware stack levels used: 1
  7886 ;; Hardware stack levels required when called: 2
  7887 ;; This function calls:
  7888 ;;		_DISP_Clr
  7889 ;;		_DISP_Str
  7890 ;;		_MENU_Init
  7891 ;; This function is called by:
  7892 ;;		_MENU_Run
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896     1E05                     _MENU_About_Run:	
  7897                           ;psect for function _MENU_About_Run
  7898                           
  7899     1E05                     l9048:	
  7900                           ;incstack = 0
  7901                           ; Regs used in _MENU_About_Run: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7902                           
  7903                           
  7904                           ;menu.c: 1339:   MENU_var.about.timeout++;
  7905     1E05  3001               	movlw	1
  7906     1E06  0020               	movlb	0	; select bank0
  7907     1E07  07DC               	addwf	_MENU_var+1,f
  7908     1E08  3000               	movlw	0
  7909     1E09  3DDD               	addwfc	_MENU_var+2,f
  7910                           
  7911                           ;menu.c: 1340:   if(MENU_var.about.timeout >= 1000)
  7912     1E0A  3003               	movlw	3
  7913     1E0B  025D               	subwf	_MENU_var+2,w
  7914     1E0C  30E8               	movlw	232
  7915     1E0D  1903               	skipnz
  7916     1E0E  025C               	subwf	_MENU_var+1,w
  7917     1E0F  1C03               	skipc
  7918     1E10  2E12               	goto	u10841
  7919     1E11  2E13               	goto	u10840
  7920     1E12                     u10841:
  7921     1E12  2E17               	goto	l9054
  7922     1E13                     u10840:
  7923     1E13                     l9050:
  7924                           
  7925                           ;menu.c: 1341:   {;menu.c: 1342:     MENU_Init();
  7926     1E13  3187  27F6  319E   	fcall	_MENU_Init
  7927     1E16  2E53               	goto	l1494
  7928     1E17                     l9054:
  7929                           
  7930                           ;menu.c: 1346:   if(BUTTON_count == 1)
  7931     1E17  0359               	decf	_BUTTON_count,w
  7932     1E18  1D03               	btfss	3,2
  7933     1E19  2E1B               	goto	u10851
  7934     1E1A  2E1C               	goto	u10850
  7935     1E1B                     u10851:
  7936     1E1B  2E53               	goto	l1494
  7937     1E1C                     u10850:
  7938     1E1C                     l9056:
  7939                           
  7940                           ;menu.c: 1347:   {;menu.c: 1348:     MENU_var.about.timeout = 0;
  7941     1E1C  01DC               	clrf	_MENU_var+1
  7942     1E1D  01DD               	clrf	_MENU_var+2
  7943     1E1E                     l9058:
  7944                           
  7945                           ;menu.c: 1349:     if(MENU_var.about.step ==0)
  7946     1E1E  085B               	movf	_MENU_var,w
  7947     1E1F  1D03               	btfss	3,2
  7948     1E20  2E22               	goto	u10861
  7949     1E21  2E23               	goto	u10860
  7950     1E22                     u10861:
  7951     1E22  2E13               	goto	l9050
  7952     1E23                     u10860:
  7953     1E23                     l9060:
  7954                           
  7955                           ;menu.c: 1350:     {;menu.c: 1351:       MENU_var.about.step++;
  7956     1E23  3001               	movlw	1
  7957     1E24  07DB               	addwf	_MENU_var,f
  7958     1E25                     l9062:
  7959                           
  7960                           ;menu.c: 1352:       DISP_Clr();
  7961     1E25  3199  2146  319E   	fcall	_DISP_Clr
  7962     1E28                     l9064:
  7963                           
  7964                           ;menu.c: 1353:       DISP_Str(0x80,0,str_YetAnother,0);
  7965     1E28  01F8               	clrf	DISP_Str@row
  7966     1E29  3025               	movlw	low (_str_YetAnother| (0+32768))
  7967     1E2A  00F9               	movwf	DISP_Str@str
  7968     1E2B  30A9               	movlw	high (_str_YetAnother| (0+32768))
  7969     1E2C  00FA               	movwf	DISP_Str@str+1
  7970     1E2D  01FB               	clrf	DISP_Str@invert
  7971     1E2E  3080               	movlw	128
  7972     1E2F  318D  2547  319E   	fcall	_DISP_Str
  7973     1E32                     l9066:
  7974                           
  7975                           ;menu.c: 1354:       DISP_Str(0x80,1,str_Firmware,0);
  7976     1E32  01F8               	clrf	DISP_Str@row
  7977     1E33  0AF8               	incf	DISP_Str@row,f
  7978     1E34  301C               	movlw	low (_str_Firmware| (0+32768))
  7979     1E35  00F9               	movwf	DISP_Str@str
  7980     1E36  30A9               	movlw	high (_str_Firmware| (0+32768))
  7981     1E37  00FA               	movwf	DISP_Str@str+1
  7982     1E38  01FB               	clrf	DISP_Str@invert
  7983     1E39  3080               	movlw	128
  7984     1E3A  318D  2547  319E   	fcall	_DISP_Str
  7985     1E3D                     l9068:
  7986                           
  7987                           ;menu.c: 1355:       DISP_Str(0x80,2,str_by,0);
  7988     1E3D  3002               	movlw	2
  7989     1E3E  00F8               	movwf	DISP_Str@row
  7990     1E3F  30FB               	movlw	low (_str_by| (0+32768))
  7991     1E40  00F9               	movwf	DISP_Str@str
  7992     1E41  30A9               	movlw	high (_str_by| (0+32768))
  7993     1E42  00FA               	movwf	DISP_Str@str+1
  7994     1E43  01FB               	clrf	DISP_Str@invert
  7995     1E44  3080               	movlw	128
  7996     1E45  318D  2547  319E   	fcall	_DISP_Str
  7997     1E48                     l9070:
  7998                           
  7999                           ;menu.c: 1356:       DISP_Str(0x80,3,str_DG4SN,0);
  8000     1E48  3003               	movlw	3
  8001     1E49  00F8               	movwf	DISP_Str@row
  8002     1E4A  30AE               	movlw	low (_str_DG4SN| (0+32768))
  8003     1E4B  00F9               	movwf	DISP_Str@str
  8004     1E4C  30A9               	movlw	high (_str_DG4SN| (0+32768))
  8005     1E4D  00FA               	movwf	DISP_Str@str+1
  8006     1E4E  01FB               	clrf	DISP_Str@invert
  8007     1E4F  3080               	movlw	128
  8008     1E50  318D  2547  319E   	fcall	_DISP_Str
  8009     1E53                     l1494:	
  8010                           ;menu.c: 1357:     }
  8011                           
  8012     1E53  0008               	return
  8013     1E54                     __end_of_MENU_About_Run:
  8014                           
  8015                           	psect	text10
  8016     1517                     __ptext10:	
  8017 ;; *************** function _MENU_Memory_Run *****************
  8018 ;; Defined at:
  8019 ;;		line 1083 in file "menu.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;		None
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;  tunemem        10   39[BANK0 ] struct .
  8024 ;;  cursor_pos      1   38[BANK0 ] unsigned char 
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  1    wreg      void 
  8027 ;; Registers used:
  8028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;Total ram usage:       14 bytes
  8039 ;; Hardware stack levels used: 1
  8040 ;; Hardware stack levels required when called: 2
  8041 ;; This function calls:
  8042 ;;		_EEPROM_Read
  8043 ;;		_MENU_About_Init
  8044 ;;		_MENU_Bypass_Init
  8045 ;;		_MENU_CalPWR_Init
  8046 ;;		_MENU_Init
  8047 ;;		_MENU_Main_Init
  8048 ;;		_MENU_MemoryLoad_Init
  8049 ;;		_MENU_MemorySave_Init
  8050 ;;		_MENU_Memory_Update
  8051 ;;		_MENU_NameEdit_Init
  8052 ;;		_MENU_RelTest_Init
  8053 ;;		_MENU_Reset_Init
  8054 ;;		_MENU_Sleep_Init
  8055 ;;		_MENU_StartupSave_Init
  8056 ;;		_MENU_SubSetup_Init
  8057 ;;		_MENU_SubTop_Init
  8058 ;;		_MENU_TParam_Init
  8059 ;;		_MENU_Tune_Init
  8060 ;;		_UTILI_Set_LC_Relays
  8061 ;;		___bmul
  8062 ;; This function is called by:
  8063 ;;		_MENU_Run
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067     1517                     _MENU_Memory_Run:	
  8068                           ;psect for function _MENU_Memory_Run
  8069                           
  8070     1517                     l8916:	
  8071                           ;incstack = 0
  8072                           ; Regs used in _MENU_Memory_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8073                           
  8074                           
  8075                           ;menu.c: 1086:   MENU_var.memory.timeout++;
  8076     1517  3001               	movlw	1
  8077     1518  0020               	movlb	0	; select bank0
  8078     1519  07DB               	addwf	_MENU_var,f
  8079     151A  3000               	movlw	0
  8080     151B  3DDC               	addwfc	_MENU_var+1,f
  8081                           
  8082                           ;menu.c: 1087:   if(MENU_var.memory.timeout >= 1000)
  8083     151C  3003               	movlw	3
  8084     151D  025C               	subwf	_MENU_var+1,w
  8085     151E  30E8               	movlw	232
  8086     151F  1903               	skipnz
  8087     1520  025B               	subwf	_MENU_var,w
  8088     1521  1C03               	skipc
  8089     1522  2D24               	goto	u10631
  8090     1523  2D25               	goto	u10630
  8091     1524                     u10631:
  8092     1524  2D29               	goto	l8922
  8093     1525                     u10630:
  8094     1525                     l8918:
  8095                           
  8096                           ;menu.c: 1088:   {;menu.c: 1089:     MENU_Init();
  8097     1525  3187  27F6  3195   	fcall	_MENU_Init
  8098     1528  2DA1               	goto	l1423
  8099     1529                     l8922:
  8100                           
  8101                           ;menu.c: 1093:   if(BUTTON_count == 251)
  8102     1529  30FB               	movlw	251
  8103     152A  0659               	xorwf	_BUTTON_count,w
  8104     152B  1D03               	btfss	3,2
  8105     152C  2D2E               	goto	u10641
  8106     152D  2D2F               	goto	u10640
  8107     152E                     u10641:
  8108     152E  2D5F               	goto	l8942
  8109     152F                     u10640:
  8110     152F                     l8924:
  8111                           
  8112                           ;menu.c: 1094:   {;menu.c: 1095:     MENU_var.memory.timeout=0;
  8113     152F  01DB               	clrf	_MENU_var
  8114     1530  01DC               	clrf	_MENU_var+1
  8115     1531                     l8926:
  8116                           
  8117                           ;menu.c: 1097:     uint8_t cursor_pos = MENU_var.memory.cursor - MENU_var.memory.top;
  8118     1531  085F               	movf	_MENU_var+4,w
  8119     1532  025D               	subwf	_MENU_var+2,w
  8120     1533  00C6               	movwf	MENU_Memory_Run@cursor_pos
  8121                           
  8122                           ;menu.c: 1099:     switch (cursor_pos)
  8123     1534  2D54               	goto	l8938
  8124     1535                     l8928:
  8125                           
  8126                           ;menu.c: 1103:       MENU_var.memory.cursor++;
  8127     1535  3001               	movlw	1
  8128     1536  0020               	movlb	0	; select bank0
  8129     1537  07DD               	addwf	_MENU_var+2,f
  8130                           
  8131                           ;menu.c: 1104:       break;
  8132     1538  2D5C               	goto	l8940
  8133     1539                     l8930:
  8134                           
  8135                           ;menu.c: 1110:       if((MENU_var.memory.top +3) < 10)
  8136     1539  085F               	movf	_MENU_var+4,w
  8137     153A  3E03               	addlw	3
  8138     153B  00C3               	movwf	??_MENU_Memory_Run
  8139     153C  3000               	movlw	0
  8140     153D  1803               	skipnc
  8141     153E  3001               	movlw	1
  8142     153F  00C4               	movwf	??_MENU_Memory_Run+1
  8143     1540  0844               	movf	??_MENU_Memory_Run+1,w
  8144     1541  3A80               	xorlw	128
  8145     1542  00C5               	movwf	??_MENU_Memory_Run+2
  8146     1543  3080               	movlw	128
  8147     1544  0245               	subwf	??_MENU_Memory_Run+2,w
  8148     1545  1D03               	skipz
  8149     1546  2D49               	goto	u10655
  8150     1547  300A               	movlw	10
  8151     1548  0243               	subwf	??_MENU_Memory_Run,w
  8152     1549                     u10655:
  8153     1549  1803               	skipnc
  8154     154A  2D4C               	goto	u10651
  8155     154B  2D4D               	goto	u10650
  8156     154C                     u10651:
  8157     154C  2D35               	goto	l8928
  8158     154D                     u10650:
  8159     154D                     l8932:
  8160                           
  8161                           ;menu.c: 1111:       {;menu.c: 1112:         MENU_var.memory.top++;
  8162     154D  3001               	movlw	1
  8163     154E  0020               	movlb	0	; select bank0
  8164     154F  07DF               	addwf	_MENU_var+4,f
  8165     1550  2D35               	goto	l8928
  8166     1551                     l8934:
  8167                           
  8168                           ;menu.c: 1121:       MENU_var.memory.top=0;
  8169     1551  01DF               	clrf	_MENU_var+4
  8170                           
  8171                           ;menu.c: 1122:       MENU_var.memory.cursor=0;
  8172     1552  01DD               	clrf	_MENU_var+2
  8173                           
  8174                           ;menu.c: 1123:       break;
  8175     1553  2D5C               	goto	l8940
  8176     1554                     l8938:
  8177     1554  0846               	movf	MENU_Memory_Run@cursor_pos,w
  8178                           
  8179                           ; Switch size 1, requested type "simple"
  8180                           ; Number of cases is 2, Range of values is 0 to 1
  8181                           ; switch strategies available:
  8182                           ; Name         Instructions Cycles
  8183                           ; simple_byte            7     4 (average)
  8184                           ; direct_byte           10     6 (fixed)
  8185                           ; jumptable            260     6 (fixed)
  8186                           ;	Chosen strategy is simple_byte
  8187     1555  3A00               	xorlw	0	; case 0
  8188     1556  1903               	skipnz
  8189     1557  2D35               	goto	l8928
  8190     1558  3A01               	xorlw	1	; case 1
  8191     1559  1903               	skipnz
  8192     155A  2D39               	goto	l8930
  8193     155B  2D51               	goto	l8934
  8194     155C                     l8940:
  8195                           
  8196                           ;menu.c: 1126:     MENU_Memory_Update();
  8197     155C  319F  274D  3195   	fcall	_MENU_Memory_Update
  8198     155F                     l8942:
  8199                           
  8200                           ;menu.c: 1129:   if (BUTTON_count == 80)
  8201     155F  3050               	movlw	80
  8202     1560  0020               	movlb	0	; select bank0
  8203     1561  0659               	xorwf	_BUTTON_count,w
  8204     1562  1D03               	btfss	3,2
  8205     1563  2D65               	goto	u10661
  8206     1564  2D66               	goto	u10660
  8207     1565                     u10661:
  8208     1565  2DA1               	goto	l1423
  8209     1566                     u10660:
  8210     1566                     l8944:
  8211                           
  8212                           ;menu.c: 1130:   {;menu.c: 1131:     if (MENU_var.memory.save_mode == 1)
  8213     1566  035E               	decf	_MENU_var+3,w
  8214     1567  1D03               	btfss	3,2
  8215     1568  2D6A               	goto	u10671
  8216     1569  2D6B               	goto	u10670
  8217     156A                     u10671:
  8218     156A  2D88               	goto	l8958
  8219     156B                     u10670:
  8220     156B                     l8946:
  8221                           
  8222                           ;menu.c: 1132:     {;menu.c: 1133:       if(MENU_var.memory.cursor == 0)
  8223     156B  085D               	movf	_MENU_var+2,w
  8224     156C  1D03               	btfss	3,2
  8225     156D  2D6F               	goto	u10681
  8226     156E  2D70               	goto	u10680
  8227     156F                     u10681:
  8228     156F  2D75               	goto	l8950
  8229     1570                     u10680:
  8230     1570                     l8948:
  8231                           
  8232                           ;menu.c: 1134:       {;menu.c: 1135:        current_menu = &menuStartupSave;
  8233     1570  3036               	movlw	low (_menuStartupSave| (0+32768))
  8234     1571  00D3               	movwf	_current_menu
  8235     1572  30A9               	movlw	high (_menuStartupSave| (0+32768))
  8236     1573  00D4               	movwf	_current_menu+1
  8237                           
  8238                           ;menu.c: 1136:       }
  8239     1574  2D7B               	goto	l8952
  8240     1575                     l8950:
  8241                           
  8242                           ;menu.c: 1138:       {;menu.c: 1139:        MENU_var.nameedit.mem_index = MENU_var.memor
      +                          y.cursor;
  8243     1575  085D               	movf	_MENU_var+2,w
  8244     1576  00DB               	movwf	_MENU_var
  8245                           
  8246                           ;menu.c: 1140:        current_menu = &menuNameEdit;
  8247     1577  303C               	movlw	low (_menuNameEdit| (0+32768))
  8248     1578  00D3               	movwf	_current_menu
  8249     1579  30A9               	movlw	high (_menuNameEdit| (0+32768))
  8250     157A  00D4               	movwf	_current_menu+1
  8251     157B                     l8952:
  8252                           
  8253                           ;menu.c: 1142:       current_menu->Init();
  8254     157B  3002               	movlw	2
  8255     157C  0753               	addwf	_current_menu,w
  8256     157D  0084               	movwf	4
  8257     157E  0854               	movf	_current_menu+1,w
  8258     157F  1803               	skipnc
  8259     1580  3E01               	addlw	1
  8260     1581  0085               	movwf	5
  8261     1582  3F01               	moviw [1]fsr0
  8262     1583  008A               	movwf	10
  8263     1584  3F00               	moviw [0]fsr0
  8264     1585  000A               	callw
  8265     1586  3195               	pagesel	$
  8266     1587  2DA1               	goto	l1423
  8267     1588                     l8958:
  8268                           
  8269                           ;menu.c: 1146:     {;menu.c: 1148:       tunemem_t tunemem;;menu.c: 1149:       EEPROM_R
      +                          ead((uint8_t) & ee_tunemem + (sizeof (tunemem_t) * MENU_var.memory.cursor) , &tunemem, s
      +                          izeof (tunemem_t));
  8270     1588  3047               	movlw	low MENU_Memory_Run@tunemem
  8271     1589  00F3               	movwf	EEPROM_Read@ptrValue
  8272     158A  3000               	movlw	high MENU_Memory_Run@tunemem
  8273     158B  00F4               	movwf	EEPROM_Read@ptrValue+1
  8274     158C  300A               	movlw	10
  8275     158D  00F5               	movwf	EEPROM_Read@size
  8276     158E  300A               	movlw	10
  8277     158F  00F0               	movwf	___bmul@multiplicand
  8278     1590  085D               	movf	_MENU_var+2,w
  8279     1591  31A7  2745  3195   	fcall	___bmul
  8280     1594  3E00               	addlw	low _ee_tunemem
  8281     1595  3198  2093  3195   	fcall	_EEPROM_Read
  8282     1598                     l8960:
  8283                           
  8284                           ;menu.c: 1150:       UTILI_Set_LC_Relays(tunemem.relays);
  8285     1598  0020               	movlb	0	; select bank0
  8286     1599  0848               	movf	MENU_Memory_Run@tunemem+1,w
  8287     159A  00F2               	movwf	UTILI_Set_LC_Relays@relays+1
  8288     159B  0847               	movf	MENU_Memory_Run@tunemem,w
  8289     159C  00F1               	movwf	UTILI_Set_LC_Relays@relays
  8290     159D  31A7  2758  3195   	fcall	_UTILI_Set_LC_Relays
  8291     15A0  2D25               	goto	l8918
  8292     15A1                     l1423:
  8293     15A1  0008               	return
  8294     15A2                     __end_of_MENU_Memory_Run:
  8295                           
  8296                           	psect	text11
  8297     1244                     __ptext11:	
  8298 ;; *************** function _MENU_Sub_Run *****************
  8299 ;; Defined at:
  8300 ;;		line 980 in file "menu.c"
  8301 ;; Parameters:    Size  Location     Type
  8302 ;;		None
  8303 ;; Auto vars:     Size  Location     Type
  8304 ;;  cursor_pos      1   38[BANK0 ] unsigned char 
  8305 ;; Return value:  Size  Location     Type
  8306 ;;                  1    wreg      void 
  8307 ;; Registers used:
  8308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8309 ;; Tracked objects:
  8310 ;;		On entry : 0/0
  8311 ;;		On exit  : 0/0
  8312 ;;		Unchanged: 0/0
  8313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;Total ram usage:        4 bytes
  8319 ;; Hardware stack levels used: 1
  8320 ;; Hardware stack levels required when called: 2
  8321 ;; This function calls:
  8322 ;;		_MENU_About_Init
  8323 ;;		_MENU_Bypass_Init
  8324 ;;		_MENU_CalPWR_Init
  8325 ;;		_MENU_Init
  8326 ;;		_MENU_Main_Init
  8327 ;;		_MENU_MemoryLoad_Init
  8328 ;;		_MENU_MemorySave_Init
  8329 ;;		_MENU_NameEdit_Init
  8330 ;;		_MENU_RelTest_Init
  8331 ;;		_MENU_Reset_Init
  8332 ;;		_MENU_Sleep_Init
  8333 ;;		_MENU_StartupSave_Init
  8334 ;;		_MENU_SubSetup_Init
  8335 ;;		_MENU_SubTop_Init
  8336 ;;		_MENU_Sub_Update
  8337 ;;		_MENU_TParam_Init
  8338 ;;		_MENU_Tune_Init
  8339 ;; This function is called by:
  8340 ;;		_MENU_Run
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344     1244                     _MENU_Sub_Run:	
  8345                           ;psect for function _MENU_Sub_Run
  8346                           
  8347     1244                     l8884:	
  8348                           ;incstack = 0
  8349                           ; Regs used in _MENU_Sub_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8350                           
  8351                           
  8352                           ;menu.c: 983:   MENU_var.sub.timeout++;
  8353     1244  3001               	movlw	1
  8354     1245  0020               	movlb	0	; select bank0
  8355     1246  07DE               	addwf	_MENU_var+3,f
  8356     1247  3000               	movlw	0
  8357     1248  3DDF               	addwfc	_MENU_var+4,f
  8358                           
  8359                           ;menu.c: 984:   if(MENU_var.sub.timeout >= 1000)
  8360     1249  3003               	movlw	3
  8361     124A  025F               	subwf	_MENU_var+4,w
  8362     124B  30E8               	movlw	232
  8363     124C  1903               	skipnz
  8364     124D  025E               	subwf	_MENU_var+3,w
  8365     124E  1C03               	skipc
  8366     124F  2A51               	goto	u10591
  8367     1250  2A52               	goto	u10590
  8368     1251                     u10591:
  8369     1251  2A56               	goto	l8890
  8370     1252                     u10590:
  8371     1252                     l8886:
  8372                           
  8373                           ;menu.c: 985:   {;menu.c: 986:     MENU_Init();
  8374     1252  3187  27F6  3192   	fcall	_MENU_Init
  8375     1255  2AB1               	goto	l1394
  8376     1256                     l8890:
  8377                           
  8378                           ;menu.c: 990:   if(BUTTON_count == 251)
  8379     1256  30FB               	movlw	251
  8380     1257  0659               	xorwf	_BUTTON_count,w
  8381     1258  1D03               	btfss	3,2
  8382     1259  2A5B               	goto	u10601
  8383     125A  2A5C               	goto	u10600
  8384     125B                     u10601:
  8385     125B  2A8F               	goto	l8910
  8386     125C                     u10600:
  8387     125C                     l8892:
  8388                           
  8389                           ;menu.c: 991:   {;menu.c: 992:     MENU_var.sub.timeout=0;
  8390     125C  01DE               	clrf	_MENU_var+3
  8391     125D  01DF               	clrf	_MENU_var+4
  8392     125E                     l8894:
  8393                           
  8394                           ;menu.c: 994:     uint8_t cursor_pos = MENU_var.sub.cursor - MENU_var.sub.top;
  8395     125E  085D               	movf	_MENU_var+2,w
  8396     125F  025C               	subwf	_MENU_var+1,w
  8397     1260  00C6               	movwf	MENU_Sub_Run@cursor_pos
  8398                           
  8399                           ;menu.c: 996:     switch (cursor_pos)
  8400     1261  2A81               	goto	l8906
  8401     1262                     l8896:
  8402                           
  8403                           ;menu.c: 1001:       MENU_var.sub.cursor++;
  8404     1262  3001               	movlw	1
  8405     1263  0020               	movlb	0	; select bank0
  8406     1264  07DC               	addwf	_MENU_var+1,f
  8407                           
  8408                           ;menu.c: 1002:       break;
  8409     1265  2A8C               	goto	l8908
  8410     1266                     l8898:
  8411                           
  8412                           ;menu.c: 1008:       if((MENU_var.sub.top +4) < MENU_var.sub.items)
  8413     1266  085D               	movf	_MENU_var+2,w
  8414     1267  3E04               	addlw	4
  8415     1268  00C3               	movwf	??_MENU_Sub_Run
  8416     1269  3000               	movlw	0
  8417     126A  1803               	skipnc
  8418     126B  3001               	movlw	1
  8419     126C  00C4               	movwf	??_MENU_Sub_Run+1
  8420     126D  0844               	movf	??_MENU_Sub_Run+1,w
  8421     126E  3A80               	xorlw	128
  8422     126F  00C5               	movwf	??_MENU_Sub_Run+2
  8423     1270  3080               	movlw	128
  8424     1271  0245               	subwf	??_MENU_Sub_Run+2,w
  8425     1272  1D03               	skipz
  8426     1273  2A76               	goto	u10615
  8427     1274  085B               	movf	_MENU_var,w
  8428     1275  0243               	subwf	??_MENU_Sub_Run,w
  8429     1276                     u10615:
  8430     1276  1803               	skipnc
  8431     1277  2A79               	goto	u10611
  8432     1278  2A7A               	goto	u10610
  8433     1279                     u10611:
  8434     1279  2A62               	goto	l8896
  8435     127A                     u10610:
  8436     127A                     l8900:
  8437                           
  8438                           ;menu.c: 1009:       {;menu.c: 1010:         MENU_var.sub.top++;
  8439     127A  3001               	movlw	1
  8440     127B  0020               	movlb	0	; select bank0
  8441     127C  07DD               	addwf	_MENU_var+2,f
  8442     127D  2A62               	goto	l8896
  8443     127E                     l8902:
  8444                           
  8445                           ;menu.c: 1019:       MENU_var.sub.top=0;
  8446     127E  01DD               	clrf	_MENU_var+2
  8447                           
  8448                           ;menu.c: 1020:       MENU_var.sub.cursor=0;
  8449     127F  01DC               	clrf	_MENU_var+1
  8450                           
  8451                           ;menu.c: 1021:       break;
  8452     1280  2A8C               	goto	l8908
  8453     1281                     l8906:
  8454     1281  0846               	movf	MENU_Sub_Run@cursor_pos,w
  8455                           
  8456                           ; Switch size 1, requested type "simple"
  8457                           ; Number of cases is 3, Range of values is 0 to 2
  8458                           ; switch strategies available:
  8459                           ; Name         Instructions Cycles
  8460                           ; simple_byte           10     6 (average)
  8461                           ; direct_byte           12     6 (fixed)
  8462                           ; jumptable            260     6 (fixed)
  8463                           ;	Chosen strategy is simple_byte
  8464     1282  3A00               	xorlw	0	; case 0
  8465     1283  1903               	skipnz
  8466     1284  2A62               	goto	l8896
  8467     1285  3A01               	xorlw	1	; case 1
  8468     1286  1903               	skipnz
  8469     1287  2A66               	goto	l8898
  8470     1288  3A03               	xorlw	3	; case 2
  8471     1289  1903               	skipnz
  8472     128A  2A62               	goto	l8896
  8473     128B  2A7E               	goto	l8902
  8474     128C                     l8908:
  8475                           
  8476                           ;menu.c: 1024:     MENU_Sub_Update();
  8477     128C  319C  242F  3192   	fcall	_MENU_Sub_Update
  8478     128F                     l8910:
  8479                           
  8480                           ;menu.c: 1027:    if (BUTTON_count == 80)
  8481     128F  3050               	movlw	80
  8482     1290  0020               	movlb	0	; select bank0
  8483     1291  0659               	xorwf	_BUTTON_count,w
  8484     1292  1D03               	btfss	3,2
  8485     1293  2A95               	goto	u10621
  8486     1294  2A96               	goto	u10620
  8487     1295                     u10621:
  8488     1295  2AB1               	goto	l1394
  8489     1296                     u10620:
  8490     1296                     l8912:
  8491                           
  8492                           ;menu.c: 1028:    {;menu.c: 1029:      current_menu = MENU_var.sub.ptrMenu[MENU_var.sub.
      +                          cursor];
  8493     1296  085C               	movf	_MENU_var+1,w
  8494     1297  00C3               	movwf	??_MENU_Sub_Run
  8495     1298  01C4               	clrf	??_MENU_Sub_Run+1
  8496     1299  35C3               	lslf	??_MENU_Sub_Run,f
  8497     129A  0DC4               	rlf	??_MENU_Sub_Run+1,f
  8498     129B  0843               	movf	??_MENU_Sub_Run,w
  8499     129C  0760               	addwf	_MENU_var+5,w
  8500     129D  0086               	movwf	6
  8501     129E  0844               	movf	??_MENU_Sub_Run+1,w
  8502     129F  3D61               	addwfc	_MENU_var+6,w
  8503     12A0  0087               	movwf	7
  8504     12A1  3F40               	moviw [0]fsr1
  8505     12A2  00D3               	movwf	_current_menu
  8506     12A3  3F41               	moviw [1]fsr1
  8507     12A4  00D4               	movwf	_current_menu+1
  8508     12A5                     l8914:
  8509                           
  8510                           ;menu.c: 1030:      current_menu->Init();
  8511     12A5  3002               	movlw	2
  8512     12A6  0753               	addwf	_current_menu,w
  8513     12A7  0084               	movwf	4
  8514     12A8  0854               	movf	_current_menu+1,w
  8515     12A9  1803               	skipnc
  8516     12AA  3E01               	addlw	1
  8517     12AB  0085               	movwf	5
  8518     12AC  3F01               	moviw [1]fsr0
  8519     12AD  008A               	movwf	10
  8520     12AE  3F00               	moviw [0]fsr0
  8521     12AF  000A               	callw
  8522     12B0  3192               	pagesel	$
  8523     12B1                     l1394:
  8524     12B1  0008               	return
  8525     12B2                     __end_of_MENU_Sub_Run:
  8526                           
  8527                           	psect	text12
  8528     0EA3                     __ptext12:	
  8529 ;; *************** function _MENU_Main_Run *****************
  8530 ;; Defined at:
  8531 ;;		line 265 in file "menu.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;		None
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;		None
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  1    wreg      void 
  8538 ;; Registers used:
  8539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;Total ram usage:        1 bytes
  8550 ;; Hardware stack levels used: 1
  8551 ;; Hardware stack levels required when called: 5
  8552 ;; This function calls:
  8553 ;;		_DISP_Clr
  8554 ;;		_DISP_Str
  8555 ;;		_MENU_About_Init
  8556 ;;		_MENU_Bypass_Init
  8557 ;;		_MENU_CalPWR_Init
  8558 ;;		_MENU_Main_Init
  8559 ;;		_MENU_Main_Update
  8560 ;;		_MENU_Main_Weakup
  8561 ;;		_MENU_MemoryLoad_Init
  8562 ;;		_MENU_MemorySave_Init
  8563 ;;		_MENU_NameEdit_Init
  8564 ;;		_MENU_RelTest_Init
  8565 ;;		_MENU_Reset_Init
  8566 ;;		_MENU_Sleep_Init
  8567 ;;		_MENU_StartupSave_Init
  8568 ;;		_MENU_SubSetup_Init
  8569 ;;		_MENU_SubTop_Init
  8570 ;;		_MENU_TParam_Init
  8571 ;;		_MENU_Tune_Init
  8572 ;;		_UTILI_CalPWR
  8573 ;;		_UTILI_CalSWR
  8574 ;;		_UTILI_Get_LC_Relays
  8575 ;;		_UTILI_Set_LC_Relays
  8576 ;; This function is called by:
  8577 ;;		_MENU_Run
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581     0EA3                     _MENU_Main_Run:	
  8582                           ;psect for function _MENU_Main_Run
  8583                           
  8584     0EA3                     l8454:	
  8585                           ;incstack = 0
  8586                           ; Regs used in _MENU_Main_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8587                           
  8588                           
  8589                           ;menu.c: 267:    UTILI_CalPWR();
  8590     0EA3  3191  217D  318E   	fcall	_UTILI_CalPWR
  8591     0EA6                     l8456:
  8592                           
  8593                           ;menu.c: 268:    UTILI_CalSWR();
  8594     0EA6  3188  2000  318E   	fcall	_UTILI_CalSWR
  8595     0EA9                     l8458:
  8596                           
  8597                           ;menu.c: 270:    if ((global.PWR >= 5 ) && (global.sleep_enable == 1))
  8598     0EA9  0021               	movlb	1	; select bank1
  8599     0EAA  083E               	movf	(_global+1)^(0+128),w
  8600     0EAB  3A80               	xorlw	128
  8601     0EAC  0020               	movlb	0	; select bank0
  8602     0EAD  00C9               	movwf	??_MENU_Main_Run
  8603     0EAE  3080               	movlw	128
  8604     0EAF  0249               	subwf	??_MENU_Main_Run,w
  8605     0EB0  1D03               	skipz
  8606     0EB1  2EB5               	goto	u9655
  8607     0EB2  3005               	movlw	5
  8608     0EB3  0021               	movlb	1	; select bank1
  8609     0EB4  023D               	subwf	_global^(0+128),w
  8610     0EB5                     u9655:
  8611     0EB5  1C03               	skipc
  8612     0EB6  2EB8               	goto	u9651
  8613     0EB7  2EB9               	goto	u9650
  8614     0EB8                     u9651:
  8615     0EB8  2ED2               	goto	l8468
  8616     0EB9                     u9650:
  8617     0EB9                     l8460:
  8618     0EB9  0021               	movlb	1	; select bank1
  8619     0EBA  0346               	decf	(_global^(0+128)+9),w
  8620     0EBB  1D03               	btfss	3,2
  8621     0EBC  2EBE               	goto	u9661
  8622     0EBD  2EBF               	goto	u9660
  8623     0EBE                     u9661:
  8624     0EBE  2ED2               	goto	l8468
  8625     0EBF                     u9660:
  8626     0EBF                     l8462:
  8627                           
  8628                           ;menu.c: 271:    {;menu.c: 272:       if (MENU_var.main.sleep_timer == global.sleep_dela
      +                          y_sec)
  8629     0EBF  0848               	movf	((_global+1)^(0+128)+10),w
  8630     0EC0  0020               	movlb	0	; select bank0
  8631     0EC1  065F               	xorwf	_MENU_var+4,w
  8632     0EC2  1D03               	skipz
  8633     0EC3  2EC8               	goto	u9675
  8634     0EC4  0021               	movlb	1	; select bank1
  8635     0EC5  0847               	movf	(_global^(0+128)+10),w
  8636     0EC6  0020               	movlb	0	; select bank0
  8637     0EC7  065E               	xorwf	_MENU_var+3,w
  8638     0EC8                     u9675:
  8639     0EC8  1D03               	skipz
  8640     0EC9  2ECB               	goto	u9671
  8641     0ECA  2ECC               	goto	u9670
  8642     0ECB                     u9671:
  8643     0ECB  2ECF               	goto	l8466
  8644     0ECC                     u9670:
  8645     0ECC                     l8464:
  8646                           
  8647                           ;menu.c: 273:       {;menu.c: 274:          MENU_Main_Weakup();
  8648     0ECC  31A6  26DB  318E   	fcall	_MENU_Main_Weakup
  8649     0ECF                     l8466:
  8650                           
  8651                           ;menu.c: 276:       MENU_var.main.sleep_timer=0;
  8652     0ECF  0020               	movlb	0	; select bank0
  8653     0ED0  01DE               	clrf	_MENU_var+3
  8654     0ED1  01DF               	clrf	_MENU_var+4
  8655     0ED2                     l8468:
  8656                           
  8657                           ;menu.c: 280:    if (global.sleep_enable == 1)
  8658     0ED2  0021               	movlb	1	; select bank1
  8659     0ED3  0346               	decf	(_global^(0+128)+9),w
  8660     0ED4  1D03               	btfss	3,2
  8661     0ED5  2ED7               	goto	u9681
  8662     0ED6  2ED8               	goto	u9680
  8663     0ED7                     u9681:
  8664     0ED7  2F23               	goto	l8486
  8665     0ED8                     u9680:
  8666     0ED8                     l8470:
  8667                           
  8668                           ;menu.c: 281:    {;menu.c: 282:       if (MENU_var.main.sleep_timer < global.sleep_delay
      +                          _sec)
  8669     0ED8  0020               	movlb	0	; select bank0
  8670     0ED9  085F               	movf	_MENU_var+4,w
  8671     0EDA  3A80               	xorlw	128
  8672     0EDB  00C9               	movwf	??_MENU_Main_Run
  8673     0EDC  0021               	movlb	1	; select bank1
  8674     0EDD  0848               	movf	((_global+1)^(0+128)+10),w
  8675     0EDE  3A80               	xorlw	128
  8676     0EDF  0020               	movlb	0	; select bank0
  8677     0EE0  0249               	subwf	??_MENU_Main_Run,w
  8678     0EE1  1D03               	skipz
  8679     0EE2  2EE7               	goto	u9695
  8680     0EE3  0021               	movlb	1	; select bank1
  8681     0EE4  0847               	movf	(_global^(0+128)+10),w
  8682     0EE5  0020               	movlb	0	; select bank0
  8683     0EE6  025E               	subwf	_MENU_var+3,w
  8684     0EE7                     u9695:
  8685     0EE7  1803               	skipnc
  8686     0EE8  2EEA               	goto	u9691
  8687     0EE9  2EEB               	goto	u9690
  8688     0EEA                     u9691:
  8689     0EEA  2F23               	goto	l8486
  8690     0EEB                     u9690:
  8691     0EEB                     l8472:
  8692                           
  8693                           ;menu.c: 283:       {;menu.c: 284:          MENU_var.main.counter_1sec++;
  8694     0EEB  3001               	movlw	1
  8695     0EEC  0020               	movlb	0	; select bank0
  8696     0EED  07E0               	addwf	_MENU_var+5,f
  8697                           
  8698                           ;menu.c: 285:          if (MENU_var.main.counter_1sec == 100)
  8699     0EEE  3064               	movlw	100
  8700     0EEF  0660               	xorwf	_MENU_var+5,w
  8701     0EF0  1D03               	btfss	3,2
  8702     0EF1  2EF3               	goto	u9701
  8703     0EF2  2EF4               	goto	u9700
  8704     0EF3                     u9701:
  8705     0EF3  2F23               	goto	l8486
  8706     0EF4                     u9700:
  8707     0EF4                     l8474:
  8708                           
  8709                           ;menu.c: 286:          {;menu.c: 287:             MENU_var.main.counter_1sec=0;
  8710     0EF4  01E0               	clrf	_MENU_var+5
  8711     0EF5                     l8476:
  8712                           
  8713                           ;menu.c: 288:             MENU_var.main.sleep_timer++;
  8714     0EF5  3001               	movlw	1
  8715     0EF6  07DE               	addwf	_MENU_var+3,f
  8716     0EF7  3000               	movlw	0
  8717     0EF8  3DDF               	addwfc	_MENU_var+4,f
  8718     0EF9                     l8478:
  8719                           
  8720                           ;menu.c: 289:             if (MENU_var.main.sleep_timer == global.sleep_delay_sec)
  8721     0EF9  0021               	movlb	1	; select bank1
  8722     0EFA  0848               	movf	((_global+1)^(0+128)+10),w
  8723     0EFB  0020               	movlb	0	; select bank0
  8724     0EFC  065F               	xorwf	_MENU_var+4,w
  8725     0EFD  1D03               	skipz
  8726     0EFE  2F03               	goto	u9715
  8727     0EFF  0021               	movlb	1	; select bank1
  8728     0F00  0847               	movf	(_global^(0+128)+10),w
  8729     0F01  0020               	movlb	0	; select bank0
  8730     0F02  065E               	xorwf	_MENU_var+3,w
  8731     0F03                     u9715:
  8732     0F03  1D03               	skipz
  8733     0F04  2F06               	goto	u9711
  8734     0F05  2F07               	goto	u9710
  8735     0F06                     u9711:
  8736     0F06  2F23               	goto	l8486
  8737     0F07                     u9710:
  8738     0F07                     l8480:
  8739                           
  8740                           ;menu.c: 290:             {;menu.c: 291:                MENU_var.main.relais_backup = UT
      +                          ILI_Get_LC_Relays();
  8741     0F07  3198  2013  318E   	fcall	_UTILI_Get_LC_Relays
  8742     0F0A  0871               	movf	?_UTILI_Get_LC_Relays+1,w
  8743     0F0B  0020               	movlb	0	; select bank0
  8744     0F0C  00E2               	movwf	_MENU_var+7
  8745     0F0D  0870               	movf	?_UTILI_Get_LC_Relays,w
  8746     0F0E  00E1               	movwf	_MENU_var+6
  8747                           
  8748                           ;menu.c: 292:                DISP_Clr();
  8749     0F0F  3199  2146  318E   	fcall	_DISP_Clr
  8750     0F12                     l8482:
  8751                           
  8752                           ;menu.c: 293:                DISP_Str(0x80, 1, str_sleeping, 0);
  8753     0F12  01F8               	clrf	DISP_Str@row
  8754     0F13  0AF8               	incf	DISP_Str@row,f
  8755     0F14  301C               	movlw	low (_str_sleeping| (0+32768))
  8756     0F15  00F9               	movwf	DISP_Str@str
  8757     0F16  30A8               	movlw	high (_str_sleeping| (0+32768))
  8758     0F17  00FA               	movwf	DISP_Str@str+1
  8759     0F18  01FB               	clrf	DISP_Str@invert
  8760     0F19  3080               	movlw	128
  8761     0F1A  318D  2547  318E   	fcall	_DISP_Str
  8762     0F1D                     l8484:
  8763                           
  8764                           ;menu.c: 294:                UTILI_Set_LC_Relays(0);
  8765     0F1D  3000               	movlw	0
  8766     0F1E  00F1               	movwf	UTILI_Set_LC_Relays@relays
  8767     0F1F  00F2               	movwf	UTILI_Set_LC_Relays@relays+1
  8768     0F20  31A7  2758  318E   	fcall	_UTILI_Set_LC_Relays
  8769     0F23                     l8486:
  8770                           
  8771                           ;menu.c: 300:    if ((MENU_var.main.sleep_timer < global.sleep_delay_sec) || (global.sle
      +                          ep_enable != 1))
  8772     0F23  0020               	movlb	0	; select bank0
  8773     0F24  085F               	movf	_MENU_var+4,w
  8774     0F25  3A80               	xorlw	128
  8775     0F26  00C9               	movwf	??_MENU_Main_Run
  8776     0F27  0021               	movlb	1	; select bank1
  8777     0F28  0848               	movf	((_global+1)^(0+128)+10),w
  8778     0F29  3A80               	xorlw	128
  8779     0F2A  0020               	movlb	0	; select bank0
  8780     0F2B  0249               	subwf	??_MENU_Main_Run,w
  8781     0F2C  1D03               	skipz
  8782     0F2D  2F32               	goto	u9725
  8783     0F2E  0021               	movlb	1	; select bank1
  8784     0F2F  0847               	movf	(_global^(0+128)+10),w
  8785     0F30  0020               	movlb	0	; select bank0
  8786     0F31  025E               	subwf	_MENU_var+3,w
  8787     0F32                     u9725:
  8788     0F32  1C03               	skipc
  8789     0F33  2F35               	goto	u9721
  8790     0F34  2F36               	goto	u9720
  8791     0F35                     u9721:
  8792     0F35  2F3C               	goto	l8490
  8793     0F36                     u9720:
  8794     0F36                     l8488:
  8795     0F36  0021               	movlb	1	; select bank1
  8796     0F37  0346               	decf	(_global^(0+128)+9),w
  8797     0F38  1903               	btfsc	3,2
  8798     0F39  2F3B               	goto	u9731
  8799     0F3A  2F3C               	goto	u9730
  8800     0F3B                     u9731:
  8801     0F3B  2FF6               	goto	l8538
  8802     0F3C                     u9730:
  8803     0F3C                     l8490:
  8804                           
  8805                           ;menu.c: 301:    {;menu.c: 302:       MENU_var.main.update_cnt++;
  8806     0F3C  3001               	movlw	1
  8807     0F3D  0020               	movlb	0	; select bank0
  8808     0F3E  07DB               	addwf	_MENU_var,f
  8809                           
  8810                           ;menu.c: 303:       if (MENU_var.main.update_cnt == 10)
  8811     0F3F  300A               	movlw	10
  8812     0F40  065B               	xorwf	_MENU_var,w
  8813     0F41  1D03               	btfss	3,2
  8814     0F42  2F44               	goto	u9741
  8815     0F43  2F45               	goto	u9740
  8816     0F44                     u9741:
  8817     0F44  2F68               	goto	l8502
  8818     0F45                     u9740:
  8819     0F45                     l8492:
  8820                           
  8821                           ;menu.c: 304:       {;menu.c: 305:          MENU_var.main.update_cnt = 0;
  8822     0F45  01DB               	clrf	_MENU_var
  8823     0F46                     l8494:
  8824                           
  8825                           ;menu.c: 306:          if ((global.PWR > 0) || (MENU_var.main.old_pwr != 0))
  8826     0F46  0021               	movlb	1	; select bank1
  8827     0F47  083E               	movf	(_global+1)^(0+128),w
  8828     0F48  3A80               	xorlw	128
  8829     0F49  0020               	movlb	0	; select bank0
  8830     0F4A  00C9               	movwf	??_MENU_Main_Run
  8831     0F4B  3080               	movlw	128
  8832     0F4C  0249               	subwf	??_MENU_Main_Run,w
  8833     0F4D  1D03               	skipz
  8834     0F4E  2F52               	goto	u9755
  8835     0F4F  3001               	movlw	1
  8836     0F50  0021               	movlb	1	; select bank1
  8837     0F51  023D               	subwf	_global^(0+128),w
  8838     0F52                     u9755:
  8839     0F52  1803               	skipnc
  8840     0F53  2F55               	goto	u9751
  8841     0F54  2F56               	goto	u9750
  8842     0F55                     u9751:
  8843     0F55  2F5D               	goto	l8498
  8844     0F56                     u9750:
  8845     0F56                     l8496:
  8846     0F56  0020               	movlb	0	; select bank0
  8847     0F57  085C               	movf	_MENU_var+1,w
  8848     0F58  045D               	iorwf	_MENU_var+2,w
  8849     0F59  1903               	btfsc	3,2
  8850     0F5A  2F5C               	goto	u9761
  8851     0F5B  2F5D               	goto	u9760
  8852     0F5C                     u9761:
  8853     0F5C  2F68               	goto	l8502
  8854     0F5D                     u9760:
  8855     0F5D                     l8498:
  8856                           
  8857                           ;menu.c: 307:          {;menu.c: 308:             MENU_var.main.old_pwr = global.PWR;
  8858     0F5D  0021               	movlb	1	; select bank1
  8859     0F5E  083E               	movf	(_global+1)^(0+128),w
  8860     0F5F  0020               	movlb	0	; select bank0
  8861     0F60  00DD               	movwf	_MENU_var+2
  8862     0F61  0021               	movlb	1	; select bank1
  8863     0F62  083D               	movf	_global^(0+128),w
  8864     0F63  0020               	movlb	0	; select bank0
  8865     0F64  00DC               	movwf	_MENU_var+1
  8866     0F65                     l8500:
  8867                           
  8868                           ;menu.c: 309:             MENU_Main_Update();
  8869     0F65  3189  2129  318E   	fcall	_MENU_Main_Update
  8870     0F68                     l8502:
  8871                           
  8872                           ;menu.c: 314:       if((global.tune_auto_enable == 1) && (global.bypass_enable != 1))
  8873     0F68  0021               	movlb	1	; select bank1
  8874     0F69  0345               	decf	(_global^(0+128)+8),w
  8875     0F6A  1D03               	btfss	3,2
  8876     0F6B  2F6D               	goto	u9771
  8877     0F6C  2F6E               	goto	u9770
  8878     0F6D                     u9771:
  8879     0F6D  2FA6               	goto	l8514
  8880     0F6E                     u9770:
  8881     0F6E                     l8504:
  8882     0F6E  0349               	decf	(_global^(0+128)+12),w
  8883     0F6F  1903               	btfsc	3,2
  8884     0F70  2F72               	goto	u9781
  8885     0F71  2F73               	goto	u9780
  8886     0F72                     u9781:
  8887     0F72  2FA6               	goto	l8514
  8888     0F73                     u9780:
  8889     0F73                     l8506:
  8890                           
  8891                           ;menu.c: 315:       {;menu.c: 316:          if((global.PWR > 0) && (global.SWR >= global
      +                          .tune_auto_swr))
  8892     0F73  083E               	movf	(_global+1)^(0+128),w
  8893     0F74  3A80               	xorlw	128
  8894     0F75  0020               	movlb	0	; select bank0
  8895     0F76  00C9               	movwf	??_MENU_Main_Run
  8896     0F77  3080               	movlw	128
  8897     0F78  0249               	subwf	??_MENU_Main_Run,w
  8898     0F79  1D03               	skipz
  8899     0F7A  2F7E               	goto	u9795
  8900     0F7B  3001               	movlw	1
  8901     0F7C  0021               	movlb	1	; select bank1
  8902     0F7D  023D               	subwf	_global^(0+128),w
  8903     0F7E                     u9795:
  8904     0F7E  1C03               	skipc
  8905     0F7F  2F81               	goto	u9791
  8906     0F80  2F82               	goto	u9790
  8907     0F81                     u9791:
  8908     0F81  2FA6               	goto	l8514
  8909     0F82                     u9790:
  8910     0F82                     l8508:
  8911     0F82  0021               	movlb	1	; select bank1
  8912     0F83  0840               	movf	((_global+1)^(0+128)+2),w
  8913     0F84  3A80               	xorlw	128
  8914     0F85  0020               	movlb	0	; select bank0
  8915     0F86  00C9               	movwf	??_MENU_Main_Run
  8916     0F87  0021               	movlb	1	; select bank1
  8917     0F88  0844               	movf	((_global+1)^(0+128)+6),w
  8918     0F89  3A80               	xorlw	128
  8919     0F8A  0020               	movlb	0	; select bank0
  8920     0F8B  0249               	subwf	??_MENU_Main_Run,w
  8921     0F8C  1D03               	skipz
  8922     0F8D  2F91               	goto	u9805
  8923     0F8E  0021               	movlb	1	; select bank1
  8924     0F8F  0843               	movf	(_global^(0+128)+6),w
  8925     0F90  023F               	subwf	(_global^(0+128)+2),w
  8926     0F91                     u9805:
  8927     0F91  1C03               	skipc
  8928     0F92  2F94               	goto	u9801
  8929     0F93  2F95               	goto	u9800
  8930     0F94                     u9801:
  8931     0F94  2FA6               	goto	l8514
  8932     0F95                     u9800:
  8933     0F95                     l8510:
  8934                           
  8935                           ;menu.c: 317:          {;menu.c: 318:             current_menu = &menuTune;
  8936     0F95  3042               	movlw	low (_menuTune| (0+32768))
  8937     0F96  0020               	movlb	0	; select bank0
  8938     0F97  00D3               	movwf	_current_menu
  8939     0F98  30A9               	movlw	high (_menuTune| (0+32768))
  8940     0F99  00D4               	movwf	_current_menu+1
  8941     0F9A                     l8512:
  8942                           
  8943                           ;menu.c: 319:             current_menu->Init();
  8944     0F9A  3002               	movlw	2
  8945     0F9B  0753               	addwf	_current_menu,w
  8946     0F9C  0084               	movwf	4
  8947     0F9D  0854               	movf	_current_menu+1,w
  8948     0F9E  1803               	skipnc
  8949     0F9F  3E01               	addlw	1
  8950     0FA0  0085               	movwf	5
  8951     0FA1  3F01               	moviw [1]fsr0
  8952     0FA2  008A               	movwf	10
  8953     0FA3  3F00               	moviw [0]fsr0
  8954     0FA4  000A               	callw
  8955     0FA5  318E               	pagesel	$
  8956     0FA6                     l8514:
  8957                           
  8958                           ;menu.c: 324:       if (BUTTON_count == 251)
  8959     0FA6  30FB               	movlw	251
  8960     0FA7  0020               	movlb	0	; select bank0
  8961     0FA8  0659               	xorwf	_BUTTON_count,w
  8962     0FA9  1D03               	btfss	3,2
  8963     0FAA  2FAC               	goto	u9811
  8964     0FAB  2FAD               	goto	u9810
  8965     0FAC                     u9811:
  8966     0FAC  2FCD               	goto	l8526
  8967     0FAD                     u9810:
  8968     0FAD                     l8516:
  8969                           
  8970                           ;menu.c: 325:       {;menu.c: 326:          if(global.bypass_enable == 1)
  8971     0FAD  0021               	movlb	1	; select bank1
  8972     0FAE  0349               	decf	(_global^(0+128)+12),w
  8973     0FAF  1D03               	btfss	3,2
  8974     0FB0  2FB2               	goto	u9821
  8975     0FB1  2FB3               	goto	u9820
  8976     0FB2                     u9821:
  8977     0FB2  2FBC               	goto	l8522
  8978     0FB3                     u9820:
  8979     0FB3                     l8518:
  8980                           
  8981                           ;menu.c: 327:          {;menu.c: 328:             global.bypass_enable = 0;
  8982     0FB3  01C9               	clrf	(_global^(0+128)+12)
  8983     0FB4                     l8520:
  8984                           
  8985                           ;menu.c: 329:             UTILI_Set_LC_Relays(global.bypass_save_relais);
  8986     0FB4  084B               	movf	((_global+1)^(0+128)+13),w
  8987     0FB5  00F2               	movwf	UTILI_Set_LC_Relays@relays+1
  8988     0FB6  084A               	movf	(_global^(0+128)+13),w
  8989     0FB7  00F1               	movwf	UTILI_Set_LC_Relays@relays
  8990     0FB8  31A7  2758  318E   	fcall	_UTILI_Set_LC_Relays
  8991                           
  8992                           ;menu.c: 330:          }
  8993     0FBB  2FCD               	goto	l8526
  8994     0FBC                     l8522:
  8995                           
  8996                           ;menu.c: 332:          {;menu.c: 333:             current_menu = &menuTune;
  8997     0FBC  3042               	movlw	low (_menuTune| (0+32768))
  8998     0FBD  0020               	movlb	0	; select bank0
  8999     0FBE  00D3               	movwf	_current_menu
  9000     0FBF  30A9               	movlw	high (_menuTune| (0+32768))
  9001     0FC0  00D4               	movwf	_current_menu+1
  9002     0FC1                     l8524:
  9003                           
  9004                           ;menu.c: 334:             current_menu->Init();
  9005     0FC1  3002               	movlw	2
  9006     0FC2  0753               	addwf	_current_menu,w
  9007     0FC3  0084               	movwf	4
  9008     0FC4  0854               	movf	_current_menu+1,w
  9009     0FC5  1803               	skipnc
  9010     0FC6  3E01               	addlw	1
  9011     0FC7  0085               	movwf	5
  9012     0FC8  3F01               	moviw [1]fsr0
  9013     0FC9  008A               	movwf	10
  9014     0FCA  3F00               	moviw [0]fsr0
  9015     0FCB  000A               	callw
  9016     0FCC  318E               	pagesel	$
  9017     0FCD                     l8526:
  9018                           
  9019                           ;menu.c: 339:       if (BUTTON_count == 80)
  9020     0FCD  3050               	movlw	80
  9021     0FCE  0020               	movlb	0	; select bank0
  9022     0FCF  0659               	xorwf	_BUTTON_count,w
  9023     0FD0  1D03               	btfss	3,2
  9024     0FD1  2FD3               	goto	u9831
  9025     0FD2  2FD4               	goto	u9830
  9026     0FD3                     u9831:
  9027     0FD3  2FFF               	goto	l1226
  9028     0FD4                     u9830:
  9029     0FD4                     l8528:
  9030                           
  9031                           ;menu.c: 340:       {;menu.c: 341:          if(global.bypass_enable == 1)
  9032     0FD4  0021               	movlb	1	; select bank1
  9033     0FD5  0349               	decf	(_global^(0+128)+12),w
  9034     0FD6  1D03               	btfss	3,2
  9035     0FD7  2FD9               	goto	u9841
  9036     0FD8  2FDA               	goto	u9840
  9037     0FD9                     u9841:
  9038     0FD9  2FE3               	goto	l8534
  9039     0FDA                     u9840:
  9040     0FDA                     l8530:
  9041                           
  9042                           ;menu.c: 342:          {;menu.c: 343:             global.bypass_enable = 0;
  9043     0FDA  01C9               	clrf	(_global^(0+128)+12)
  9044     0FDB                     l8532:
  9045                           
  9046                           ;menu.c: 344:             UTILI_Set_LC_Relays(global.bypass_save_relais);
  9047     0FDB  084B               	movf	((_global+1)^(0+128)+13),w
  9048     0FDC  00F2               	movwf	UTILI_Set_LC_Relays@relays+1
  9049     0FDD  084A               	movf	(_global^(0+128)+13),w
  9050     0FDE  00F1               	movwf	UTILI_Set_LC_Relays@relays
  9051     0FDF  31A7  2758  318E   	fcall	_UTILI_Set_LC_Relays
  9052                           
  9053                           ;menu.c: 345:          }
  9054     0FE2  2FE8               	goto	l8536
  9055     0FE3                     l8534:
  9056                           
  9057                           ;menu.c: 347:          {;menu.c: 348:             current_menu = &menuSubTop;
  9058     0FE3  3084               	movlw	low (_menuSubTop| (0+32768))
  9059     0FE4  0020               	movlb	0	; select bank0
  9060     0FE5  00D3               	movwf	_current_menu
  9061     0FE6  30A9               	movlw	high (_menuSubTop| (0+32768))
  9062     0FE7  00D4               	movwf	_current_menu+1
  9063     0FE8                     l8536:
  9064                           
  9065                           ;menu.c: 350:          current_menu->Init();
  9066     0FE8  3002               	movlw	2
  9067     0FE9  0020               	movlb	0	; select bank0
  9068     0FEA  0753               	addwf	_current_menu,w
  9069     0FEB  0084               	movwf	4
  9070     0FEC  0854               	movf	_current_menu+1,w
  9071     0FED  1803               	skipnc
  9072     0FEE  3E01               	addlw	1
  9073     0FEF  0085               	movwf	5
  9074     0FF0  3F01               	moviw [1]fsr0
  9075     0FF1  008A               	movwf	10
  9076     0FF2  3F00               	moviw [0]fsr0
  9077     0FF3  000A               	callw
  9078     0FF4  318E               	pagesel	$
  9079     0FF5  2FFF               	goto	l1226
  9080     0FF6                     l8538:
  9081                           
  9082                           ;menu.c: 354:    {;menu.c: 355:       if (BUTTON_count == 1)
  9083     0FF6  0020               	movlb	0	; select bank0
  9084     0FF7  0359               	decf	_BUTTON_count,w
  9085     0FF8  1D03               	btfss	3,2
  9086     0FF9  2FFB               	goto	u9851
  9087     0FFA  2FFC               	goto	u9850
  9088     0FFB                     u9851:
  9089     0FFB  2FFF               	goto	l1226
  9090     0FFC                     u9850:
  9091     0FFC                     l8540:
  9092                           
  9093                           ;menu.c: 356:       {;menu.c: 357:          MENU_Main_Weakup();
  9094     0FFC  31A6  26DB  318E   	fcall	_MENU_Main_Weakup
  9095     0FFF                     l1226:
  9096     0FFF  0008               	return
  9097     1000                     __end_of_MENU_Main_Run:
  9098                           
  9099                           	psect	text13
  9100     19B7                     __ptext13:	
  9101 ;; *************** function _MENU_Tune_Run *****************
  9102 ;; Defined at:
  9103 ;;		line 411 in file "menu.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;		None
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;Total ram usage:        0 bytes
  9122 ;; Hardware stack levels used: 1
  9123 ;; Hardware stack levels required when called: 3
  9124 ;; This function calls:
  9125 ;;		_MENU_Init
  9126 ;;		_MENU_Tune_Update
  9127 ;;		_TUNE_Run
  9128 ;;		_UTILI_Set_LC_Relays
  9129 ;; This function is called by:
  9130 ;;		_MENU_Run
  9131 ;; This function uses a non-reentrant model
  9132 ;;
  9133                           
  9134     19B7                     _MENU_Tune_Run:	
  9135                           ;psect for function _MENU_Tune_Run
  9136                           
  9137     19B7                     l8542:	
  9138                           ;incstack = 0
  9139                           ; Regs used in _MENU_Tune_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9140                           
  9141                           
  9142                           ;menu.c: 413:   TUNE_Run();
  9143     19B7  3180  204B  3199   	fcall	_TUNE_Run
  9144     19BA                     l8544:
  9145                           
  9146                           ;menu.c: 415:   MENU_var.tune.update_cnt++;
  9147     19BA  3001               	movlw	1
  9148     19BB  0020               	movlb	0	; select bank0
  9149     19BC  07DB               	addwf	_MENU_var,f
  9150     19BD                     l8546:
  9151                           
  9152                           ;menu.c: 416:   if (MENU_var.tune.update_cnt == 50)
  9153     19BD  3032               	movlw	50
  9154     19BE  065B               	xorwf	_MENU_var,w
  9155     19BF  1D03               	btfss	3,2
  9156     19C0  29C2               	goto	u9861
  9157     19C1  29C3               	goto	u9860
  9158     19C2                     u9861:
  9159     19C2  29C7               	goto	l8552
  9160     19C3                     u9860:
  9161     19C3                     l8548:
  9162                           
  9163                           ;menu.c: 417:   {;menu.c: 418:     MENU_var.tune.update_cnt = 0;
  9164     19C3  01DB               	clrf	_MENU_var
  9165     19C4                     l8550:
  9166                           
  9167                           ;menu.c: 419:     MENU_Tune_Update();
  9168     19C4  3199  216B  3199   	fcall	_MENU_Tune_Update
  9169     19C7                     l8552:
  9170                           
  9171                           ;menu.c: 422:   if (BUTTON_count == 1)
  9172     19C7  0020               	movlb	0	; select bank0
  9173     19C8  0359               	decf	_BUTTON_count,w
  9174     19C9  1D03               	btfss	3,2
  9175     19CA  29CC               	goto	u9871
  9176     19CB  29CD               	goto	u9870
  9177     19CC                     u9871:
  9178     19CC  29D8               	goto	l8560
  9179     19CD                     u9870:
  9180     19CD                     l8554:
  9181                           
  9182                           ;menu.c: 423:   {;menu.c: 424:     UTILI_Set_LC_Relays(MENU_var.tune.relays_backup);
  9183     19CD  085E               	movf	_MENU_var+3,w
  9184     19CE  00F2               	movwf	UTILI_Set_LC_Relays@relays+1
  9185     19CF  085D               	movf	_MENU_var+2,w
  9186     19D0  00F1               	movwf	UTILI_Set_LC_Relays@relays
  9187     19D1  31A7  2758  3199   	fcall	_UTILI_Set_LC_Relays
  9188     19D4                     l8556:
  9189                           
  9190                           ;menu.c: 425:     MENU_Init();
  9191     19D4  3187  27F6  3199   	fcall	_MENU_Init
  9192     19D7  29E0               	goto	l1249
  9193     19D8                     l8560:
  9194                           
  9195                           ;menu.c: 429:   if(TUNE_state == TUNE_READY)
  9196     19D8  3005               	movlw	5
  9197     19D9  0021               	movlb	1	; select bank1
  9198     19DA  0635               	xorwf	_TUNE_state^(0+128),w
  9199     19DB  1D03               	btfss	3,2
  9200     19DC  29DE               	goto	u9881
  9201     19DD  29DF               	goto	u9880
  9202     19DE                     u9881:
  9203     19DE  29E0               	goto	l1249
  9204     19DF                     u9880:
  9205     19DF  29D4               	goto	l8556
  9206     19E0                     l1249:
  9207     19E0  0008               	return
  9208     19E1                     __end_of_MENU_Tune_Run:
  9209                           
  9210                           	psect	text14
  9211     004B                     __ptext14:	
  9212 ;; *************** function _TUNE_Run *****************
  9213 ;; Defined at:
  9214 ;;		line 66 in file "tune.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;		None
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;		None
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  1    wreg      void 
  9221 ;; Registers used:
  9222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;Total ram usage:       11 bytes
  9233 ;; Hardware stack levels used: 1
  9234 ;; Hardware stack levels required when called: 2
  9235 ;; This function calls:
  9236 ;;		_UTILI_CalPWR
  9237 ;;		_UTILI_CalSWR
  9238 ;;		_UTILI_SetRelays
  9239 ;;		___awdiv
  9240 ;; This function is called by:
  9241 ;;		_MENU_Tune_Run
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245     004B                     _TUNE_Run:	
  9246                           ;psect for function _TUNE_Run
  9247                           
  9248     004B                     l8040:	
  9249                           ;incstack = 0
  9250                           ; Regs used in _TUNE_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9251                           
  9252                           
  9253                           ;tune.c: 68:   static uint8_t ind_step;;tune.c: 69:   static uint8_t cap_step;;tune.c: 7
      +                          0:   static int16_t best_swr;;tune.c: 72:   static uint8_t best_cap_step;;tune.c: 73:   
      +                          static uint8_t best_ind_step;;tune.c: 74:   static uint8_t best_cap_sw;;tune.c: 76:   st
      +                          atic int16_t best_row_swr;;tune.c: 77:   static int16_t best_last_row_swr;;tune.c: 79:  
      +                           static uint8_t fine_cap_diff_low;;tune.c: 80:   static uint8_t fine_cap_diff_high;;tune
      +                          .c: 81:   static uint8_t fine_ind_diff_low;;tune.c: 82:   static uint8_t fine_ind_diff_h
      +                          igh;
  9254     004B  3003               	movlw	3
  9255     004C  0021               	movlb	1	; select bank1
  9256     004D  0635               	xorwf	_TUNE_state^(0+128),w
  9257     004E  1903               	btfsc	3,2
  9258     004F  2851               	goto	u9301
  9259     0050  2852               	goto	u9300
  9260     0051                     u9301:
  9261     0051  2B7E               	goto	l1845
  9262     0052                     u9300:
  9263     0052                     l8042:
  9264     0052  3005               	movlw	5
  9265     0053  0635               	xorwf	_TUNE_state^(0+128),w
  9266     0054  1D03               	btfss	3,2
  9267     0055  2857               	goto	u9311
  9268     0056  2858               	goto	u9310
  9269     0057                     u9311:
  9270     0057  2859               	goto	l8044
  9271     0058                     u9310:
  9272     0058  2B7E               	goto	l1845
  9273     0059                     l8044:
  9274                           
  9275                           ;tune.c: 93:   if (TUNE_delay > 0)
  9276     0059  0832               	movf	_TUNE_delay^(0+128),w
  9277     005A  1903               	btfsc	3,2
  9278     005B  285D               	goto	u9321
  9279     005C  285E               	goto	u9320
  9280     005D                     u9321:
  9281     005D  2861               	goto	l8050
  9282     005E                     u9320:
  9283     005E                     l8046:
  9284                           
  9285                           ;tune.c: 94:   {;tune.c: 95:     TUNE_delay--;
  9286     005E  3001               	movlw	1
  9287     005F  02B2               	subwf	_TUNE_delay^(0+128),f
  9288     0060  2B7E               	goto	l1845
  9289     0061                     l8050:
  9290                           
  9291                           ;tune.c: 103:   UTILI_CalPWR();
  9292     0061  3191  217D  3180   	fcall	_UTILI_CalPWR
  9293     0064                     l8052:
  9294                           
  9295                           ;tune.c: 104:   UTILI_CalSWR();
  9296     0064  3188  2000  3180   	fcall	_UTILI_CalSWR
  9297     0067                     l8054:
  9298                           
  9299                           ;tune.c: 106:   if ((TUNE_step != 0) && (global.PWR < 5))
  9300     0067  0021               	movlb	1	; select bank1
  9301     0068  0833               	movf	_TUNE_step^(0+128),w
  9302     0069  1903               	btfsc	3,2
  9303     006A  286C               	goto	u9331
  9304     006B  286D               	goto	u9330
  9305     006C                     u9331:
  9306     006C  2B6F               	goto	l8270
  9307     006D                     u9330:
  9308     006D                     l8056:
  9309     006D  083E               	movf	(_global+1)^(0+128),w
  9310     006E  3A80               	xorlw	128
  9311     006F  0020               	movlb	0	; select bank0
  9312     0070  00B9               	movwf	??_TUNE_Run
  9313     0071  3080               	movlw	128
  9314     0072  0239               	subwf	??_TUNE_Run,w
  9315     0073  1D03               	skipz
  9316     0074  2878               	goto	u9345
  9317     0075  3005               	movlw	5
  9318     0076  0021               	movlb	1	; select bank1
  9319     0077  023D               	subwf	_global^(0+128),w
  9320     0078                     u9345:
  9321     0078  1803               	skipnc
  9322     0079  287B               	goto	u9341
  9323     007A  287C               	goto	u9340
  9324     007B                     u9341:
  9325     007B  2B6F               	goto	l8270
  9326     007C                     u9340:
  9327     007C                     l8058:
  9328                           
  9329                           ;tune.c: 107:   {;tune.c: 108:     TUNE_state = TUNE_PWRLOW;
  9330     007C  3004               	movlw	4
  9331     007D  0021               	movlb	1	; select bank1
  9332     007E  00B5               	movwf	_TUNE_state^(0+128)
  9333                           
  9334                           ;tune.c: 109:     return;
  9335     007F  2B7E               	goto	l1845
  9336     0080                     l8060:
  9337                           
  9338                           ;tune.c: 115:       if (global.PWR >= 5)
  9339     0080  083E               	movf	(_global+1)^(0+128),w
  9340     0081  3A80               	xorlw	128
  9341     0082  0020               	movlb	0	; select bank0
  9342     0083  00B9               	movwf	??_TUNE_Run
  9343     0084  3080               	movlw	128
  9344     0085  0239               	subwf	??_TUNE_Run,w
  9345     0086  1D03               	skipz
  9346     0087  288B               	goto	u9355
  9347     0088  3005               	movlw	5
  9348     0089  0021               	movlb	1	; select bank1
  9349     008A  023D               	subwf	_global^(0+128),w
  9350     008B                     u9355:
  9351     008B  1C03               	skipc
  9352     008C  288E               	goto	u9351
  9353     008D  288F               	goto	u9350
  9354     008E                     u9351:
  9355     008E  2B7E               	goto	l1845
  9356     008F                     u9350:
  9357     008F                     l8062:
  9358                           
  9359                           ;tune.c: 116:       {;tune.c: 117:         TUNE_step = 10;
  9360     008F  300A               	movlw	10
  9361     0090  0021               	movlb	1	; select bank1
  9362     0091  00B3               	movwf	_TUNE_step^(0+128)
  9363                           
  9364                           ;tune.c: 118:         TUNE_state = TUNE_RUN;
  9365     0092  3002               	movlw	2
  9366     0093  00B5               	movwf	_TUNE_state^(0+128)
  9367     0094                     l8064:
  9368                           
  9369                           ;tune.c: 119:         best_swr = 999;
  9370     0094  30E7               	movlw	231
  9371     0095  00AA               	movwf	TUNE_Run@best_swr^(0+128)
  9372     0096  3003               	movlw	3
  9373     0097  00AB               	movwf	(TUNE_Run@best_swr^(0+128)+1)
  9374                           
  9375                           ;tune.c: 120:         best_row_swr = 999;
  9376     0098  30E7               	movlw	231
  9377     0099  00A8               	movwf	TUNE_Run@best_row_swr^(0+128)
  9378     009A  3003               	movlw	3
  9379     009B  00A9               	movwf	(TUNE_Run@best_row_swr^(0+128)+1)
  9380                           
  9381                           ;tune.c: 121:         best_last_row_swr = 999;
  9382     009C  30E7               	movlw	231
  9383     009D  00A6               	movwf	TUNE_Run@best_last_row_swr^(0+128)
  9384     009E  3003               	movlw	3
  9385     009F  00A7               	movwf	(TUNE_Run@best_last_row_swr^(0+128)+1)
  9386     00A0                     l8066:
  9387                           
  9388                           ;tune.c: 122:         ind_step = 0;
  9389     00A0  0020               	movlb	0	; select bank0
  9390     00A1  01D8               	clrf	TUNE_Run@ind_step
  9391     00A2                     l8068:
  9392                           
  9393                           ;tune.c: 123:         cap_step = 0;
  9394     00A2  01D7               	clrf	TUNE_Run@cap_step
  9395     00A3                     l8070:
  9396                           
  9397                           ;tune.c: 124:         best_swr_valid = 0;
  9398     00A3  0021               	movlb	1	; select bank1
  9399     00A4  01B1               	clrf	_best_swr_valid^(0+128)
  9400     00A5                     l8072:
  9401                           
  9402                           ;tune.c: 125:         TUNE_delay = 2;
  9403     00A5  3002               	movlw	2
  9404     00A6  0021               	movlb	1	; select bank1
  9405     00A7  00B2               	movwf	_TUNE_delay^(0+128)
  9406     00A8  2B7E               	goto	l1845
  9407     00A9                     l8074:
  9408                           
  9409                           ;tune.c: 136:       if (global.SWR <= global.tune_stop_swr)
  9410     00A9  0842               	movf	((_global+1)^(0+128)+4),w
  9411     00AA  3A80               	xorlw	128
  9412     00AB  0020               	movlb	0	; select bank0
  9413     00AC  00B9               	movwf	??_TUNE_Run
  9414     00AD  0021               	movlb	1	; select bank1
  9415     00AE  0840               	movf	((_global+1)^(0+128)+2),w
  9416     00AF  3A80               	xorlw	128
  9417     00B0  0020               	movlb	0	; select bank0
  9418     00B1  0239               	subwf	??_TUNE_Run,w
  9419     00B2  1D03               	skipz
  9420     00B3  28B7               	goto	u9365
  9421     00B4  0021               	movlb	1	; select bank1
  9422     00B5  083F               	movf	(_global^(0+128)+2),w
  9423     00B6  0241               	subwf	(_global^(0+128)+4),w
  9424     00B7                     u9365:
  9425     00B7  1C03               	skipc
  9426     00B8  28BA               	goto	u9361
  9427     00B9  28BB               	goto	u9360
  9428     00BA                     u9361:
  9429     00BA  28BF               	goto	l8078
  9430     00BB                     u9360:
  9431     00BB                     l8076:
  9432                           
  9433                           ;tune.c: 137:       {;tune.c: 138:         TUNE_state = TUNE_READY;
  9434     00BB  3005               	movlw	5
  9435     00BC  0021               	movlb	1	; select bank1
  9436     00BD  00B5               	movwf	_TUNE_state^(0+128)
  9437                           
  9438                           ;tune.c: 139:         break;
  9439     00BE  2B7E               	goto	l1845
  9440     00BF                     l8078:
  9441                           
  9442                           ;tune.c: 142:       if (global.SWR < best_row_swr)
  9443     00BF  0021               	movlb	1	; select bank1
  9444     00C0  0840               	movf	((_global+1)^(0+128)+2),w
  9445     00C1  3A80               	xorlw	128
  9446     00C2  0020               	movlb	0	; select bank0
  9447     00C3  00B9               	movwf	??_TUNE_Run
  9448     00C4  0021               	movlb	1	; select bank1
  9449     00C5  0829               	movf	(TUNE_Run@best_row_swr+1)^(0+128),w
  9450     00C6  3A80               	xorlw	128
  9451     00C7  0020               	movlb	0	; select bank0
  9452     00C8  0239               	subwf	??_TUNE_Run,w
  9453     00C9  1D03               	skipz
  9454     00CA  28CE               	goto	u9375
  9455     00CB  0021               	movlb	1	; select bank1
  9456     00CC  0828               	movf	TUNE_Run@best_row_swr^(0+128),w
  9457     00CD  023F               	subwf	(_global^(0+128)+2),w
  9458     00CE                     u9375:
  9459     00CE  1803               	skipnc
  9460     00CF  28D1               	goto	u9371
  9461     00D0  28D2               	goto	u9370
  9462     00D1                     u9371:
  9463     00D1  28D7               	goto	l1854
  9464     00D2                     u9370:
  9465     00D2                     l8080:
  9466                           
  9467                           ;tune.c: 143:         best_row_swr = global.SWR;
  9468     00D2  0021               	movlb	1	; select bank1
  9469     00D3  0840               	movf	((_global+1)^(0+128)+2),w
  9470     00D4  00A9               	movwf	(TUNE_Run@best_row_swr+1)^(0+128)
  9471     00D5  083F               	movf	(_global^(0+128)+2),w
  9472     00D6  00A8               	movwf	TUNE_Run@best_row_swr^(0+128)
  9473     00D7                     l1854:
  9474                           
  9475                           ;tune.c: 145:       if (global.SWR < best_swr)
  9476     00D7  0021               	movlb	1	; select bank1
  9477     00D8  0840               	movf	((_global+1)^(0+128)+2),w
  9478     00D9  3A80               	xorlw	128
  9479     00DA  0020               	movlb	0	; select bank0
  9480     00DB  00B9               	movwf	??_TUNE_Run
  9481     00DC  0021               	movlb	1	; select bank1
  9482     00DD  082B               	movf	(TUNE_Run@best_swr+1)^(0+128),w
  9483     00DE  3A80               	xorlw	128
  9484     00DF  0020               	movlb	0	; select bank0
  9485     00E0  0239               	subwf	??_TUNE_Run,w
  9486     00E1  1D03               	skipz
  9487     00E2  28E6               	goto	u9385
  9488     00E3  0021               	movlb	1	; select bank1
  9489     00E4  082A               	movf	TUNE_Run@best_swr^(0+128),w
  9490     00E5  023F               	subwf	(_global^(0+128)+2),w
  9491     00E6                     u9385:
  9492     00E6  1803               	skipnc
  9493     00E7  28E9               	goto	u9381
  9494     00E8  28EA               	goto	u9380
  9495     00E9                     u9381:
  9496     00E9  28F9               	goto	l8086
  9497     00EA                     u9380:
  9498     00EA                     l8082:
  9499                           
  9500                           ;tune.c: 146:       {;tune.c: 147:         best_swr = global.SWR;
  9501     00EA  0021               	movlb	1	; select bank1
  9502     00EB  0840               	movf	((_global+1)^(0+128)+2),w
  9503     00EC  00AB               	movwf	(TUNE_Run@best_swr+1)^(0+128)
  9504     00ED  083F               	movf	(_global^(0+128)+2),w
  9505     00EE  00AA               	movwf	TUNE_Run@best_swr^(0+128)
  9506                           
  9507                           ;tune.c: 148:         best_cap_step = cap_step;
  9508     00EF  0020               	movlb	0	; select bank0
  9509     00F0  0857               	movf	TUNE_Run@cap_step,w
  9510     00F1  00D6               	movwf	TUNE_Run@best_cap_step
  9511                           
  9512                           ;tune.c: 149:         best_ind_step = ind_step;
  9513     00F2  0858               	movf	TUNE_Run@ind_step,w
  9514     00F3  00D5               	movwf	TUNE_Run@best_ind_step
  9515                           
  9516                           ;tune.c: 150:         best_cap_sw = global.cap_sw;
  9517     00F4  0021               	movlb	1	; select bank1
  9518     00F5  0858               	movf	(_global^(0+128)+27),w
  9519     00F6  00B0               	movwf	TUNE_Run@best_cap_sw^(0+128)
  9520     00F7                     l8084:
  9521                           
  9522                           ;tune.c: 151:         best_swr_valid = 1;
  9523     00F7  3001               	movlw	1
  9524     00F8  00B1               	movwf	_best_swr_valid^(0+128)
  9525     00F9                     l8086:
  9526                           
  9527                           ;tune.c: 154:       cap_step++;
  9528     00F9  3001               	movlw	1
  9529     00FA  0020               	movlb	0	; select bank0
  9530     00FB  07D7               	addwf	TUNE_Run@cap_step,f
  9531     00FC                     l8088:
  9532                           
  9533                           ;tune.c: 157:       if ((cap_step >= 11) || (global.SWR > (best_row_swr + (best_row_swr 
      +                          / 20))))
  9534     00FC  300B               	movlw	11
  9535     00FD  0257               	subwf	TUNE_Run@cap_step,w
  9536     00FE  1803               	skipnc
  9537     00FF  2901               	goto	u9391
  9538     0100  2902               	goto	u9390
  9539     0101                     u9391:
  9540     0101  292A               	goto	l8092
  9541     0102                     u9390:
  9542     0102                     l8090:
  9543     0102  3014               	movlw	20
  9544     0103  00F0               	movwf	___awdiv@divisor
  9545     0104  3000               	movlw	0
  9546     0105  00F1               	movwf	___awdiv@divisor+1
  9547     0106  0021               	movlb	1	; select bank1
  9548     0107  0829               	movf	(TUNE_Run@best_row_swr+1)^(0+128),w
  9549     0108  00F3               	movwf	___awdiv@dividend+1
  9550     0109  0828               	movf	TUNE_Run@best_row_swr^(0+128),w
  9551     010A  00F2               	movwf	___awdiv@dividend
  9552     010B  3191  2122  3180   	fcall	___awdiv
  9553     010E  0021               	movlb	1	; select bank1
  9554     010F  0828               	movf	TUNE_Run@best_row_swr^(0+128),w
  9555     0110  0770               	addwf	?___awdiv,w
  9556     0111  0020               	movlb	0	; select bank0
  9557     0112  00B9               	movwf	??_TUNE_Run
  9558     0113  0021               	movlb	1	; select bank1
  9559     0114  0829               	movf	(TUNE_Run@best_row_swr+1)^(0+128),w
  9560     0115  3D71               	addwfc	?___awdiv+1,w
  9561     0116  0020               	movlb	0	; select bank0
  9562     0117  00BA               	movwf	??_TUNE_Run+1
  9563     0118  083A               	movf	??_TUNE_Run+1,w
  9564     0119  3A80               	xorlw	128
  9565     011A  00BB               	movwf	??_TUNE_Run+2
  9566     011B  0021               	movlb	1	; select bank1
  9567     011C  0840               	movf	((_global+1)^(0+128)+2),w
  9568     011D  3A80               	xorlw	128
  9569     011E  0020               	movlb	0	; select bank0
  9570     011F  023B               	subwf	??_TUNE_Run+2,w
  9571     0120  1D03               	skipz
  9572     0121  2926               	goto	u9405
  9573     0122  0021               	movlb	1	; select bank1
  9574     0123  083F               	movf	(_global^(0+128)+2),w
  9575     0124  0020               	movlb	0	; select bank0
  9576     0125  0239               	subwf	??_TUNE_Run,w
  9577     0126                     u9405:
  9578     0126  1803               	skipnc
  9579     0127  2929               	goto	u9401
  9580     0128  292A               	goto	u9400
  9581     0129                     u9401:
  9582     0129  298C               	goto	l8122
  9583     012A                     u9400:
  9584     012A                     l8092:
  9585                           
  9586                           ;tune.c: 161:       {;tune.c: 162:         cap_step = 0;
  9587     012A  0020               	movlb	0	; select bank0
  9588     012B  01D7               	clrf	TUNE_Run@cap_step
  9589     012C                     l8094:
  9590                           
  9591                           ;tune.c: 163:         ind_step++;
  9592     012C  3001               	movlw	1
  9593     012D  07D8               	addwf	TUNE_Run@ind_step,f
  9594     012E                     l8096:
  9595                           
  9596                           ;tune.c: 166:         if ((best_last_row_swr + (best_last_row_swr / 20)) < best_row_swr)
  9597     012E  3014               	movlw	20
  9598     012F  00F0               	movwf	___awdiv@divisor
  9599     0130  3000               	movlw	0
  9600     0131  00F1               	movwf	___awdiv@divisor+1
  9601     0132  0021               	movlb	1	; select bank1
  9602     0133  0827               	movf	(TUNE_Run@best_last_row_swr+1)^(0+128),w
  9603     0134  00F3               	movwf	___awdiv@dividend+1
  9604     0135  0826               	movf	TUNE_Run@best_last_row_swr^(0+128),w
  9605     0136  00F2               	movwf	___awdiv@dividend
  9606     0137  3191  2122  3180   	fcall	___awdiv
  9607     013A  0021               	movlb	1	; select bank1
  9608     013B  0826               	movf	TUNE_Run@best_last_row_swr^(0+128),w
  9609     013C  0770               	addwf	?___awdiv,w
  9610     013D  0020               	movlb	0	; select bank0
  9611     013E  00B9               	movwf	??_TUNE_Run
  9612     013F  0021               	movlb	1	; select bank1
  9613     0140  0827               	movf	(TUNE_Run@best_last_row_swr+1)^(0+128),w
  9614     0141  3D71               	addwfc	?___awdiv+1,w
  9615     0142  0020               	movlb	0	; select bank0
  9616     0143  00BA               	movwf	??_TUNE_Run+1
  9617     0144  083A               	movf	??_TUNE_Run+1,w
  9618     0145  3A80               	xorlw	128
  9619     0146  00BB               	movwf	??_TUNE_Run+2
  9620     0147  0021               	movlb	1	; select bank1
  9621     0148  0829               	movf	(TUNE_Run@best_row_swr+1)^(0+128),w
  9622     0149  3A80               	xorlw	128
  9623     014A  0020               	movlb	0	; select bank0
  9624     014B  023B               	subwf	??_TUNE_Run+2,w
  9625     014C  1D03               	skipz
  9626     014D  2952               	goto	u9415
  9627     014E  0021               	movlb	1	; select bank1
  9628     014F  0828               	movf	TUNE_Run@best_row_swr^(0+128),w
  9629     0150  0020               	movlb	0	; select bank0
  9630     0151  0239               	subwf	??_TUNE_Run,w
  9631     0152                     u9415:
  9632     0152  1803               	skipnc
  9633     0153  2955               	goto	u9411
  9634     0154  2956               	goto	u9410
  9635     0155                     u9411:
  9636     0155  296E               	goto	l8110
  9637     0156                     u9410:
  9638     0156                     l8098:
  9639                           
  9640                           ;tune.c: 167:         {;tune.c: 168:           if (global.cap_sw == 1)
  9641     0156  0021               	movlb	1	; select bank1
  9642     0157  0358               	decf	(_global^(0+128)+27),w
  9643     0158  1D03               	btfss	3,2
  9644     0159  295B               	goto	u9421
  9645     015A  295C               	goto	u9420
  9646     015B                     u9421:
  9647     015B  295F               	goto	l1860
  9648     015C                     u9420:
  9649     015C                     l8100:
  9650                           
  9651                           ;tune.c: 169:           {;tune.c: 170:             TUNE_step = 20;
  9652     015C  3014               	movlw	20
  9653     015D  00B3               	movwf	_TUNE_step^(0+128)
  9654                           
  9655                           ;tune.c: 171:             break;
  9656     015E  2B7E               	goto	l1845
  9657     015F                     l1860:	
  9658                           ;tune.c: 173:           else
  9659                           
  9660                           
  9661                           ;tune.c: 174:           {;tune.c: 175:             global.cap_sw = 1;
  9662     015F  3001               	movlw	1
  9663     0160  00D8               	movwf	(_global^(0+128)+27)
  9664     0161                     l8104:
  9665                           
  9666                           ;tune.c: 176:             cap_step = 0;
  9667     0161  0020               	movlb	0	; select bank0
  9668     0162  01D7               	clrf	TUNE_Run@cap_step
  9669                           
  9670                           ;tune.c: 177:             ind_step = 0;
  9671     0163  01D8               	clrf	TUNE_Run@ind_step
  9672     0164                     l8106:
  9673                           
  9674                           ;tune.c: 178:             best_row_swr = 999;
  9675     0164  30E7               	movlw	231
  9676     0165  0021               	movlb	1	; select bank1
  9677     0166  00A8               	movwf	TUNE_Run@best_row_swr^(0+128)
  9678     0167  3003               	movlw	3
  9679     0168  00A9               	movwf	(TUNE_Run@best_row_swr^(0+128)+1)
  9680     0169                     l8108:
  9681                           
  9682                           ;tune.c: 179:             best_last_row_swr = 999;
  9683     0169  30E7               	movlw	231
  9684     016A  00A6               	movwf	TUNE_Run@best_last_row_swr^(0+128)
  9685     016B  3003               	movlw	3
  9686     016C  00A7               	movwf	(TUNE_Run@best_last_row_swr^(0+128)+1)
  9687     016D  2973               	goto	l1862
  9688     016E                     l8110:
  9689                           
  9690                           ;tune.c: 183:         {;tune.c: 184:           best_last_row_swr = best_row_swr;
  9691     016E  0021               	movlb	1	; select bank1
  9692     016F  0829               	movf	(TUNE_Run@best_row_swr+1)^(0+128),w
  9693     0170  00A7               	movwf	(TUNE_Run@best_last_row_swr+1)^(0+128)
  9694     0171  0828               	movf	TUNE_Run@best_row_swr^(0+128),w
  9695     0172  00A6               	movwf	TUNE_Run@best_last_row_swr^(0+128)
  9696     0173                     l1862:	
  9697                           ;tune.c: 185:         }
  9698                           
  9699                           
  9700                           ;tune.c: 186:         best_row_swr = 999;
  9701     0173  30E7               	movlw	231
  9702     0174  00A8               	movwf	TUNE_Run@best_row_swr^(0+128)
  9703     0175  3003               	movlw	3
  9704     0176  00A9               	movwf	(TUNE_Run@best_row_swr^(0+128)+1)
  9705                           
  9706                           ;tune.c: 188:         if (ind_step >= 11)
  9707     0177  300B               	movlw	11
  9708     0178  0020               	movlb	0	; select bank0
  9709     0179  0258               	subwf	TUNE_Run@ind_step,w
  9710     017A  1C03               	skipc
  9711     017B  297D               	goto	u9431
  9712     017C  297E               	goto	u9430
  9713     017D                     u9431:
  9714     017D  298C               	goto	l8122
  9715     017E                     u9430:
  9716     017E                     l8112:
  9717                           
  9718                           ;tune.c: 189:         {;tune.c: 190:           ind_step = 0;
  9719     017E  01D8               	clrf	TUNE_Run@ind_step
  9720     017F                     l8114:
  9721                           
  9722                           ;tune.c: 191:           best_row_swr = 999;
  9723     017F  30E7               	movlw	231
  9724     0180  0021               	movlb	1	; select bank1
  9725     0181  00A8               	movwf	TUNE_Run@best_row_swr^(0+128)
  9726     0182  3003               	movlw	3
  9727     0183  00A9               	movwf	(TUNE_Run@best_row_swr^(0+128)+1)
  9728     0184                     l8116:
  9729                           
  9730                           ;tune.c: 192:           if (global.cap_sw == 1)
  9731     0184  0358               	decf	(_global^(0+128)+27),w
  9732     0185  1D03               	btfss	3,2
  9733     0186  2988               	goto	u9441
  9734     0187  2989               	goto	u9440
  9735     0188                     u9441:
  9736     0188  298A               	goto	l1864
  9737     0189                     u9440:
  9738     0189  295C               	goto	l8100
  9739     018A                     l1864:	
  9740                           ;tune.c: 197:           else
  9741                           
  9742                           
  9743                           ;tune.c: 198:           {;tune.c: 199:             global.cap_sw = 1;
  9744     018A  3001               	movlw	1
  9745     018B  00D8               	movwf	(_global^(0+128)+27)
  9746     018C                     l8122:
  9747                           
  9748                           ;tune.c: 204:       global.cap_relays = coarse_cap_value[cap_step];
  9749     018C  0020               	movlb	0	; select bank0
  9750     018D  0857               	movf	TUNE_Run@cap_step,w
  9751     018E  3E33               	addlw	low (_coarse_cap_value| (0+32768))
  9752     018F  0084               	movwf	4
  9753     0190  30A8               	movlw	high (_coarse_cap_value| (0+32768))
  9754     0191  1803               	skipnc
  9755     0192  3E01               	addlw	1
  9756     0193  0085               	movwf	5
  9757     0194  0800               	movf	0,w	;code access
  9758     0195  0021               	movlb	1	; select bank1
  9759     0196  00D9               	movwf	(_global^(0+128)+28)
  9760                           
  9761                           ;tune.c: 205:       global.ind_relays = coarse_ind_value[ind_step];
  9762     0197  0020               	movlb	0	; select bank0
  9763     0198  0858               	movf	TUNE_Run@ind_step,w
  9764     0199  3E28               	addlw	low (_coarse_ind_value| (0+32768))
  9765     019A  0084               	movwf	4
  9766     019B  30A8               	movlw	high (_coarse_ind_value| (0+32768))
  9767     019C  1803               	skipnc
  9768     019D  3E01               	addlw	1
  9769     019E  0085               	movwf	5
  9770     019F  0800               	movf	0,w	;code access
  9771     01A0  0021               	movlb	1	; select bank1
  9772     01A1  00DA               	movwf	(_global^(0+128)+29)
  9773     01A2                     l8124:
  9774                           
  9775                           ;tune.c: 206:       UTILI_SetRelays();
  9776     01A2  3194  2499  3180   	fcall	_UTILI_SetRelays
  9777     01A5  28A5               	goto	l8072
  9778     01A6                     l8128:
  9779                           
  9780                           ;tune.c: 211:       if (!best_swr_valid)
  9781     01A6  0831               	movf	_best_swr_valid^(0+128),w
  9782     01A7  1D03               	btfss	3,2
  9783     01A8  29AA               	goto	u9451
  9784     01A9  29AB               	goto	u9450
  9785     01AA                     u9451:
  9786     01AA  29B2               	goto	l8138
  9787     01AB                     u9450:
  9788     01AB                     l8130:
  9789                           
  9790                           ;tune.c: 212:       {;tune.c: 214:         global.cap_sw = 0;
  9791     01AB  01D8               	clrf	(_global^(0+128)+27)
  9792                           
  9793                           ;tune.c: 215:         global.cap_relays = 0;
  9794     01AC  01D9               	clrf	(_global^(0+128)+28)
  9795                           
  9796                           ;tune.c: 216:         global.ind_relays = 0;
  9797     01AD  01DA               	clrf	(_global^(0+128)+29)
  9798     01AE                     l8132:
  9799                           
  9800                           ;tune.c: 217:         UTILI_SetRelays();
  9801     01AE  3194  2499  3180   	fcall	_UTILI_SetRelays
  9802     01B1  28BB               	goto	l8076
  9803     01B2                     l8138:
  9804                           
  9805                           ;tune.c: 222:       global.cap_sw = best_cap_sw;
  9806     01B2  0830               	movf	TUNE_Run@best_cap_sw^(0+128),w
  9807     01B3  00D8               	movwf	(_global^(0+128)+27)
  9808     01B4                     l8140:
  9809                           
  9810                           ;tune.c: 223:       global.cap_relays = coarse_cap_value[best_cap_step];
  9811     01B4  0020               	movlb	0	; select bank0
  9812     01B5  0856               	movf	TUNE_Run@best_cap_step,w
  9813     01B6  3E33               	addlw	low (_coarse_cap_value| (0+32768))
  9814     01B7  0084               	movwf	4
  9815     01B8  30A8               	movlw	high (_coarse_cap_value| (0+32768))
  9816     01B9  1803               	skipnc
  9817     01BA  3E01               	addlw	1
  9818     01BB  0085               	movwf	5
  9819     01BC  0800               	movf	0,w	;code access
  9820     01BD  0021               	movlb	1	; select bank1
  9821     01BE  00D9               	movwf	(_global^(0+128)+28)
  9822     01BF                     l8142:
  9823                           
  9824                           ;tune.c: 224:       global.ind_relays = coarse_ind_value[best_ind_step];
  9825     01BF  0020               	movlb	0	; select bank0
  9826     01C0  0855               	movf	TUNE_Run@best_ind_step,w
  9827     01C1  3E28               	addlw	low (_coarse_ind_value| (0+32768))
  9828     01C2  0084               	movwf	4
  9829     01C3  30A8               	movlw	high (_coarse_ind_value| (0+32768))
  9830     01C4  1803               	skipnc
  9831     01C5  3E01               	addlw	1
  9832     01C6  0085               	movwf	5
  9833     01C7  0800               	movf	0,w	;code access
  9834     01C8  0021               	movlb	1	; select bank1
  9835     01C9  00DA               	movwf	(_global^(0+128)+29)
  9836     01CA                     l8144:
  9837                           
  9838                           ;tune.c: 226:       fine_cap[fine_mid] = coarse_cap_value[best_cap_step];
  9839     01CA  0020               	movlb	0	; select bank0
  9840     01CB  0856               	movf	TUNE_Run@best_cap_step,w
  9841     01CC  3E33               	addlw	low (_coarse_cap_value| (0+32768))
  9842     01CD  0084               	movwf	4
  9843     01CE  30A8               	movlw	high (_coarse_cap_value| (0+32768))
  9844     01CF  1803               	skipnc
  9845     01D0  3E01               	addlw	1
  9846     01D1  0085               	movwf	5
  9847     01D2  0800               	movf	0,w	;code access
  9848     01D3  0021               	movlb	1	; select bank1
  9849     01D4  00A4               	movwf	(TUNE_Run@fine_cap^(0+128)+1)
  9850     01D5                     l8146:
  9851                           
  9852                           ;tune.c: 227:       fine_ind[fine_mid] = coarse_ind_value[best_ind_step];
  9853     01D5  0020               	movlb	0	; select bank0
  9854     01D6  0855               	movf	TUNE_Run@best_ind_step,w
  9855     01D7  3E28               	addlw	low (_coarse_ind_value| (0+32768))
  9856     01D8  0084               	movwf	4
  9857     01D9  30A8               	movlw	high (_coarse_ind_value| (0+32768))
  9858     01DA  1803               	skipnc
  9859     01DB  3E01               	addlw	1
  9860     01DC  0085               	movwf	5
  9861     01DD  0800               	movf	0,w	;code access
  9862     01DE  0021               	movlb	1	; select bank1
  9863     01DF  00A1               	movwf	(TUNE_Run@fine_ind^(0+128)+1)
  9864     01E0                     l8148:
  9865                           
  9866                           ;tune.c: 229:       fine_cap_diff_low = (best_cap_step > 0) ? (coarse_cap_value[best_cap
      +                          _step] - coarse_cap_value[best_cap_step - 1]) / 2 : 0;
  9867     01E0  0020               	movlb	0	; select bank0
  9868     01E1  0856               	movf	TUNE_Run@best_cap_step,w
  9869     01E2  1D03               	btfss	3,2
  9870     01E3  29E5               	goto	u9461
  9871     01E4  29E6               	goto	u9460
  9872     01E5                     u9461:
  9873     01E5  29E9               	goto	l8152
  9874     01E6                     u9460:
  9875     01E6                     l8150:
  9876     01E6  01BC               	clrf	_TUNE_Run$2197
  9877     01E7  01BD               	clrf	_TUNE_Run$2197+1
  9878     01E8  2A0B               	goto	l8154
  9879     01E9                     l8152:
  9880     01E9  3002               	movlw	2
  9881     01EA  00F0               	movwf	___awdiv@divisor
  9882     01EB  3000               	movlw	0
  9883     01EC  00F1               	movwf	___awdiv@divisor+1
  9884     01ED  0856               	movf	TUNE_Run@best_cap_step,w
  9885     01EE  3E33               	addlw	low (_coarse_cap_value| (0+32768))
  9886     01EF  0084               	movwf	4
  9887     01F0  30A8               	movlw	high (_coarse_cap_value| (0+32768))
  9888     01F1  1803               	skipnc
  9889     01F2  3E01               	addlw	1
  9890     01F3  0085               	movwf	5
  9891     01F4  0800               	movf	0,w	;code access
  9892     01F5  00B9               	movwf	??_TUNE_Run
  9893     01F6  0856               	movf	TUNE_Run@best_cap_step,w
  9894     01F7  3E32               	addlw	low ((_coarse_cap_value+65535)| (0+32768))
  9895     01F8  0084               	movwf	4
  9896     01F9  30A8               	movlw	high ((_coarse_cap_value+65535)| (0+32768))
  9897     01FA  1803               	skipnc
  9898     01FB  3E01               	addlw	1
  9899     01FC  0085               	movwf	5
  9900     01FD  0800               	movf	0,w	;code access
  9901     01FE  0239               	subwf	??_TUNE_Run,w
  9902     01FF  00F2               	movwf	___awdiv@dividend
  9903     0200  01F3               	clrf	___awdiv@dividend+1
  9904     0201  1C03               	skipc
  9905     0202  03F3               	decf	___awdiv@dividend+1,f
  9906     0203  3191  2122  3180   	fcall	___awdiv
  9907     0206  0871               	movf	?___awdiv+1,w
  9908     0207  0020               	movlb	0	; select bank0
  9909     0208  00BD               	movwf	_TUNE_Run$2197+1
  9910     0209  0870               	movf	?___awdiv,w
  9911     020A  00BC               	movwf	_TUNE_Run$2197
  9912     020B                     l8154:
  9913     020B  083C               	movf	_TUNE_Run$2197,w
  9914     020C  0021               	movlb	1	; select bank1
  9915     020D  00AF               	movwf	TUNE_Run@fine_cap_diff_low^(0+128)
  9916     020E                     l8156:
  9917                           
  9918                           ;tune.c: 230:       fine_cap_diff_high = (best_cap_step < (11 - 1)) ? (coarse_cap_value[
      +                          best_cap_step + 1] - coarse_cap_value[best_cap_step]) / 2 : 0;
  9919     020E  300A               	movlw	10
  9920     020F  0020               	movlb	0	; select bank0
  9921     0210  0256               	subwf	TUNE_Run@best_cap_step,w
  9922     0211  1C03               	skipc
  9923     0212  2A14               	goto	u9471
  9924     0213  2A15               	goto	u9470
  9925     0214                     u9471:
  9926     0214  2A18               	goto	l8160
  9927     0215                     u9470:
  9928     0215                     l8158:
  9929     0215  01BE               	clrf	_TUNE_Run$2198
  9930     0216  01BF               	clrf	_TUNE_Run$2198+1
  9931     0217  2A3A               	goto	l8162
  9932     0218                     l8160:
  9933     0218  3002               	movlw	2
  9934     0219  00F0               	movwf	___awdiv@divisor
  9935     021A  3000               	movlw	0
  9936     021B  00F1               	movwf	___awdiv@divisor+1
  9937     021C  0856               	movf	TUNE_Run@best_cap_step,w
  9938     021D  3E34               	addlw	low ((_coarse_cap_value+1)| (0+32768))
  9939     021E  0084               	movwf	4
  9940     021F  30A8               	movlw	high ((_coarse_cap_value+1)| (0+32768))
  9941     0220  1803               	skipnc
  9942     0221  3E01               	addlw	1
  9943     0222  0085               	movwf	5
  9944     0223  0800               	movf	0,w	;code access
  9945     0224  00B9               	movwf	??_TUNE_Run
  9946     0225  0856               	movf	TUNE_Run@best_cap_step,w
  9947     0226  3E33               	addlw	low (_coarse_cap_value| (0+32768))
  9948     0227  0084               	movwf	4
  9949     0228  30A8               	movlw	high (_coarse_cap_value| (0+32768))
  9950     0229  1803               	skipnc
  9951     022A  3E01               	addlw	1
  9952     022B  0085               	movwf	5
  9953     022C  0800               	movf	0,w	;code access
  9954     022D  0239               	subwf	??_TUNE_Run,w
  9955     022E  00F2               	movwf	___awdiv@dividend
  9956     022F  01F3               	clrf	___awdiv@dividend+1
  9957     0230  1C03               	skipc
  9958     0231  03F3               	decf	___awdiv@dividend+1,f
  9959     0232  3191  2122  3180   	fcall	___awdiv
  9960     0235  0871               	movf	?___awdiv+1,w
  9961     0236  0020               	movlb	0	; select bank0
  9962     0237  00BF               	movwf	_TUNE_Run$2198+1
  9963     0238  0870               	movf	?___awdiv,w
  9964     0239  00BE               	movwf	_TUNE_Run$2198
  9965     023A                     l8162:
  9966     023A  083E               	movf	_TUNE_Run$2198,w
  9967     023B  0021               	movlb	1	; select bank1
  9968     023C  00AE               	movwf	TUNE_Run@fine_cap_diff_high^(0+128)
  9969     023D                     l8164:
  9970                           
  9971                           ;tune.c: 231:       fine_ind_diff_low = (best_ind_step > 0) ? (coarse_ind_value[best_ind
      +                          _step] - coarse_ind_value[best_ind_step - 1]) / 2 : 0;
  9972     023D  0020               	movlb	0	; select bank0
  9973     023E  0855               	movf	TUNE_Run@best_ind_step,w
  9974     023F  1D03               	btfss	3,2
  9975     0240  2A42               	goto	u9481
  9976     0241  2A43               	goto	u9480
  9977     0242                     u9481:
  9978     0242  2A46               	goto	l8168
  9979     0243                     u9480:
  9980     0243                     l8166:
  9981     0243  01C0               	clrf	_TUNE_Run$2199
  9982     0244  01C1               	clrf	_TUNE_Run$2199+1
  9983     0245  2A68               	goto	l8170
  9984     0246                     l8168:
  9985     0246  3002               	movlw	2
  9986     0247  00F0               	movwf	___awdiv@divisor
  9987     0248  3000               	movlw	0
  9988     0249  00F1               	movwf	___awdiv@divisor+1
  9989     024A  0855               	movf	TUNE_Run@best_ind_step,w
  9990     024B  3E28               	addlw	low (_coarse_ind_value| (0+32768))
  9991     024C  0084               	movwf	4
  9992     024D  30A8               	movlw	high (_coarse_ind_value| (0+32768))
  9993     024E  1803               	skipnc
  9994     024F  3E01               	addlw	1
  9995     0250  0085               	movwf	5
  9996     0251  0800               	movf	0,w	;code access
  9997     0252  00B9               	movwf	??_TUNE_Run
  9998     0253  0855               	movf	TUNE_Run@best_ind_step,w
  9999     0254  3E27               	addlw	low ((_coarse_ind_value+65535)| (0+32768))
 10000     0255  0084               	movwf	4
 10001     0256  30A8               	movlw	high ((_coarse_ind_value+65535)| (0+32768))
 10002     0257  1803               	skipnc
 10003     0258  3E01               	addlw	1
 10004     0259  0085               	movwf	5
 10005     025A  0800               	movf	0,w	;code access
 10006     025B  0239               	subwf	??_TUNE_Run,w
 10007     025C  00F2               	movwf	___awdiv@dividend
 10008     025D  01F3               	clrf	___awdiv@dividend+1
 10009     025E  1C03               	skipc
 10010     025F  03F3               	decf	___awdiv@dividend+1,f
 10011     0260  3191  2122  3180   	fcall	___awdiv
 10012     0263  0871               	movf	?___awdiv+1,w
 10013     0264  0020               	movlb	0	; select bank0
 10014     0265  00C1               	movwf	_TUNE_Run$2199+1
 10015     0266  0870               	movf	?___awdiv,w
 10016     0267  00C0               	movwf	_TUNE_Run$2199
 10017     0268                     l8170:
 10018     0268  0840               	movf	_TUNE_Run$2199,w
 10019     0269  0021               	movlb	1	; select bank1
 10020     026A  00AD               	movwf	TUNE_Run@fine_ind_diff_low^(0+128)
 10021     026B                     l8172:
 10022                           
 10023                           ;tune.c: 232:       fine_ind_diff_high = (best_ind_step < (11 - 1)) ? (coarse_ind_value[
      +                          best_ind_step + 1] - coarse_ind_value[best_ind_step]) / 2 : 0;
 10024     026B  300A               	movlw	10
 10025     026C  0020               	movlb	0	; select bank0
 10026     026D  0255               	subwf	TUNE_Run@best_ind_step,w
 10027     026E  1C03               	skipc
 10028     026F  2A71               	goto	u9491
 10029     0270  2A72               	goto	u9490
 10030     0271                     u9491:
 10031     0271  2A75               	goto	l8176
 10032     0272                     u9490:
 10033     0272                     l8174:
 10034     0272  01C2               	clrf	_TUNE_Run$2200
 10035     0273  01C3               	clrf	_TUNE_Run$2200+1
 10036     0274  2A97               	goto	l8178
 10037     0275                     l8176:
 10038     0275  3002               	movlw	2
 10039     0276  00F0               	movwf	___awdiv@divisor
 10040     0277  3000               	movlw	0
 10041     0278  00F1               	movwf	___awdiv@divisor+1
 10042     0279  0855               	movf	TUNE_Run@best_ind_step,w
 10043     027A  3E29               	addlw	low ((_coarse_ind_value+1)| (0+32768))
 10044     027B  0084               	movwf	4
 10045     027C  30A8               	movlw	high ((_coarse_ind_value+1)| (0+32768))
 10046     027D  1803               	skipnc
 10047     027E  3E01               	addlw	1
 10048     027F  0085               	movwf	5
 10049     0280  0800               	movf	0,w	;code access
 10050     0281  00B9               	movwf	??_TUNE_Run
 10051     0282  0855               	movf	TUNE_Run@best_ind_step,w
 10052     0283  3E28               	addlw	low (_coarse_ind_value| (0+32768))
 10053     0284  0084               	movwf	4
 10054     0285  30A8               	movlw	high (_coarse_ind_value| (0+32768))
 10055     0286  1803               	skipnc
 10056     0287  3E01               	addlw	1
 10057     0288  0085               	movwf	5
 10058     0289  0800               	movf	0,w	;code access
 10059     028A  0239               	subwf	??_TUNE_Run,w
 10060     028B  00F2               	movwf	___awdiv@dividend
 10061     028C  01F3               	clrf	___awdiv@dividend+1
 10062     028D  1C03               	skipc
 10063     028E  03F3               	decf	___awdiv@dividend+1,f
 10064     028F  3191  2122  3180   	fcall	___awdiv
 10065     0292  0871               	movf	?___awdiv+1,w
 10066     0293  0020               	movlb	0	; select bank0
 10067     0294  00C3               	movwf	_TUNE_Run$2200+1
 10068     0295  0870               	movf	?___awdiv,w
 10069     0296  00C2               	movwf	_TUNE_Run$2200
 10070     0297                     l8178:
 10071     0297  0842               	movf	_TUNE_Run$2200,w
 10072     0298  0021               	movlb	1	; select bank1
 10073     0299  00AC               	movwf	TUNE_Run@fine_ind_diff_high^(0+128)
 10074     029A                     l8180:
 10075                           
 10076                           ;tune.c: 234:       fine_cap[fine_low] = fine_cap[fine_mid] - fine_cap_diff_low;
 10077     029A  082F               	movf	TUNE_Run@fine_cap_diff_low^(0+128),w
 10078     029B  0224               	subwf	(TUNE_Run@fine_cap^(0+128)+1),w
 10079     029C  00A3               	movwf	TUNE_Run@fine_cap^(0+128)
 10080     029D                     l8182:
 10081                           
 10082                           ;tune.c: 235:       fine_cap[fine_high] = fine_cap[fine_mid] + fine_cap_diff_high;
 10083     029D  0824               	movf	(TUNE_Run@fine_cap^(0+128)+1),w
 10084     029E  072E               	addwf	TUNE_Run@fine_cap_diff_high^(0+128),w
 10085     029F  00A5               	movwf	(TUNE_Run@fine_cap^(0+128)+2)
 10086     02A0                     l8184:
 10087                           
 10088                           ;tune.c: 236:       fine_ind[fine_low] = fine_ind[fine_mid] - fine_ind_diff_low;
 10089     02A0  082D               	movf	TUNE_Run@fine_ind_diff_low^(0+128),w
 10090     02A1  0221               	subwf	(TUNE_Run@fine_ind^(0+128)+1),w
 10091     02A2  00A0               	movwf	TUNE_Run@fine_ind^(0+128)
 10092     02A3                     l8186:
 10093                           
 10094                           ;tune.c: 237:       fine_ind[fine_high] = fine_ind[fine_mid] + fine_ind_diff_high;
 10095     02A3  0821               	movf	(TUNE_Run@fine_ind^(0+128)+1),w
 10096     02A4  072C               	addwf	TUNE_Run@fine_ind_diff_high^(0+128),w
 10097     02A5  00A2               	movwf	(TUNE_Run@fine_ind^(0+128)+2)
 10098     02A6                     l8188:
 10099                           
 10100                           ;tune.c: 239:       best_swr = 999;
 10101     02A6  30E7               	movlw	231
 10102     02A7  00AA               	movwf	TUNE_Run@best_swr^(0+128)
 10103     02A8  3003               	movlw	3
 10104     02A9  00AB               	movwf	(TUNE_Run@best_swr^(0+128)+1)
 10105     02AA                     l8190:
 10106                           
 10107                           ;tune.c: 241:       cap_step = fine_mid;
 10108     02AA  3001               	movlw	1
 10109     02AB  0020               	movlb	0	; select bank0
 10110     02AC  00D7               	movwf	TUNE_Run@cap_step
 10111     02AD                     l8192:
 10112                           
 10113                           ;tune.c: 242:       ind_step = fine_mid;
 10114     02AD  3001               	movlw	1
 10115     02AE  00D8               	movwf	TUNE_Run@ind_step
 10116     02AF                     l8194:
 10117                           
 10118                           ;tune.c: 244:       global.cap_relays = fine_cap[cap_step];
 10119     02AF  0021               	movlb	1	; select bank1
 10120     02B0  0824               	movf	(TUNE_Run@fine_cap^(0+128)+1),w
 10121     02B1  00D9               	movwf	(_global^(0+128)+28)
 10122     02B2                     l8196:
 10123                           
 10124                           ;tune.c: 245:       global.ind_relays = fine_ind[ind_step];
 10125     02B2  0821               	movf	(TUNE_Run@fine_ind^(0+128)+1),w
 10126     02B3  00DA               	movwf	(_global^(0+128)+29)
 10127     02B4                     l8198:
 10128                           
 10129                           ;tune.c: 246:       UTILI_SetRelays();
 10130     02B4  3194  2499  3180   	fcall	_UTILI_SetRelays
 10131     02B7                     l8200:
 10132                           
 10133                           ;tune.c: 247:       TUNE_delay = 2;
 10134     02B7  3002               	movlw	2
 10135     02B8  0021               	movlb	1	; select bank1
 10136     02B9  00B2               	movwf	_TUNE_delay^(0+128)
 10137     02BA                     l8202:
 10138                           
 10139                           ;tune.c: 248:       TUNE_step = 30;
 10140     02BA  301E               	movlw	30
 10141     02BB  00B3               	movwf	_TUNE_step^(0+128)
 10142                           
 10143                           ;tune.c: 249:       break;
 10144     02BC  2B7E               	goto	l1845
 10145     02BD                     l8204:
 10146                           
 10147                           ;tune.c: 252:       if (global.SWR <= global.tune_stop_swr)
 10148     02BD  0842               	movf	((_global+1)^(0+128)+4),w
 10149     02BE  3A80               	xorlw	128
 10150     02BF  0020               	movlb	0	; select bank0
 10151     02C0  00B9               	movwf	??_TUNE_Run
 10152     02C1  0021               	movlb	1	; select bank1
 10153     02C2  0840               	movf	((_global+1)^(0+128)+2),w
 10154     02C3  3A80               	xorlw	128
 10155     02C4  0020               	movlb	0	; select bank0
 10156     02C5  0239               	subwf	??_TUNE_Run,w
 10157     02C6  1D03               	skipz
 10158     02C7  2ACB               	goto	u9505
 10159     02C8  0021               	movlb	1	; select bank1
 10160     02C9  083F               	movf	(_global^(0+128)+2),w
 10161     02CA  0241               	subwf	(_global^(0+128)+4),w
 10162     02CB                     u9505:
 10163     02CB  1C03               	skipc
 10164     02CC  2ACE               	goto	u9501
 10165     02CD  2ACF               	goto	u9500
 10166     02CE                     u9501:
 10167     02CE  2AD0               	goto	l8208
 10168     02CF                     u9500:
 10169     02CF  28BB               	goto	l8076
 10170     02D0                     l8208:
 10171                           
 10172                           ;tune.c: 258:       if (global.SWR < best_swr)
 10173     02D0  0021               	movlb	1	; select bank1
 10174     02D1  0840               	movf	((_global+1)^(0+128)+2),w
 10175     02D2  3A80               	xorlw	128
 10176     02D3  0020               	movlb	0	; select bank0
 10177     02D4  00B9               	movwf	??_TUNE_Run
 10178     02D5  0021               	movlb	1	; select bank1
 10179     02D6  082B               	movf	(TUNE_Run@best_swr+1)^(0+128),w
 10180     02D7  3A80               	xorlw	128
 10181     02D8  0020               	movlb	0	; select bank0
 10182     02D9  0239               	subwf	??_TUNE_Run,w
 10183     02DA  1D03               	skipz
 10184     02DB  2ADF               	goto	u9515
 10185     02DC  0021               	movlb	1	; select bank1
 10186     02DD  082A               	movf	TUNE_Run@best_swr^(0+128),w
 10187     02DE  023F               	subwf	(_global^(0+128)+2),w
 10188     02DF                     u9515:
 10189     02DF  1803               	skipnc
 10190     02E0  2AE2               	goto	u9511
 10191     02E1  2AE3               	goto	u9510
 10192     02E2                     u9511:
 10193     02E2  2AED               	goto	l8212
 10194     02E3                     u9510:
 10195     02E3                     l8210:
 10196                           
 10197                           ;tune.c: 259:       {;tune.c: 260:         best_swr = global.SWR;
 10198     02E3  0021               	movlb	1	; select bank1
 10199     02E4  0840               	movf	((_global+1)^(0+128)+2),w
 10200     02E5  00AB               	movwf	(TUNE_Run@best_swr+1)^(0+128)
 10201     02E6  083F               	movf	(_global^(0+128)+2),w
 10202     02E7  00AA               	movwf	TUNE_Run@best_swr^(0+128)
 10203                           
 10204                           ;tune.c: 261:         best_cap_step = cap_step;
 10205     02E8  0020               	movlb	0	; select bank0
 10206     02E9  0857               	movf	TUNE_Run@cap_step,w
 10207     02EA  00D6               	movwf	TUNE_Run@best_cap_step
 10208                           
 10209                           ;tune.c: 262:         best_ind_step = ind_step;
 10210     02EB  0858               	movf	TUNE_Run@ind_step,w
 10211     02EC  00D5               	movwf	TUNE_Run@best_ind_step
 10212     02ED                     l8212:
 10213                           
 10214                           ;tune.c: 266:       {;tune.c: 267:         if (cap_step == fine_mid)
 10215     02ED  0020               	movlb	0	; select bank0
 10216     02EE  0357               	decf	TUNE_Run@cap_step,w
 10217     02EF  1D03               	btfss	3,2
 10218     02F0  2AF2               	goto	u9521
 10219     02F1  2AF3               	goto	u9520
 10220     02F2                     u9521:
 10221     02F2  2B07               	goto	l8224
 10222     02F3                     u9520:
 10223     02F3                     l8214:
 10224                           
 10225                           ;tune.c: 268:         {;tune.c: 269:           if (fine_cap[fine_low] != fine_cap[fine_m
      +                          id])
 10226     02F3  0021               	movlb	1	; select bank1
 10227     02F4  0824               	movf	(TUNE_Run@fine_cap^(0+128)+1),w
 10228     02F5  0623               	xorwf	TUNE_Run@fine_cap^(0+128),w
 10229     02F6  1903               	skipnz
 10230     02F7  2AF9               	goto	u9531
 10231     02F8  2AFA               	goto	u9530
 10232     02F9                     u9531:
 10233     02F9  2AFD               	goto	l8220
 10234     02FA                     u9530:
 10235     02FA                     l8216:
 10236                           
 10237                           ;tune.c: 270:           {;tune.c: 271:             cap_step = fine_low;
 10238     02FA  0020               	movlb	0	; select bank0
 10239     02FB  01D7               	clrf	TUNE_Run@cap_step
 10240                           
 10241                           ;tune.c: 272:             break;
 10242     02FC  2B42               	goto	l8252
 10243     02FD                     l8220:
 10244     02FD  0825               	movf	(TUNE_Run@fine_cap^(0+128)+2),w
 10245     02FE  0624               	xorwf	(TUNE_Run@fine_cap^(0+128)+1),w
 10246     02FF  1903               	skipnz
 10247     0300  2B02               	goto	u9541
 10248     0301  2B03               	goto	u9540
 10249     0302                     u9541:
 10250     0302  2B07               	goto	l8224
 10251     0303                     u9540:
 10252     0303                     l8222:
 10253                           
 10254                           ;tune.c: 275:           {;tune.c: 276:             cap_step = fine_high;
 10255     0303  3002               	movlw	2
 10256     0304  0020               	movlb	0	; select bank0
 10257     0305  00D7               	movwf	TUNE_Run@cap_step
 10258                           
 10259                           ;tune.c: 277:             break;
 10260     0306  2B42               	goto	l8252
 10261     0307                     l8224:
 10262                           
 10263                           ;tune.c: 281:         if (cap_step == fine_low && fine_cap[fine_high] != fine_cap[fine_m
      +                          id])
 10264     0307  0020               	movlb	0	; select bank0
 10265     0308  0857               	movf	TUNE_Run@cap_step,w
 10266     0309  1D03               	btfss	3,2
 10267     030A  2B0C               	goto	u9551
 10268     030B  2B0D               	goto	u9550
 10269     030C                     u9551:
 10270     030C  2B15               	goto	l1893
 10271     030D                     u9550:
 10272     030D                     l8226:
 10273     030D  0021               	movlb	1	; select bank1
 10274     030E  0825               	movf	(TUNE_Run@fine_cap^(0+128)+2),w
 10275     030F  0624               	xorwf	(TUNE_Run@fine_cap^(0+128)+1),w
 10276     0310  1903               	skipnz
 10277     0311  2B13               	goto	u9561
 10278     0312  2B14               	goto	u9560
 10279     0313                     u9561:
 10280     0313  2B15               	goto	l1893
 10281     0314                     u9560:
 10282     0314  2B03               	goto	l8222
 10283     0315                     l1893:	
 10284                           ;tune.c: 285:         }
 10285                           
 10286                           
 10287                           ;tune.c: 287:         cap_step = fine_mid;
 10288     0315  3001               	movlw	1
 10289     0316  0020               	movlb	0	; select bank0
 10290     0317  00D7               	movwf	TUNE_Run@cap_step
 10291     0318                     l8230:
 10292                           
 10293                           ;tune.c: 289:         if (ind_step == fine_mid)
 10294     0318  0358               	decf	TUNE_Run@ind_step,w
 10295     0319  1D03               	btfss	3,2
 10296     031A  2B1C               	goto	u9571
 10297     031B  2B1D               	goto	u9570
 10298     031C                     u9571:
 10299     031C  2B31               	goto	l8242
 10300     031D                     u9570:
 10301     031D                     l8232:
 10302                           
 10303                           ;tune.c: 290:         {;tune.c: 291:           if (fine_ind[fine_low] != fine_ind[fine_m
      +                          id])
 10304     031D  0021               	movlb	1	; select bank1
 10305     031E  0821               	movf	(TUNE_Run@fine_ind^(0+128)+1),w
 10306     031F  0620               	xorwf	TUNE_Run@fine_ind^(0+128),w
 10307     0320  1903               	skipnz
 10308     0321  2B23               	goto	u9581
 10309     0322  2B24               	goto	u9580
 10310     0323                     u9581:
 10311     0323  2B27               	goto	l8238
 10312     0324                     u9580:
 10313     0324                     l8234:
 10314                           
 10315                           ;tune.c: 292:           {;tune.c: 293:             ind_step = fine_low;
 10316     0324  0020               	movlb	0	; select bank0
 10317     0325  01D8               	clrf	TUNE_Run@ind_step
 10318                           
 10319                           ;tune.c: 294:             break;
 10320     0326  2B42               	goto	l8252
 10321     0327                     l8238:
 10322     0327  0822               	movf	(TUNE_Run@fine_ind^(0+128)+2),w
 10323     0328  0621               	xorwf	(TUNE_Run@fine_ind^(0+128)+1),w
 10324     0329  1903               	skipnz
 10325     032A  2B2C               	goto	u9591
 10326     032B  2B2D               	goto	u9590
 10327     032C                     u9591:
 10328     032C  2B31               	goto	l8242
 10329     032D                     u9590:
 10330     032D                     l8240:
 10331                           
 10332                           ;tune.c: 297:           {;tune.c: 298:             ind_step = fine_high;
 10333     032D  3002               	movlw	2
 10334     032E  0020               	movlb	0	; select bank0
 10335     032F  00D8               	movwf	TUNE_Run@ind_step
 10336                           
 10337                           ;tune.c: 299:             break;
 10338     0330  2B42               	goto	l8252
 10339     0331                     l8242:
 10340                           
 10341                           ;tune.c: 303:         if (ind_step == fine_low && fine_ind[fine_high] != fine_ind[fine_m
      +                          id])
 10342     0331  0020               	movlb	0	; select bank0
 10343     0332  0858               	movf	TUNE_Run@ind_step,w
 10344     0333  1D03               	btfss	3,2
 10345     0334  2B36               	goto	u9601
 10346     0335  2B37               	goto	u9600
 10347     0336                     u9601:
 10348     0336  2B3F               	goto	l1898
 10349     0337                     u9600:
 10350     0337                     l8244:
 10351     0337  0021               	movlb	1	; select bank1
 10352     0338  0822               	movf	(TUNE_Run@fine_ind^(0+128)+2),w
 10353     0339  0621               	xorwf	(TUNE_Run@fine_ind^(0+128)+1),w
 10354     033A  1903               	skipnz
 10355     033B  2B3D               	goto	u9611
 10356     033C  2B3E               	goto	u9610
 10357     033D                     u9611:
 10358     033D  2B3F               	goto	l1898
 10359     033E                     u9610:
 10360     033E  2B2D               	goto	l8240
 10361     033F                     l1898:	
 10362                           ;tune.c: 307:         }
 10363                           
 10364                           
 10365                           ;tune.c: 309:         ind_step = fine_mid;
 10366     033F  3001               	movlw	1
 10367     0340  0020               	movlb	0	; select bank0
 10368     0341  00D8               	movwf	TUNE_Run@ind_step
 10369     0342                     l8248:
 10370     0342                     l8250:	
 10371                           ;tune.c: 311:       } while ((cap_step != fine_mid) || (ind_step != fine_mid));
 10372                           
 10373     0342                     l8252:
 10374                           
 10375                           ;tune.c: 313:       if ((cap_step == fine_mid) && (ind_step == fine_mid))
 10376     0342  0357               	decf	TUNE_Run@cap_step,w
 10377     0343  1D03               	btfss	3,2
 10378     0344  2B46               	goto	u9621
 10379     0345  2B47               	goto	u9620
 10380     0346                     u9621:
 10381     0346  2B5C               	goto	l8262
 10382     0347                     u9620:
 10383     0347                     l8254:
 10384     0347  0358               	decf	TUNE_Run@ind_step,w
 10385     0348  1D03               	btfss	3,2
 10386     0349  2B4B               	goto	u9631
 10387     034A  2B4C               	goto	u9630
 10388     034B                     u9631:
 10389     034B  2B5C               	goto	l8262
 10390     034C                     u9630:
 10391     034C                     l8256:
 10392                           
 10393                           ;tune.c: 314:       {;tune.c: 315:         global.cap_relays = fine_cap[best_cap_step];
 10394     034C  0856               	movf	TUNE_Run@best_cap_step,w
 10395     034D  3EA3               	addlw	(low (TUNE_Run@fine_cap| 0))& (0+255)
 10396     034E  0086               	movwf	6
 10397     034F  0187               	clrf	7
 10398     0350  0801               	movf	1,w
 10399     0351  0021               	movlb	1	; select bank1
 10400     0352  00D9               	movwf	(_global^(0+128)+28)
 10401                           
 10402                           ;tune.c: 316:         global.ind_relays = fine_ind[best_ind_step];
 10403     0353  0020               	movlb	0	; select bank0
 10404     0354  0855               	movf	TUNE_Run@best_ind_step,w
 10405     0355  3EA0               	addlw	(low (TUNE_Run@fine_ind| 0))& (0+255)
 10406     0356  0086               	movwf	6
 10407     0357  0187               	clrf	7
 10408     0358  0801               	movf	1,w
 10409     0359  0021               	movlb	1	; select bank1
 10410     035A  00DA               	movwf	(_global^(0+128)+29)
 10411     035B  29AE               	goto	l8132
 10412     035C                     l8262:
 10413                           
 10414                           ;tune.c: 322:       global.cap_relays = fine_cap[cap_step];
 10415     035C  0857               	movf	TUNE_Run@cap_step,w
 10416     035D  3EA3               	addlw	(low (TUNE_Run@fine_cap| 0))& (0+255)
 10417     035E  0086               	movwf	6
 10418     035F  0187               	clrf	7
 10419     0360  0801               	movf	1,w
 10420     0361  0021               	movlb	1	; select bank1
 10421     0362  00D9               	movwf	(_global^(0+128)+28)
 10422                           
 10423                           ;tune.c: 323:       global.ind_relays = fine_ind[ind_step];
 10424     0363  0020               	movlb	0	; select bank0
 10425     0364  0858               	movf	TUNE_Run@ind_step,w
 10426     0365  3EA0               	addlw	(low (TUNE_Run@fine_ind| 0))& (0+255)
 10427     0366  0086               	movwf	6
 10428     0367  0187               	clrf	7
 10429     0368  0801               	movf	1,w
 10430     0369  0021               	movlb	1	; select bank1
 10431     036A  00DA               	movwf	(_global^(0+128)+29)
 10432     036B  29A2               	goto	l8124
 10433     036C                     l1900:	
 10434                           ;tune.c: 328:     default:
 10435                           
 10436                           
 10437                           ;tune.c: 329:       TUNE_state = TUNE_BREAK;
 10438     036C  3003               	movlw	3
 10439     036D  00B5               	movwf	_TUNE_state^(0+128)
 10440                           
 10441                           ;tune.c: 330:       break;
 10442     036E  2B7E               	goto	l1845
 10443     036F                     l8270:
 10444     036F  0021               	movlb	1	; select bank1
 10445     0370  0833               	movf	_TUNE_step^(0+128),w
 10446                           
 10447                           ; Switch size 1, requested type "simple"
 10448                           ; Number of cases is 4, Range of values is 0 to 30
 10449                           ; switch strategies available:
 10450                           ; Name         Instructions Cycles
 10451                           ; simple_byte           13     7 (average)
 10452                           ; direct_byte           68     6 (fixed)
 10453                           ; jumptable            260     6 (fixed)
 10454                           ;	Chosen strategy is simple_byte
 10455     0371  3A00               	xorlw	0	; case 0
 10456     0372  1903               	skipnz
 10457     0373  2880               	goto	l8060
 10458     0374  3A0A               	xorlw	10	; case 10
 10459     0375  1903               	skipnz
 10460     0376  28A9               	goto	l8074
 10461     0377  3A1E               	xorlw	30	; case 20
 10462     0378  1903               	skipnz
 10463     0379  29A6               	goto	l8128
 10464     037A  3A0A               	xorlw	10	; case 30
 10465     037B  1903               	skipnz
 10466     037C  2ABD               	goto	l8204
 10467     037D  2B6C               	goto	l1900
 10468     037E                     l1845:
 10469     037E  0008               	return
 10470     037F                     __end_of_TUNE_Run:
 10471                           
 10472                           	psect	text15
 10473     196B                     __ptext15:	
 10474 ;; *************** function _MENU_Tune_Update *****************
 10475 ;; Defined at:
 10476 ;;		line 384 in file "menu.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;		None
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;  state           1   12[COMMON] unsigned char 
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  1    wreg      void 
 10483 ;; Registers used:
 10484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10493 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10494 ;;Total ram usage:        1 bytes
 10495 ;; Hardware stack levels used: 1
 10496 ;; Hardware stack levels required when called: 2
 10497 ;; This function calls:
 10498 ;;		_DISP_Str
 10499 ;; This function is called by:
 10500 ;;		_MENU_Tune_Run
 10501 ;; This function uses a non-reentrant model
 10502 ;;
 10503                           
 10504     196B                     _MENU_Tune_Update:	
 10505                           ;psect for function _MENU_Tune_Update
 10506                           
 10507     196B                     l8018:	
 10508                           ;incstack = 0
 10509                           ; Regs used in _MENU_Tune_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10510                           
 10511                           
 10512                           ;menu.c: 386:   uint8_t state = TUNE_state;
 10513     196B  0021               	movlb	1	; select bank1
 10514     196C  0835               	movf	_TUNE_state^(0+128),w
 10515     196D  00FC               	movwf	MENU_Tune_Update@state
 10516     196E                     l8020:
 10517                           
 10518                           ;menu.c: 387:   if (state == TUNE_RUN)
 10519     196E  3002               	movlw	2
 10520     196F  067C               	xorwf	MENU_Tune_Update@state,w
 10521     1970  1D03               	btfss	3,2
 10522     1971  2973               	goto	u9281
 10523     1972  2974               	goto	u9280
 10524     1973                     u9281:
 10525     1973  297F               	goto	l8026
 10526     1974                     u9280:
 10527     1974                     l8022:
 10528                           
 10529                           ;menu.c: 388:   {;menu.c: 389:     if (MENU_var.tune.blink)
 10530     1974  0020               	movlb	0	; select bank0
 10531     1975  085C               	movf	_MENU_var+1,w
 10532     1976  1903               	btfsc	3,2
 10533     1977  2979               	goto	u9291
 10534     1978  297A               	goto	u9290
 10535     1979                     u9291:
 10536     1979  297D               	goto	l1239
 10537     197A                     u9290:
 10538     197A                     l8024:
 10539                           
 10540                           ;menu.c: 390:     {;menu.c: 391:       MENU_var.tune.blink = 0;
 10541     197A  01DC               	clrf	_MENU_var+1
 10542                           
 10543                           ;menu.c: 392:       state=0;
 10544     197B  01FC               	clrf	MENU_Tune_Update@state
 10545                           
 10546                           ;menu.c: 393:     } else
 10547     197C  297F               	goto	l8026
 10548     197D                     l1239:
 10549                           
 10550                           ;menu.c: 394:     {;menu.c: 395:       MENU_var.tune.blink = 1;
 10551     197D  3001               	movlw	1
 10552     197E  00DC               	movwf	_MENU_var+1
 10553     197F                     l8026:
 10554                           
 10555                           ;menu.c: 398:   DISP_Str(0x80, 2, str_TUNE_State[state], 0);
 10556     197F  3002               	movlw	2
 10557     1980  00F8               	movwf	DISP_Str@row
 10558     1981  357C               	lslf	MENU_Tune_Update@state,w
 10559     1982  3E48               	addlw	(low (_str_TUNE_State| (0+256)))& (0+255)
 10560     1983  0086               	movwf	6
 10561     1984  3001               	movlw	1	; select bank2/3
 10562     1985  0087               	movwf	7
 10563     1986  3F40               	moviw [0]fsr1
 10564     1987  00F9               	movwf	DISP_Str@str
 10565     1988  3F41               	moviw [1]fsr1
 10566     1989  00FA               	movwf	DISP_Str@str+1
 10567     198A  01FB               	clrf	DISP_Str@invert
 10568     198B  3080               	movlw	128
 10569     198C  318D  2547  3199   	fcall	_DISP_Str
 10570     198F                     l1241:
 10571     198F  0008               	return
 10572     1990                     __end_of_MENU_Tune_Update:
 10573                           
 10574                           	psect	text16
 10575     0800                     __ptext16:	
 10576 ;; *************** function _UTILI_CalSWR *****************
 10577 ;; Defined at:
 10578 ;;		line 194 in file "utili.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;		None
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;  swr             2   14[BANK0 ] short 
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  1    wreg      void 
 10585 ;; Registers used:
 10586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10595 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;Total ram usage:        3 bytes
 10597 ;; Hardware stack levels used: 1
 10598 ;; Hardware stack levels required when called: 1
 10599 ;; This function calls:
 10600 ;;		___aldiv
 10601 ;;		___lmul
 10602 ;; This function is called by:
 10603 ;;		_MENU_Main_Run
 10604 ;;		_MENU_RelTest_Run
 10605 ;;		_TUNE_Run
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609     0800                     _UTILI_CalSWR:	
 10610                           ;psect for function _UTILI_CalSWR
 10611                           
 10612     0800                     l7764:	
 10613                           ;incstack = 0
 10614                           ; Regs used in _UTILI_CalSWR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10615                           
 10616                           
 10617                           ;utili.c: 196:   int16_t swr =0;
 10618     0800  0020               	movlb	0	; select bank0
 10619     0801  01AE               	clrf	UTILI_CalSWR@swr
 10620     0802  01AF               	clrf	UTILI_CalSWR@swr+1
 10621     0803                     l7766:
 10622                           
 10623                           ;utili.c: 201:   if (global.adc_f_mV >= 100)
 10624     0803  0021               	movlb	1	; select bank1
 10625     0804  0857               	movf	((_global+1)^(0+128)+25),w
 10626     0805  3A80               	xorlw	128
 10627     0806  00FC               	movwf	??_UTILI_CalSWR
 10628     0807  3080               	movlw	128
 10629     0808  027C               	subwf	??_UTILI_CalSWR,w
 10630     0809  1D03               	skipz
 10631     080A  280D               	goto	u8595
 10632     080B  3064               	movlw	100
 10633     080C  0256               	subwf	(_global^(0+128)+25),w
 10634     080D                     u8595:
 10635     080D  1C03               	skipc
 10636     080E  2810               	goto	u8591
 10637     080F  2811               	goto	u8590
 10638     0810                     u8591:
 10639     0810  287B               	goto	l516
 10640     0811                     u8590:
 10641     0811                     l7768:
 10642                           
 10643                           ;utili.c: 202:   {;utili.c: 204:     if (global.adc_f_mV > global.adc_r_mV)
 10644     0811  0021               	movlb	1	; select bank1
 10645     0812  0855               	movf	((_global+1)^(0+128)+23),w
 10646     0813  3A80               	xorlw	128
 10647     0814  00FC               	movwf	??_UTILI_CalSWR
 10648     0815  0857               	movf	((_global+1)^(0+128)+25),w
 10649     0816  3A80               	xorlw	128
 10650     0817  027C               	subwf	??_UTILI_CalSWR,w
 10651     0818  1D03               	skipz
 10652     0819  281C               	goto	u8605
 10653     081A  0856               	movf	(_global^(0+128)+25),w
 10654     081B  0254               	subwf	(_global^(0+128)+23),w
 10655     081C                     u8605:
 10656     081C  1803               	skipnc
 10657     081D  281F               	goto	u8601
 10658     081E  2820               	goto	u8600
 10659     081F                     u8601:
 10660     081F  2876               	goto	l7774
 10661     0820                     u8600:
 10662     0820                     l7770:
 10663                           
 10664                           ;utili.c: 205:     {;utili.c: 206:       swr = (int16_t) (((int32_t) (global.adc_f_mV + 
      +                          global.adc_r_mV) * 100) / (global.adc_f_mV - global.adc_r_mV));
 10665     0820  30BD               	movlw	low _global
 10666     0821  0086               	movwf	6
 10667     0822  3000               	movlw	high _global
 10668     0823  0087               	movwf	7
 10669     0824  3157               	addfsr 1,23
 10670     0825  30BD               	movlw	low _global
 10671     0826  0084               	movwf	4
 10672     0827  3000               	movlw	high _global
 10673     0828  0085               	movwf	5
 10674     0829  3119               	addfsr 0,25
 10675     082A  3F40               	moviw [0]fsr1
 10676     082B  0200               	subwf	0,w
 10677     082C  0020               	movlb	0	; select bank0
 10678     082D  00A0               	movwf	___aldiv@divisor
 10679     082E  3101               	addfsr 0,1
 10680     082F  3F41               	moviw [1]fsr1
 10681     0830  3B00               	subwfb	0,w
 10682     0831  00A1               	movwf	___aldiv@divisor+1
 10683     0832  01A2               	clrf	___aldiv@divisor+2
 10684     0833  1BA1               	btfsc	___aldiv@divisor+1,7
 10685     0834  03A2               	decf	___aldiv@divisor+2,f
 10686     0835  0822               	movf	___aldiv@divisor+2,w
 10687     0836  00A3               	movwf	___aldiv@divisor+3
 10688     0837  30BD               	movlw	low _global
 10689     0838  0086               	movwf	6
 10690     0839  3000               	movlw	high _global
 10691     083A  0087               	movwf	7
 10692     083B  3157               	addfsr 1,23
 10693     083C  30BD               	movlw	low _global
 10694     083D  0084               	movwf	4
 10695     083E  3000               	movlw	high _global
 10696     083F  0085               	movwf	5
 10697     0840  3119               	addfsr 0,25
 10698     0841  3F40               	moviw [0]fsr1
 10699     0842  0700               	addwf	0,w
 10700     0843  00F0               	movwf	___lmul@multiplier
 10701     0844  3101               	addfsr 0,1
 10702     0845  3F41               	moviw [1]fsr1
 10703     0846  3D00               	addwfc	0,w
 10704     0847  00F1               	movwf	___lmul@multiplier+1
 10705     0848  01F2               	clrf	___lmul@multiplier+2
 10706     0849  1BF1               	btfsc	___lmul@multiplier+1,7
 10707     084A  03F2               	decf	___lmul@multiplier+2,f
 10708     084B  0872               	movf	___lmul@multiplier+2,w
 10709     084C  00F3               	movwf	___lmul@multiplier+3
 10710     084D  3000               	movlw	0
 10711     084E  00F7               	movwf	___lmul@multiplicand+3
 10712     084F  3000               	movlw	0
 10713     0850  00F6               	movwf	___lmul@multiplicand+2
 10714     0851  3000               	movlw	0
 10715     0852  00F5               	movwf	___lmul@multiplicand+1
 10716     0853  3064               	movlw	100
 10717     0854  00F4               	movwf	___lmul@multiplicand
 10718     0855  319B  232A  3188   	fcall	___lmul
 10719     0858  0873               	movf	?___lmul+3,w
 10720     0859  0020               	movlb	0	; select bank0
 10721     085A  00A7               	movwf	___aldiv@dividend+3
 10722     085B  0872               	movf	?___lmul+2,w
 10723     085C  00A6               	movwf	___aldiv@dividend+2
 10724     085D  0871               	movf	?___lmul+1,w
 10725     085E  00A5               	movwf	___aldiv@dividend+1
 10726     085F  0870               	movf	?___lmul,w
 10727     0860  00A4               	movwf	___aldiv@dividend
 10728     0861  3195  25A2  3188   	fcall	___aldiv
 10729     0864  0020               	movlb	0	; select bank0
 10730     0865  0821               	movf	?___aldiv+1,w
 10731     0866  00AF               	movwf	UTILI_CalSWR@swr+1
 10732     0867  0820               	movf	?___aldiv,w
 10733     0868  00AE               	movwf	UTILI_CalSWR@swr
 10734     0869                     l7772:
 10735                           
 10736                           ;utili.c: 207:       if(swr > 999)
 10737     0869  082F               	movf	UTILI_CalSWR@swr+1,w
 10738     086A  3A80               	xorlw	128
 10739     086B  00FC               	movwf	??_UTILI_CalSWR
 10740     086C  3083               	movlw	131
 10741     086D  027C               	subwf	??_UTILI_CalSWR,w
 10742     086E  1D03               	skipz
 10743     086F  2872               	goto	u8615
 10744     0870  30E8               	movlw	232
 10745     0871  022E               	subwf	UTILI_CalSWR@swr,w
 10746     0872                     u8615:
 10747     0872  1C03               	skipc
 10748     0873  2875               	goto	u8611
 10749     0874  2876               	goto	u8610
 10750     0875                     u8611:
 10751     0875  287B               	goto	l516
 10752     0876                     u8610:
 10753     0876                     l7774:
 10754                           
 10755                           ;utili.c: 208:       {;utili.c: 209:         swr = 999;
 10756     0876  30E7               	movlw	231
 10757     0877  0020               	movlb	0	; select bank0
 10758     0878  00AE               	movwf	UTILI_CalSWR@swr
 10759     0879  3003               	movlw	3
 10760     087A  00AF               	movwf	UTILI_CalSWR@swr+1
 10761     087B                     l516:	
 10762                           ;utili.c: 217:   }
 10763                           
 10764                           
 10765                           ;utili.c: 218:   global.SWR = swr;
 10766     087B  0020               	movlb	0	; select bank0
 10767     087C  082F               	movf	UTILI_CalSWR@swr+1,w
 10768     087D  0021               	movlb	1	; select bank1
 10769     087E  00C0               	movwf	((_global+1)^(0+128)+2)
 10770     087F  0020               	movlb	0	; select bank0
 10771     0880  082E               	movf	UTILI_CalSWR@swr,w
 10772     0881  0021               	movlb	1	; select bank1
 10773     0882  00BF               	movwf	(_global^(0+128)+2)
 10774     0883                     l520:
 10775     0883  0008               	return
 10776     0884                     __end_of_UTILI_CalSWR:
 10777                           
 10778                           	psect	text17
 10779     117D                     __ptext17:	
 10780 ;; *************** function _UTILI_CalPWR *****************
 10781 ;; Defined at:
 10782 ;;		line 179 in file "utili.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;		None
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;  deciWatt        2   23[BANK0 ] short 
 10787 ;;  centiVolt       2   21[BANK0 ] short 
 10788 ;; Return value:  Size  Location     Type
 10789 ;;                  1    wreg      void 
 10790 ;; Registers used:
 10791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10792 ;; Tracked objects:
 10793 ;;		On entry : 0/0
 10794 ;;		On exit  : 0/0
 10795 ;;		Unchanged: 0/0
 10796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;Total ram usage:        5 bytes
 10802 ;; Hardware stack levels used: 1
 10803 ;; Hardware stack levels required when called: 1
 10804 ;; This function calls:
 10805 ;;		_UTILI_centiVolt_to_deciWatt
 10806 ;;		___aldiv
 10807 ;;		___lmul
 10808 ;; This function is called by:
 10809 ;;		_MENU_Main_Run
 10810 ;;		_MENU_RelTest_Run
 10811 ;;		_TUNE_Run
 10812 ;; This function uses a non-reentrant model
 10813 ;;
 10814                           
 10815     117D                     _UTILI_CalPWR:	
 10816                           ;psect for function _UTILI_CalPWR
 10817                           
 10818     117D                     l7754:	
 10819                           ;incstack = 0
 10820                           ; Regs used in _UTILI_CalPWR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10821                           
 10822                           
 10823                           ;utili.c: 182:   int16_t centiVolt = (int16_t) (((int32_t) global.cal_gain * global.adc_
      +                          f_mV) / 4096) + global.cal_offset;
 10824     117D  30BD               	movlw	low _global
 10825     117E  0086               	movwf	6
 10826     117F  3000               	movlw	high _global
 10827     1180  0087               	movwf	7
 10828     1181  3153               	addfsr 1,19
 10829     1182  3000               	movlw	0
 10830     1183  0020               	movlb	0	; select bank0
 10831     1184  00A3               	movwf	___aldiv@divisor+3
 10832     1185  3000               	movlw	0
 10833     1186  00A2               	movwf	___aldiv@divisor+2
 10834     1187  3010               	movlw	16
 10835     1188  00A1               	movwf	___aldiv@divisor+1
 10836     1189  3000               	movlw	0
 10837     118A  00A0               	movwf	___aldiv@divisor
 10838     118B  0021               	movlb	1	; select bank1
 10839     118C  0852               	movf	(_global^(0+128)+21),w
 10840     118D  00F0               	movwf	___lmul@multiplier
 10841     118E  0853               	movf	((_global+1)^(0+128)+21),w
 10842     118F  00F1               	movwf	___lmul@multiplier+1
 10843     1190  0D89               	rlf	9,f
 10844     1191  3B89               	subwfb	9,f
 10845     1192  0989               	comf	9,f
 10846     1193  00F2               	movwf	___lmul@multiplier+2
 10847     1194  00F3               	movwf	___lmul@multiplier+3
 10848     1195  0856               	movf	(_global^(0+128)+25),w
 10849     1196  00F4               	movwf	___lmul@multiplicand
 10850     1197  0857               	movf	((_global+1)^(0+128)+25),w
 10851     1198  00F5               	movwf	___lmul@multiplicand+1
 10852     1199  0D89               	rlf	9,f
 10853     119A  3B89               	subwfb	9,f
 10854     119B  0989               	comf	9,f
 10855     119C  00F6               	movwf	___lmul@multiplicand+2
 10856     119D  00F7               	movwf	___lmul@multiplicand+3
 10857     119E  319B  232A  3191   	fcall	___lmul
 10858     11A1  0873               	movf	?___lmul+3,w
 10859     11A2  0020               	movlb	0	; select bank0
 10860     11A3  00A7               	movwf	___aldiv@dividend+3
 10861     11A4  0872               	movf	?___lmul+2,w
 10862     11A5  00A6               	movwf	___aldiv@dividend+2
 10863     11A6  0871               	movf	?___lmul+1,w
 10864     11A7  00A5               	movwf	___aldiv@dividend+1
 10865     11A8  0870               	movf	?___lmul,w
 10866     11A9  00A4               	movwf	___aldiv@dividend
 10867     11AA  3195  25A2  3191   	fcall	___aldiv
 10868     11AD  3F40               	moviw [0]fsr1
 10869     11AE  0020               	movlb	0	; select bank0
 10870     11AF  0720               	addwf	?___aldiv,w
 10871     11B0  00B5               	movwf	UTILI_CalPWR@centiVolt
 10872     11B1  3F41               	moviw [1]fsr1
 10873     11B2  3D21               	addwfc	?___aldiv+1,w
 10874     11B3  00B6               	movwf	UTILI_CalPWR@centiVolt+1
 10875     11B4                     l7756:
 10876                           
 10877                           ;utili.c: 183:   int16_t deciWatt = UTILI_centiVolt_to_deciWatt(centiVolt);
 10878     11B4  0836               	movf	UTILI_CalPWR@centiVolt+1,w
 10879     11B5  00FD               	movwf	UTILI_centiVolt_to_deciWatt@centiVolt+1
 10880     11B6  0835               	movf	UTILI_CalPWR@centiVolt,w
 10881     11B7  00FC               	movwf	UTILI_centiVolt_to_deciWatt@centiVolt
 10882     11B8  319D  25C1  3191   	fcall	_UTILI_centiVolt_to_deciWatt
 10883     11BB  087D               	movf	?_UTILI_centiVolt_to_deciWatt+1,w
 10884     11BC  0020               	movlb	0	; select bank0
 10885     11BD  00B8               	movwf	UTILI_CalPWR@deciWatt+1
 10886     11BE  087C               	movf	?_UTILI_centiVolt_to_deciWatt,w
 10887     11BF  00B7               	movwf	UTILI_CalPWR@deciWatt
 10888     11C0                     l7758:
 10889                           
 10890                           ;utili.c: 186:   if(deciWatt <= 1)
 10891     11C0  0838               	movf	UTILI_CalPWR@deciWatt+1,w
 10892     11C1  3A80               	xorlw	128
 10893     11C2  00B4               	movwf	??_UTILI_CalPWR
 10894     11C3  3080               	movlw	128
 10895     11C4  0234               	subwf	??_UTILI_CalPWR,w
 10896     11C5  1D03               	skipz
 10897     11C6  29C9               	goto	u8585
 10898     11C7  3002               	movlw	2
 10899     11C8  0237               	subwf	UTILI_CalPWR@deciWatt,w
 10900     11C9                     u8585:
 10901     11C9  1803               	skipnc
 10902     11CA  29CC               	goto	u8581
 10903     11CB  29CD               	goto	u8580
 10904     11CC                     u8581:
 10905     11CC  29D0               	goto	l7762
 10906     11CD                     u8580:
 10907     11CD                     l7760:
 10908                           
 10909                           ;utili.c: 187:   {;utili.c: 188:     deciWatt=0;
 10910     11CD  0020               	movlb	0	; select bank0
 10911     11CE  01B7               	clrf	UTILI_CalPWR@deciWatt
 10912     11CF  01B8               	clrf	UTILI_CalPWR@deciWatt+1
 10913     11D0                     l7762:
 10914                           
 10915                           ;utili.c: 191:   global.PWR = deciWatt;
 10916     11D0  0020               	movlb	0	; select bank0
 10917     11D1  0838               	movf	UTILI_CalPWR@deciWatt+1,w
 10918     11D2  0021               	movlb	1	; select bank1
 10919     11D3  00BE               	movwf	(_global+1)^(0+128)
 10920     11D4  0020               	movlb	0	; select bank0
 10921     11D5  0837               	movf	UTILI_CalPWR@deciWatt,w
 10922     11D6  0021               	movlb	1	; select bank1
 10923     11D7  00BD               	movwf	_global^(0+128)
 10924     11D8                     l513:
 10925     11D8  0008               	return
 10926     11D9                     __end_of_UTILI_CalPWR:
 10927                           
 10928                           	psect	text18
 10929     1DC1                     __ptext18:	
 10930 ;; *************** function _UTILI_centiVolt_to_deciWatt *****************
 10931 ;; Defined at:
 10932 ;;		line 173 in file "utili.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;  centiVolt       2   12[COMMON] short 
 10935 ;; Auto vars:     Size  Location     Type
 10936 ;;  deciWatt        2   18[BANK0 ] short 
 10937 ;; Return value:  Size  Location     Type
 10938 ;;                  2   12[COMMON] short 
 10939 ;; Registers used:
 10940 ;;		wreg, status,2, status,0, pclath, cstack
 10941 ;; Tracked objects:
 10942 ;;		On entry : 0/0
 10943 ;;		On exit  : 0/0
 10944 ;;		Unchanged: 0/0
 10945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;Total ram usage:        8 bytes
 10951 ;; Hardware stack levels used: 1
 10952 ;; Hardware stack levels required when called: 2
 10953 ;; This function calls:
 10954 ;;		___aldiv
 10955 ;;		___lmul
 10956 ;; This function is called by:
 10957 ;;		_UTILI_CalPWR
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961     1DC1                     _UTILI_centiVolt_to_deciWatt:	
 10962                           ;psect for function _UTILI_centiVolt_to_deciWatt
 10963                           
 10964     1DC1                     l7624:	
 10965                           ;incstack = 0
 10966                           ; Regs used in _UTILI_centiVolt_to_deciWatt: [wreg+status,2+status,0+pclath+cstack]
 10967                           
 10968                           
 10969                           ;utili.c: 173: int16_t UTILI_centiVolt_to_deciWatt(int16_t centiVolt);utili.c: 174: {;ut
      +                          ili.c: 175:   int16_t deciWatt = (int16_t) ( (((int32_t) centiVolt * centiVolt) + 25000)
      +                           / 50000);
 10970     1DC1  3000               	movlw	0
 10971     1DC2  0020               	movlb	0	; select bank0
 10972     1DC3  00A3               	movwf	___aldiv@divisor+3
 10973     1DC4  3000               	movlw	0
 10974     1DC5  00A2               	movwf	___aldiv@divisor+2
 10975     1DC6  30C3               	movlw	195
 10976     1DC7  00A1               	movwf	___aldiv@divisor+1
 10977     1DC8  3050               	movlw	80
 10978     1DC9  00A0               	movwf	___aldiv@divisor
 10979     1DCA  30A8               	movlw	168
 10980     1DCB  00AE               	movwf	??_UTILI_centiVolt_to_deciWatt
 10981     1DCC  3061               	movlw	97
 10982     1DCD  00AF               	movwf	??_UTILI_centiVolt_to_deciWatt+1
 10983     1DCE  3000               	movlw	0
 10984     1DCF  00B0               	movwf	??_UTILI_centiVolt_to_deciWatt+2
 10985     1DD0  3000               	movlw	0
 10986     1DD1  00B1               	movwf	??_UTILI_centiVolt_to_deciWatt+3
 10987     1DD2  087C               	movf	UTILI_centiVolt_to_deciWatt@centiVolt,w
 10988     1DD3  00F0               	movwf	___lmul@multiplier
 10989     1DD4  087D               	movf	UTILI_centiVolt_to_deciWatt@centiVolt+1,w
 10990     1DD5  00F1               	movwf	___lmul@multiplier+1
 10991     1DD6  0D89               	rlf	9,f
 10992     1DD7  3B89               	subwfb	9,f
 10993     1DD8  0989               	comf	9,f
 10994     1DD9  00F2               	movwf	___lmul@multiplier+2
 10995     1DDA  00F3               	movwf	___lmul@multiplier+3
 10996     1DDB  087C               	movf	UTILI_centiVolt_to_deciWatt@centiVolt,w
 10997     1DDC  00F4               	movwf	___lmul@multiplicand
 10998     1DDD  087D               	movf	UTILI_centiVolt_to_deciWatt@centiVolt+1,w
 10999     1DDE  00F5               	movwf	___lmul@multiplicand+1
 11000     1DDF  0D89               	rlf	9,f
 11001     1DE0  3B89               	subwfb	9,f
 11002     1DE1  0989               	comf	9,f
 11003     1DE2  00F6               	movwf	___lmul@multiplicand+2
 11004     1DE3  00F7               	movwf	___lmul@multiplicand+3
 11005     1DE4  319B  232A  319D   	fcall	___lmul
 11006     1DE7  0870               	movf	?___lmul,w
 11007     1DE8  0020               	movlb	0	; select bank0
 11008     1DE9  07AE               	addwf	??_UTILI_centiVolt_to_deciWatt,f
 11009     1DEA  0871               	movf	?___lmul+1,w
 11010     1DEB  3DAF               	addwfc	??_UTILI_centiVolt_to_deciWatt+1,f
 11011     1DEC  0872               	movf	?___lmul+2,w
 11012     1DED  3DB0               	addwfc	??_UTILI_centiVolt_to_deciWatt+2,f
 11013     1DEE  0873               	movf	?___lmul+3,w
 11014     1DEF  3DB1               	addwfc	??_UTILI_centiVolt_to_deciWatt+3,f
 11015     1DF0  0831               	movf	??_UTILI_centiVolt_to_deciWatt+3,w
 11016     1DF1  00A7               	movwf	___aldiv@dividend+3
 11017     1DF2  0830               	movf	??_UTILI_centiVolt_to_deciWatt+2,w
 11018     1DF3  00A6               	movwf	___aldiv@dividend+2
 11019     1DF4  082F               	movf	??_UTILI_centiVolt_to_deciWatt+1,w
 11020     1DF5  00A5               	movwf	___aldiv@dividend+1
 11021     1DF6  082E               	movf	??_UTILI_centiVolt_to_deciWatt,w
 11022     1DF7  00A4               	movwf	___aldiv@dividend
 11023     1DF8  3195  25A2  319D   	fcall	___aldiv
 11024     1DFB  0020               	movlb	0	; select bank0
 11025     1DFC  0821               	movf	?___aldiv+1,w
 11026     1DFD  00B3               	movwf	UTILI_centiVolt_to_deciWatt@deciWatt+1
 11027     1DFE  0820               	movf	?___aldiv,w
 11028     1DFF  00B2               	movwf	UTILI_centiVolt_to_deciWatt@deciWatt
 11029     1E00                     l7626:
 11030                           
 11031                           ;utili.c: 176:   return (deciWatt);
 11032     1E00  0833               	movf	UTILI_centiVolt_to_deciWatt@deciWatt+1,w
 11033     1E01  00FD               	movwf	?_UTILI_centiVolt_to_deciWatt+1
 11034     1E02  0832               	movf	UTILI_centiVolt_to_deciWatt@deciWatt,w
 11035     1E03  00FC               	movwf	?_UTILI_centiVolt_to_deciWatt
 11036     1E04                     l509:
 11037     1E04  0008               	return
 11038     1E05                     __end_of_UTILI_centiVolt_to_deciWatt:
 11039                           
 11040                           	psect	text19
 11041     1D0B                     __ptext19:	
 11042 ;; *************** function _MENU_StartupSave_Init *****************
 11043 ;; Defined at:
 11044 ;;		line 1281 in file "menu.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;		None
 11047 ;; Auto vars:     Size  Location     Type
 11048 ;;  str_index       3   17[BANK0 ] unsigned char [3]
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  1    wreg      void 
 11051 ;; Registers used:
 11052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;Total ram usage:        3 bytes
 11063 ;; Hardware stack levels used: 1
 11064 ;; Hardware stack levels required when called: 1
 11065 ;; This function calls:
 11066 ;;		_BUTTON_Reset
 11067 ;;		_DISP_Clr
 11068 ;;		_DISP_Str
 11069 ;;		_EEPROM_Read
 11070 ;;		_MENU_StartupSave_Update
 11071 ;; This function is called by:
 11072 ;;		_MENU_Main_Run
 11073 ;;		_MENU_Sub_Run
 11074 ;;		_MENU_Memory_Run
 11075 ;; This function uses a non-reentrant model
 11076 ;;
 11077                           
 11078     1D0B                     _MENU_StartupSave_Init:	
 11079                           ;psect for function _MENU_StartupSave_Init
 11080                           
 11081     1D0B                     l8420:	
 11082                           ;incstack = 0
 11083                           ; Regs used in _MENU_StartupSave_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11084                           
 11085                           
 11086                           ;menu.c: 1283:   DISP_Clr();
 11087     1D0B  3199  2146  319D   	fcall	_DISP_Clr
 11088     1D0E                     l8422:
 11089                           
 11090                           ;menu.c: 1284:   char str_index[3] = "0:";
 11091     1D0E  0021               	movlb	1	; select bank1
 11092     1D0F  0860               	movf	MENU_StartupSave_Init@F3149^(0+128),w
 11093     1D10  0020               	movlb	0	; select bank0
 11094     1D11  00B1               	movwf	MENU_StartupSave_Init@str_index
 11095     1D12  0021               	movlb	1	; select bank1
 11096     1D13  0861               	movf	(MENU_StartupSave_Init@F3149+1)^(0+128),w
 11097     1D14  0020               	movlb	0	; select bank0
 11098     1D15  00B2               	movwf	MENU_StartupSave_Init@str_index+1
 11099     1D16  0021               	movlb	1	; select bank1
 11100     1D17  0862               	movf	(MENU_StartupSave_Init@F3149+2)^(0+128),w
 11101     1D18  0020               	movlb	0	; select bank0
 11102     1D19  00B3               	movwf	MENU_StartupSave_Init@str_index+2
 11103     1D1A                     l8424:
 11104                           
 11105                           ;menu.c: 1285:   DISP_Str(0, 1,str_index,0);
 11106     1D1A  01F8               	clrf	DISP_Str@row
 11107     1D1B  0AF8               	incf	DISP_Str@row,f
 11108     1D1C  3031               	movlw	low MENU_StartupSave_Init@str_index
 11109     1D1D  00F9               	movwf	DISP_Str@str
 11110     1D1E  3000               	movlw	high MENU_StartupSave_Init@str_index
 11111     1D1F  00FA               	movwf	DISP_Str@str+1
 11112     1D20  01FB               	clrf	DISP_Str@invert
 11113     1D21  3000               	movlw	0
 11114     1D22  318D  2547  319D   	fcall	_DISP_Str
 11115     1D25                     l8426:
 11116                           
 11117                           ;menu.c: 1287:   EEPROM_Read((uint8_t)&ee_tunemem , &MENU_var.startupsave.tunemem, sizeo
      +                          f(tunemem_t));
 11118     1D25  305D               	movlw	low (_MENU_var+2)
 11119     1D26  00F3               	movwf	EEPROM_Read@ptrValue
 11120     1D27  3000               	movlw	high (_MENU_var+2)
 11121     1D28  00F4               	movwf	EEPROM_Read@ptrValue+1
 11122     1D29  300A               	movlw	10
 11123     1D2A  00F5               	movwf	EEPROM_Read@size
 11124     1D2B  3000               	movlw	(low _ee_tunemem)& (0+255)
 11125     1D2C  3198  2093  319D   	fcall	_EEPROM_Read
 11126     1D2F                     l8428:
 11127                           
 11128                           ;menu.c: 1288:   MENU_var.startupsave.str_terminate=0;
 11129     1D2F  0020               	movlb	0	; select bank0
 11130     1D30  01E7               	clrf	_MENU_var+12
 11131     1D31                     l8430:
 11132                           
 11133                           ;menu.c: 1289:   DISP_Str(2, 1,MENU_var.startupsave.tunemem.str_name, 0);
 11134     1D31  01F8               	clrf	DISP_Str@row
 11135     1D32  0AF8               	incf	DISP_Str@row,f
 11136     1D33  305F               	movlw	low (_MENU_var+4)
 11137     1D34  00F9               	movwf	DISP_Str@str
 11138     1D35  3000               	movlw	high (_MENU_var+4)
 11139     1D36  00FA               	movwf	DISP_Str@str+1
 11140     1D37  01FB               	clrf	DISP_Str@invert
 11141     1D38  3002               	movlw	2
 11142     1D39  318D  2547  319D   	fcall	_DISP_Str
 11143     1D3C                     l8432:
 11144                           
 11145                           ;menu.c: 1291:   MENU_var.startupsave.cursor=0;
 11146     1D3C  0020               	movlb	0	; select bank0
 11147     1D3D  01DC               	clrf	_MENU_var+1
 11148     1D3E                     l8434:
 11149                           
 11150                           ;menu.c: 1292:   BUTTON_Reset();
 11151     1D3E  31A6  26BE  319D   	fcall	_BUTTON_Reset
 11152     1D41                     l8436:
 11153                           
 11154                           ;menu.c: 1293:   MENU_StartupSave_Update();
 11155     1D41  3199  2190  319D   	fcall	_MENU_StartupSave_Update
 11156     1D44                     l1480:
 11157     1D44  0008               	return
 11158     1D45                     __end_of_MENU_StartupSave_Init:
 11159                           
 11160                           	psect	text20
 11161     1CD3                     __ptext20:	
 11162 ;; *************** function _MENU_NameEdit_Init *****************
 11163 ;; Defined at:
 11164 ;;		line 1199 in file "menu.c"
 11165 ;; Parameters:    Size  Location     Type
 11166 ;;		None
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;  str_index       3   26[BANK0 ] unsigned char [3]
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  1    wreg      void 
 11171 ;; Registers used:
 11172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11173 ;; Tracked objects:
 11174 ;;		On entry : 0/0
 11175 ;;		On exit  : 0/0
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11179 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11181 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11182 ;;Total ram usage:        3 bytes
 11183 ;; Hardware stack levels used: 1
 11184 ;; Hardware stack levels required when called: 1
 11185 ;; This function calls:
 11186 ;;		_BUTTON_Reset
 11187 ;;		_DISP_Clr
 11188 ;;		_DISP_Str
 11189 ;;		_EEPROM_Read
 11190 ;;		_MENU_NameEdit_Update
 11191 ;;		___bmul
 11192 ;; This function is called by:
 11193 ;;		_MENU_Main_Run
 11194 ;;		_MENU_Sub_Run
 11195 ;;		_MENU_Memory_Run
 11196 ;; This function uses a non-reentrant model
 11197 ;;
 11198                           
 11199     1CD3                     _MENU_NameEdit_Init:	
 11200                           ;psect for function _MENU_NameEdit_Init
 11201                           
 11202     1CD3                     l8402:	
 11203                           ;incstack = 0
 11204                           ; Regs used in _MENU_NameEdit_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11205                           
 11206                           
 11207                           ;menu.c: 1202:   char str_index[3] = "0:";
 11208     1CD3  0021               	movlb	1	; select bank1
 11209     1CD4  0863               	movf	MENU_NameEdit_Init@F3141^(0+128),w
 11210     1CD5  0020               	movlb	0	; select bank0
 11211     1CD6  00BA               	movwf	MENU_NameEdit_Init@str_index
 11212     1CD7  0021               	movlb	1	; select bank1
 11213     1CD8  0864               	movf	(MENU_NameEdit_Init@F3141+1)^(0+128),w
 11214     1CD9  0020               	movlb	0	; select bank0
 11215     1CDA  00BB               	movwf	MENU_NameEdit_Init@str_index+1
 11216     1CDB  0021               	movlb	1	; select bank1
 11217     1CDC  0865               	movf	(MENU_NameEdit_Init@F3141+2)^(0+128),w
 11218     1CDD  0020               	movlb	0	; select bank0
 11219     1CDE  00BC               	movwf	MENU_NameEdit_Init@str_index+2
 11220     1CDF                     l8404:
 11221                           
 11222                           ;menu.c: 1203:   str_index[0] = '0' + MENU_var.nameedit.mem_index;
 11223     1CDF  085B               	movf	_MENU_var,w
 11224     1CE0  3E30               	addlw	48
 11225     1CE1  00BA               	movwf	MENU_NameEdit_Init@str_index
 11226     1CE2                     l8406:
 11227                           
 11228                           ;menu.c: 1204:   DISP_Clr();
 11229     1CE2  3199  2146  319C   	fcall	_DISP_Clr
 11230     1CE5                     l8408:
 11231                           
 11232                           ;menu.c: 1205:   DISP_Str(0, 0,str_index,0);
 11233     1CE5  01F8               	clrf	DISP_Str@row
 11234     1CE6  303A               	movlw	low MENU_NameEdit_Init@str_index
 11235     1CE7  00F9               	movwf	DISP_Str@str
 11236     1CE8  3000               	movlw	high MENU_NameEdit_Init@str_index
 11237     1CE9  00FA               	movwf	DISP_Str@str+1
 11238     1CEA  01FB               	clrf	DISP_Str@invert
 11239     1CEB  3000               	movlw	0
 11240     1CEC  318D  2547  319C   	fcall	_DISP_Str
 11241     1CEF                     l8410:
 11242                           
 11243                           ;menu.c: 1207:   EEPROM_Read((uint8_t)&ee_tunemem + (sizeof(tunemem_t) * MENU_var.nameed
      +                          it.mem_index) , &MENU_var.nameedit.tunemem, sizeof(tunemem_t));
 11244     1CEF  305E               	movlw	low (_MENU_var+3)
 11245     1CF0  00F3               	movwf	EEPROM_Read@ptrValue
 11246     1CF1  3000               	movlw	high (_MENU_var+3)
 11247     1CF2  00F4               	movwf	EEPROM_Read@ptrValue+1
 11248     1CF3  300A               	movlw	10
 11249     1CF4  00F5               	movwf	EEPROM_Read@size
 11250     1CF5  300A               	movlw	10
 11251     1CF6  00F0               	movwf	___bmul@multiplicand
 11252     1CF7  0020               	movlb	0	; select bank0
 11253     1CF8  085B               	movf	_MENU_var,w
 11254     1CF9  31A7  2745  319C   	fcall	___bmul
 11255     1CFC  3E00               	addlw	low _ee_tunemem
 11256     1CFD  3198  2093  319C   	fcall	_EEPROM_Read
 11257     1D00                     l8412:
 11258                           
 11259                           ;menu.c: 1208:   MENU_var.nameedit.cursor=0;
 11260     1D00  0020               	movlb	0	; select bank0
 11261     1D01  01DC               	clrf	_MENU_var+1
 11262     1D02                     l8414:
 11263                           
 11264                           ;menu.c: 1209:   MENU_var.nameedit.button_repeat_delay = 40;
 11265     1D02  3028               	movlw	40
 11266     1D03  00DD               	movwf	_MENU_var+2
 11267     1D04                     l8416:
 11268                           
 11269                           ;menu.c: 1210:   BUTTON_Reset();
 11270     1D04  31A6  26BE  319C   	fcall	_BUTTON_Reset
 11271     1D07                     l8418:
 11272                           
 11273                           ;menu.c: 1211:   MENU_NameEdit_Update();
 11274     1D07  3189  21D5  319C   	fcall	_MENU_NameEdit_Update
 11275     1D0A                     l1455:
 11276     1D0A  0008               	return
 11277     1D0B                     __end_of_MENU_NameEdit_Init:
 11278                           
 11279                           	psect	text21
 11280     18B0                     __ptext21:	
 11281 ;; *************** function _MENU_CalPWR_Init *****************
 11282 ;; Defined at:
 11283 ;;		line 836 in file "menu.c"
 11284 ;; Parameters:    Size  Location     Type
 11285 ;;		None
 11286 ;; Auto vars:     Size  Location     Type
 11287 ;;		None
 11288 ;; Return value:  Size  Location     Type
 11289 ;;                  1    wreg      void 
 11290 ;; Registers used:
 11291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11292 ;; Tracked objects:
 11293 ;;		On entry : 0/0
 11294 ;;		On exit  : 0/0
 11295 ;;		Unchanged: 0/0
 11296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11301 ;;Total ram usage:        0 bytes
 11302 ;; Hardware stack levels used: 1
 11303 ;; Hardware stack levels required when called: 1
 11304 ;; This function calls:
 11305 ;;		_BUTTON_Reset
 11306 ;;		_DISP_Clr
 11307 ;;		_MENU_CalPWR_Update
 11308 ;; This function is called by:
 11309 ;;		_MENU_Main_Run
 11310 ;;		_MENU_Sub_Run
 11311 ;;		_MENU_Memory_Run
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315     18B0                     _MENU_CalPWR_Init:	
 11316                           ;psect for function _MENU_CalPWR_Init
 11317                           
 11318     18B0                     l8340:	
 11319                           ;incstack = 0
 11320                           ; Regs used in _MENU_CalPWR_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11321                           
 11322                           
 11323                           ;menu.c: 838:   DISP_Clr();
 11324     18B0  3199  2146  3198   	fcall	_DISP_Clr
 11325     18B3                     l8342:
 11326                           
 11327                           ;menu.c: 839:   MENU_var.cal.cursor = 0;
 11328     18B3  0020               	movlb	0	; select bank0
 11329     18B4  01DB               	clrf	_MENU_var
 11330     18B5                     l8344:
 11331                           
 11332                           ;menu.c: 840:   MENU_var.cal.step = 0;
 11333     18B5  01DC               	clrf	_MENU_var+1
 11334     18B6                     l8346:
 11335                           
 11336                           ;menu.c: 841:   MENU_var.cal.cal_point[0] = global.cal_point[0];
 11337     18B6  0021               	movlb	1	; select bank1
 11338     18B7  084D               	movf	((_global+1)^(0+128)+15),w
 11339     18B8  0020               	movlb	0	; select bank0
 11340     18B9  00DE               	movwf	_MENU_var+3
 11341     18BA  0021               	movlb	1	; select bank1
 11342     18BB  084C               	movf	(_global^(0+128)+15),w
 11343     18BC  0020               	movlb	0	; select bank0
 11344     18BD  00DD               	movwf	_MENU_var+2
 11345     18BE                     l8348:
 11346                           
 11347                           ;menu.c: 842:   MENU_var.cal.cal_point[1] = global.cal_point[1];
 11348     18BE  0021               	movlb	1	; select bank1
 11349     18BF  084F               	movf	((_global+1)^(0+128)+17),w
 11350     18C0  0020               	movlb	0	; select bank0
 11351     18C1  00E0               	movwf	_MENU_var+5
 11352     18C2  0021               	movlb	1	; select bank1
 11353     18C3  084E               	movf	(_global^(0+128)+17),w
 11354     18C4  0020               	movlb	0	; select bank0
 11355     18C5  00DF               	movwf	_MENU_var+4
 11356     18C6                     l8350:
 11357                           
 11358                           ;menu.c: 843:   BUTTON_Reset();
 11359     18C6  31A6  26BE  3198   	fcall	_BUTTON_Reset
 11360     18C9                     l8352:
 11361                           
 11362                           ;menu.c: 845:   MENU_CalPWR_Update();
 11363     18C9  3191  21D9  3198   	fcall	_MENU_CalPWR_Update
 11364     18CC                     l1359:
 11365     18CC  0008               	return
 11366     18CD                     __end_of_MENU_CalPWR_Init:
 11367                           
 11368                           	psect	text22
 11369     1877                     __ptext22:	
 11370 ;; *************** function _MENU_RelTest_Init *****************
 11371 ;; Defined at:
 11372 ;;		line 685 in file "menu.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;		None
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;		None
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  1    wreg      void 
 11379 ;; Registers used:
 11380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;Total ram usage:        0 bytes
 11391 ;; Hardware stack levels used: 1
 11392 ;; Hardware stack levels required when called: 1
 11393 ;; This function calls:
 11394 ;;		_BUTTON_Reset
 11395 ;;		_DISP_Clr
 11396 ;;		_MENU_RelTest_Update
 11397 ;;		_UTILI_Get_LC_Relays
 11398 ;;		_UTILI_SetRelays
 11399 ;; This function is called by:
 11400 ;;		_MENU_Main_Run
 11401 ;;		_MENU_Sub_Run
 11402 ;;		_MENU_Memory_Run
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406     1877                     _MENU_RelTest_Init:	
 11407                           ;psect for function _MENU_RelTest_Init
 11408                           
 11409     1877                     l8320:	
 11410                           ;incstack = 0
 11411                           ; Regs used in _MENU_RelTest_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11412                           
 11413                           
 11414                           ;menu.c: 687:   DISP_Clr();
 11415     1877  3199  2146  3198   	fcall	_DISP_Clr
 11416     187A                     l8322:
 11417                           
 11418                           ;menu.c: 688:   BUTTON_Reset();
 11419     187A  31A6  26BE  3198   	fcall	_BUTTON_Reset
 11420     187D                     l8324:
 11421                           
 11422                           ;menu.c: 689:   MENU_var.reltest.cursor = 0;
 11423     187D  0020               	movlb	0	; select bank0
 11424     187E  01DB               	clrf	_MENU_var
 11425     187F                     l8326:
 11426                           
 11427                           ;menu.c: 690:   MENU_var.reltest.relais_backup = UTILI_Get_LC_Relays();
 11428     187F  3198  2013  3198   	fcall	_UTILI_Get_LC_Relays
 11429     1882  0871               	movf	?_UTILI_Get_LC_Relays+1,w
 11430     1883  0020               	movlb	0	; select bank0
 11431     1884  00DD               	movwf	_MENU_var+2
 11432     1885  0870               	movf	?_UTILI_Get_LC_Relays,w
 11433     1886  00DC               	movwf	_MENU_var+1
 11434     1887                     l8328:
 11435                           
 11436                           ;menu.c: 691:   MENU_var.reltest.update_cnt = 0;
 11437     1887  01DE               	clrf	_MENU_var+3
 11438     1888                     l8330:
 11439                           
 11440                           ;menu.c: 692:   global.cap_sw = 0;
 11441     1888  0021               	movlb	1	; select bank1
 11442     1889  01D8               	clrf	(_global^(0+128)+27)
 11443     188A                     l8332:
 11444                           
 11445                           ;menu.c: 693:   global.cap_relays = 0;
 11446     188A  01D9               	clrf	(_global^(0+128)+28)
 11447     188B                     l8334:
 11448                           
 11449                           ;menu.c: 694:   global.ind_relays = 0;
 11450     188B  01DA               	clrf	(_global^(0+128)+29)
 11451     188C                     l8336:
 11452                           
 11453                           ;menu.c: 695:   UTILI_SetRelays();
 11454     188C  3194  2499  3198   	fcall	_UTILI_SetRelays
 11455     188F                     l8338:
 11456                           
 11457                           ;menu.c: 696:   MENU_RelTest_Update();
 11458     188F  318A  2289  3198   	fcall	_MENU_RelTest_Update
 11459     1892                     l1306:
 11460     1892  0008               	return
 11461     1893                     __end_of_MENU_RelTest_Init:
 11462                           
 11463                           	psect	text23
 11464     1A0E                     __ptext23:	
 11465 ;; *************** function _MENU_Sleep_Init *****************
 11466 ;; Defined at:
 11467 ;;		line 572 in file "menu.c"
 11468 ;; Parameters:    Size  Location     Type
 11469 ;;		None
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;		None
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      void 
 11474 ;; Registers used:
 11475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11485 ;;Total ram usage:        0 bytes
 11486 ;; Hardware stack levels used: 1
 11487 ;; Hardware stack levels required when called: 1
 11488 ;; This function calls:
 11489 ;;		_BUTTON_Reset
 11490 ;;		_DISP_Clr
 11491 ;;		_DISP_Str
 11492 ;;		_MENU_Sleep_Update
 11493 ;; This function is called by:
 11494 ;;		_MENU_Main_Run
 11495 ;;		_MENU_Sub_Run
 11496 ;;		_MENU_Memory_Run
 11497 ;; This function uses a non-reentrant model
 11498 ;;
 11499                           
 11500     1A0E                     _MENU_Sleep_Init:	
 11501                           ;psect for function _MENU_Sleep_Init
 11502                           
 11503     1A0E                     l8304:	
 11504                           ;incstack = 0
 11505                           ; Regs used in _MENU_Sleep_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11506                           
 11507                           
 11508                           ;menu.c: 574:   DISP_Clr();
 11509     1A0E  3199  2146  319A   	fcall	_DISP_Clr
 11510     1A11                     l8306:
 11511                           
 11512                           ;menu.c: 575:   BUTTON_Reset();
 11513     1A11  31A6  26BE  319A   	fcall	_BUTTON_Reset
 11514     1A14                     l8308:
 11515                           
 11516                           ;menu.c: 576:   DISP_Str(0, 0, str_Sleep, 0);
 11517     1A14  01F8               	clrf	DISP_Str@row
 11518     1A15  3096               	movlw	low (_str_Sleep| (0+32768))
 11519     1A16  00F9               	movwf	DISP_Str@str
 11520     1A17  30A9               	movlw	high (_str_Sleep| (0+32768))
 11521     1A18  00FA               	movwf	DISP_Str@str+1
 11522     1A19  01FB               	clrf	DISP_Str@invert
 11523     1A1A  3000               	movlw	0
 11524     1A1B  318D  2547  319A   	fcall	_DISP_Str
 11525     1A1E                     l8310:
 11526                           
 11527                           ;menu.c: 577:   DISP_Str(0, 1, str_Delay,0);
 11528     1A1E  01F8               	clrf	DISP_Str@row
 11529     1A1F  0AF8               	incf	DISP_Str@row,f
 11530     1A20  309C               	movlw	low (_str_Delay| (0+32768))
 11531     1A21  00F9               	movwf	DISP_Str@str
 11532     1A22  30A9               	movlw	high (_str_Delay| (0+32768))
 11533     1A23  00FA               	movwf	DISP_Str@str+1
 11534     1A24  01FB               	clrf	DISP_Str@invert
 11535     1A25  3000               	movlw	0
 11536     1A26  318D  2547  319A   	fcall	_DISP_Str
 11537     1A29                     l8312:
 11538                           
 11539                           ;menu.c: 578:   MENU_var.sleep.cursor=0;
 11540     1A29  0020               	movlb	0	; select bank0
 11541     1A2A  01DB               	clrf	_MENU_var
 11542     1A2B                     l8314:
 11543                           
 11544                           ;menu.c: 579:   MENU_var.sleep.enable = global.sleep_enable;
 11545     1A2B  0021               	movlb	1	; select bank1
 11546     1A2C  0846               	movf	(_global^(0+128)+9),w
 11547     1A2D  0020               	movlb	0	; select bank0
 11548     1A2E  00DC               	movwf	_MENU_var+1
 11549     1A2F                     l8316:
 11550                           
 11551                           ;menu.c: 580:   MENU_var.sleep.delay_sec = global.sleep_delay_sec;
 11552     1A2F  0021               	movlb	1	; select bank1
 11553     1A30  0848               	movf	((_global+1)^(0+128)+10),w
 11554     1A31  0020               	movlb	0	; select bank0
 11555     1A32  00DE               	movwf	_MENU_var+3
 11556     1A33  0021               	movlb	1	; select bank1
 11557     1A34  0847               	movf	(_global^(0+128)+10),w
 11558     1A35  0020               	movlb	0	; select bank0
 11559     1A36  00DD               	movwf	_MENU_var+2
 11560     1A37                     l8318:
 11561                           
 11562                           ;menu.c: 581:   MENU_Sleep_Update();
 11563     1A37  3192  22B2  319A   	fcall	_MENU_Sleep_Update
 11564     1A3A                     l1282:
 11565     1A3A  0008               	return
 11566     1A3B                     __end_of_MENU_Sleep_Init:
 11567                           
 11568                           	psect	text24
 11569     1D81                     __ptext24:	
 11570 ;; *************** function _MENU_TParam_Init *****************
 11571 ;; Defined at:
 11572 ;;		line 454 in file "menu.c"
 11573 ;; Parameters:    Size  Location     Type
 11574 ;;		None
 11575 ;; Auto vars:     Size  Location     Type
 11576 ;;		None
 11577 ;; Return value:  Size  Location     Type
 11578 ;;                  1    wreg      void 
 11579 ;; Registers used:
 11580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11581 ;; Tracked objects:
 11582 ;;		On entry : 0/0
 11583 ;;		On exit  : 0/0
 11584 ;;		Unchanged: 0/0
 11585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11590 ;;Total ram usage:        0 bytes
 11591 ;; Hardware stack levels used: 1
 11592 ;; Hardware stack levels required when called: 1
 11593 ;; This function calls:
 11594 ;;		_BUTTON_Reset
 11595 ;;		_DISP_Clr
 11596 ;;		_DISP_Str
 11597 ;;		_MENU_TParam_Update
 11598 ;; This function is called by:
 11599 ;;		_MENU_Main_Run
 11600 ;;		_MENU_Sub_Run
 11601 ;;		_MENU_Memory_Run
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605     1D81                     _MENU_TParam_Init:	
 11606                           ;psect for function _MENU_TParam_Init
 11607                           
 11608     1D81                     l8272:	
 11609                           ;incstack = 0
 11610                           ; Regs used in _MENU_TParam_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11611                           
 11612                           
 11613                           ;menu.c: 456:   DISP_Clr();
 11614     1D81  3199  2146  319D   	fcall	_DISP_Clr
 11615     1D84                     l8274:
 11616                           
 11617                           ;menu.c: 457:   BUTTON_Reset();
 11618     1D84  31A6  26BE  319D   	fcall	_BUTTON_Reset
 11619     1D87                     l8276:
 11620                           
 11621                           ;menu.c: 458:   DISP_Str(0, 0,str_Auto, 0);
 11622     1D87  01F8               	clrf	DISP_Str@row
 11623     1D88  30CA               	movlw	low (_str_Auto| (0+32768))
 11624     1D89  00F9               	movwf	DISP_Str@str
 11625     1D8A  30A9               	movlw	high (_str_Auto| (0+32768))
 11626     1D8B  00FA               	movwf	DISP_Str@str+1
 11627     1D8C  01FB               	clrf	DISP_Str@invert
 11628     1D8D  3000               	movlw	0
 11629     1D8E  318D  2547  319D   	fcall	_DISP_Str
 11630     1D91                     l8278:
 11631                           
 11632                           ;menu.c: 459:   DISP_Str(0, 1,str_Start,0);
 11633     1D91  01F8               	clrf	DISP_Str@row
 11634     1D92  0AF8               	incf	DISP_Str@row,f
 11635     1D93  3090               	movlw	low (_str_Start| (0+32768))
 11636     1D94  00F9               	movwf	DISP_Str@str
 11637     1D95  30A9               	movlw	high (_str_Start| (0+32768))
 11638     1D96  00FA               	movwf	DISP_Str@str+1
 11639     1D97  01FB               	clrf	DISP_Str@invert
 11640     1D98  3000               	movlw	0
 11641     1D99  318D  2547  319D   	fcall	_DISP_Str
 11642     1D9C                     l8280:
 11643                           
 11644                           ;menu.c: 460:   DISP_Str(0, 2,str_Stop,0);
 11645     1D9C  3002               	movlw	2
 11646     1D9D  00F8               	movwf	DISP_Str@row
 11647     1D9E  30C5               	movlw	low (_str_Stop| (0+32768))
 11648     1D9F  00F9               	movwf	DISP_Str@str
 11649     1DA0  30A9               	movlw	high (_str_Stop| (0+32768))
 11650     1DA1  00FA               	movwf	DISP_Str@str+1
 11651     1DA2  01FB               	clrf	DISP_Str@invert
 11652     1DA3  3000               	movlw	0
 11653     1DA4  318D  2547  319D   	fcall	_DISP_Str
 11654     1DA7                     l8282:
 11655                           
 11656                           ;menu.c: 462:   MENU_var.tparam.cursor=0;
 11657     1DA7  0020               	movlb	0	; select bank0
 11658     1DA8  01DB               	clrf	_MENU_var
 11659     1DA9                     l8284:
 11660                           
 11661                           ;menu.c: 463:   MENU_var.tparam.auto_enable = global.tune_auto_enable;
 11662     1DA9  0021               	movlb	1	; select bank1
 11663     1DAA  0845               	movf	(_global^(0+128)+8),w
 11664     1DAB  0020               	movlb	0	; select bank0
 11665     1DAC  00E0               	movwf	_MENU_var+5
 11666     1DAD                     l8286:
 11667                           
 11668                           ;menu.c: 464:   MENU_var.tparam.auto_swr = global.tune_auto_swr;
 11669     1DAD  0021               	movlb	1	; select bank1
 11670     1DAE  0844               	movf	((_global+1)^(0+128)+6),w
 11671     1DAF  0020               	movlb	0	; select bank0
 11672     1DB0  00DF               	movwf	_MENU_var+4
 11673     1DB1  0021               	movlb	1	; select bank1
 11674     1DB2  0843               	movf	(_global^(0+128)+6),w
 11675     1DB3  0020               	movlb	0	; select bank0
 11676     1DB4  00DE               	movwf	_MENU_var+3
 11677     1DB5                     l8288:
 11678                           
 11679                           ;menu.c: 465:   MENU_var.tparam.stop_swr = global.tune_stop_swr;
 11680     1DB5  0021               	movlb	1	; select bank1
 11681     1DB6  0842               	movf	((_global+1)^(0+128)+4),w
 11682     1DB7  0020               	movlb	0	; select bank0
 11683     1DB8  00DD               	movwf	_MENU_var+2
 11684     1DB9  0021               	movlb	1	; select bank1
 11685     1DBA  0841               	movf	(_global^(0+128)+4),w
 11686     1DBB  0020               	movlb	0	; select bank0
 11687     1DBC  00DC               	movwf	_MENU_var+1
 11688     1DBD                     l8290:
 11689                           
 11690                           ;menu.c: 466:   MENU_TParam_Update();
 11691     1DBD  3193  2325  319D   	fcall	_MENU_TParam_Update
 11692     1DC0                     l1258:
 11693     1DC0  0008               	return
 11694     1DC1                     __end_of_MENU_TParam_Init:
 11695                           
 11696                           	psect	text25
 11697     1C65                     __ptext25:	
 11698 ;; *************** function _MENU_About_Init *****************
 11699 ;; Defined at:
 11700 ;;		line 1324 in file "menu.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;		None
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;		None
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  1    wreg      void 
 11707 ;; Registers used:
 11708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/0
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11718 ;;Total ram usage:        0 bytes
 11719 ;; Hardware stack levels used: 1
 11720 ;; Hardware stack levels required when called: 1
 11721 ;; This function calls:
 11722 ;;		_BUTTON_Reset
 11723 ;;		_DISP_Clr
 11724 ;;		_DISP_Str
 11725 ;; This function is called by:
 11726 ;;		_MENU_Main_Run
 11727 ;;		_MENU_Sub_Run
 11728 ;;		_MENU_Memory_Run
 11729 ;; This function uses a non-reentrant model
 11730 ;;
 11731                           
 11732     1C65                     _MENU_About_Init:	
 11733                           ;psect for function _MENU_About_Init
 11734                           
 11735     1C65                     l8438:	
 11736                           ;incstack = 0
 11737                           ; Regs used in _MENU_About_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11738                           
 11739                           
 11740                           ;menu.c: 1326:   DISP_Clr();
 11741     1C65  3199  2146  319C   	fcall	_DISP_Clr
 11742     1C68                     l8440:
 11743                           
 11744                           ;menu.c: 1327:   DISP_Str(0x80,0,str_Hardware,0);
 11745     1C68  01F8               	clrf	DISP_Str@row
 11746     1C69  3013               	movlw	low (_str_Hardware| (0+32768))
 11747     1C6A  00F9               	movwf	DISP_Str@str
 11748     1C6B  30A9               	movlw	high (_str_Hardware| (0+32768))
 11749     1C6C  00FA               	movwf	DISP_Str@str+1
 11750     1C6D  01FB               	clrf	DISP_Str@invert
 11751     1C6E  3080               	movlw	128
 11752     1C6F  318D  2547  319C   	fcall	_DISP_Str
 11753     1C72                     l8442:
 11754                           
 11755                           ;menu.c: 1328:   DISP_Str(0x80,1,str_designed,0);
 11756     1C72  01F8               	clrf	DISP_Str@row
 11757     1C73  0AF8               	incf	DISP_Str@row,f
 11758     1C74  300A               	movlw	low (_str_designed| (0+32768))
 11759     1C75  00F9               	movwf	DISP_Str@str
 11760     1C76  30A9               	movlw	high (_str_designed| (0+32768))
 11761     1C77  00FA               	movwf	DISP_Str@str+1
 11762     1C78  01FB               	clrf	DISP_Str@invert
 11763     1C79  3080               	movlw	128
 11764     1C7A  318D  2547  319C   	fcall	_DISP_Str
 11765     1C7D                     l8444:
 11766                           
 11767                           ;menu.c: 1329:   DISP_Str(0x80,2,str_by,0);
 11768     1C7D  3002               	movlw	2
 11769     1C7E  00F8               	movwf	DISP_Str@row
 11770     1C7F  30FB               	movlw	low (_str_by| (0+32768))
 11771     1C80  00F9               	movwf	DISP_Str@str
 11772     1C81  30A9               	movlw	high (_str_by| (0+32768))
 11773     1C82  00FA               	movwf	DISP_Str@str+1
 11774     1C83  01FB               	clrf	DISP_Str@invert
 11775     1C84  3080               	movlw	128
 11776     1C85  318D  2547  319C   	fcall	_DISP_Str
 11777     1C88                     l8446:
 11778                           
 11779                           ;menu.c: 1330:   DISP_Str(0x80,3,str_N7DCC,0);
 11780     1C88  3003               	movlw	3
 11781     1C89  00F8               	movwf	DISP_Str@row
 11782     1C8A  30B4               	movlw	low (_str_N7DCC| (0+32768))
 11783     1C8B  00F9               	movwf	DISP_Str@str
 11784     1C8C  30A9               	movlw	high (_str_N7DCC| (0+32768))
 11785     1C8D  00FA               	movwf	DISP_Str@str+1
 11786     1C8E  01FB               	clrf	DISP_Str@invert
 11787     1C8F  3080               	movlw	128
 11788     1C90  318D  2547  319C   	fcall	_DISP_Str
 11789     1C93                     l8448:
 11790                           
 11791                           ;menu.c: 1331:   BUTTON_Reset();
 11792     1C93  31A6  26BE  319C   	fcall	_BUTTON_Reset
 11793     1C96                     l8450:
 11794                           
 11795                           ;menu.c: 1332:   MENU_var.about.step=0;
 11796     1C96  0020               	movlb	0	; select bank0
 11797     1C97  01DB               	clrf	_MENU_var
 11798     1C98                     l8452:
 11799                           
 11800                           ;menu.c: 1333:   MENU_var.about.timeout=0;
 11801     1C98  01DC               	clrf	_MENU_var+1
 11802     1C99  01DD               	clrf	_MENU_var+2
 11803     1C9A                     l1490:
 11804     1C9A  0008               	return
 11805     1C9B                     __end_of_MENU_About_Init:
 11806                           
 11807                           	psect	text26
 11808     1800                     __ptext26:	
 11809 ;; *************** function _MENU_MemoryLoad_Init *****************
 11810 ;; Defined at:
 11811 ;;		line 1067 in file "menu.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;		None
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;		None
 11816 ;; Return value:  Size  Location     Type
 11817 ;;                  1    wreg      void 
 11818 ;; Registers used:
 11819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11820 ;; Tracked objects:
 11821 ;;		On entry : 0/0
 11822 ;;		On exit  : 0/0
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11829 ;;Total ram usage:        0 bytes
 11830 ;; Hardware stack levels used: 1
 11831 ;; Hardware stack levels required when called: 1
 11832 ;; This function calls:
 11833 ;;		_DISP_Clr
 11834 ;;		_DISP_Str
 11835 ;;		_MENU_Memory_Init
 11836 ;; This function is called by:
 11837 ;;		_MENU_Main_Run
 11838 ;;		_MENU_Sub_Run
 11839 ;;		_MENU_Memory_Run
 11840 ;; This function uses a non-reentrant model
 11841 ;;
 11842                           
 11843     1800                     _MENU_MemoryLoad_Init:	
 11844                           ;psect for function _MENU_MemoryLoad_Init
 11845                           
 11846     1800                     l8386:	
 11847                           ;incstack = 0
 11848                           ; Regs used in _MENU_MemoryLoad_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11849                           
 11850                           
 11851                           ;menu.c: 1069:   DISP_Clr();
 11852     1800  3199  2146  3198   	fcall	_DISP_Clr
 11853     1803                     l8388:
 11854                           
 11855                           ;menu.c: 1070:   DISP_Str(0,0,str_MENU_Load,0);
 11856     1803  01F8               	clrf	DISP_Str@row
 11857     1804  30C2               	movlw	low (_str_MENU_Load| (0+32768))
 11858     1805  00F9               	movwf	DISP_Str@str
 11859     1806  30A8               	movlw	high (_str_MENU_Load| (0+32768))
 11860     1807  00FA               	movwf	DISP_Str@str+1
 11861     1808  01FB               	clrf	DISP_Str@invert
 11862     1809  3000               	movlw	0
 11863     180A  318D  2547  3198   	fcall	_DISP_Str
 11864     180D                     l8390:
 11865                           
 11866                           ;menu.c: 1071:   MENU_var.memory.save_mode =0;
 11867     180D  0020               	movlb	0	; select bank0
 11868     180E  01DE               	clrf	_MENU_var+3
 11869     180F                     l8392:
 11870                           
 11871                           ;menu.c: 1072:   MENU_Memory_Init();
 11872     180F  31A6  26E7  3198   	fcall	_MENU_Memory_Init
 11873     1812                     l1416:
 11874     1812  0008               	return
 11875     1813                     __end_of_MENU_MemoryLoad_Init:
 11876                           
 11877                           	psect	text27
 11878     276C                     __ptext27:	
 11879 ;; *************** function _MENU_MemorySave_Init *****************
 11880 ;; Defined at:
 11881 ;;		line 1075 in file "menu.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;		None
 11884 ;; Auto vars:     Size  Location     Type
 11885 ;;		None
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  1    wreg      void 
 11888 ;; Registers used:
 11889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;Total ram usage:        0 bytes
 11900 ;; Hardware stack levels used: 1
 11901 ;; Hardware stack levels required when called: 1
 11902 ;; This function calls:
 11903 ;;		_DISP_Clr
 11904 ;;		_DISP_Str
 11905 ;;		_MENU_Memory_Init
 11906 ;; This function is called by:
 11907 ;;		_MENU_Main_Run
 11908 ;;		_MENU_Sub_Run
 11909 ;;		_MENU_Memory_Run
 11910 ;; This function uses a non-reentrant model
 11911 ;;
 11912                           
 11913     276C                     _MENU_MemorySave_Init:	
 11914                           ;psect for function _MENU_MemorySave_Init
 11915                           
 11916     276C                     l8394:	
 11917                           ;incstack = 0
 11918                           ; Regs used in _MENU_MemorySave_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11919                           
 11920                           
 11921                           ;menu.c: 1077:   DISP_Clr();
 11922     276C  3199  2146  31A7   	fcall	_DISP_Clr
 11923     276F                     l8396:
 11924                           
 11925                           ;menu.c: 1078:   DISP_Str(0,0,str_MENU_Save,0);
 11926     276F  01F8               	clrf	DISP_Str@row
 11927     2770  30CD               	movlw	low (_str_MENU_Save| (0+32768))
 11928     2771  00F9               	movwf	DISP_Str@str
 11929     2772  30A8               	movlw	high (_str_MENU_Save| (0+32768))
 11930     2773  00FA               	movwf	DISP_Str@str+1
 11931     2774  01FB               	clrf	DISP_Str@invert
 11932     2775  3000               	movlw	0
 11933     2776  318D  2547  31A7   	fcall	_DISP_Str
 11934     2779                     l8398:
 11935                           
 11936                           ;menu.c: 1079:   MENU_var.memory.save_mode =1;
 11937     2779  3001               	movlw	1
 11938     277A  0020               	movlb	0	; select bank0
 11939     277B  00DE               	movwf	_MENU_var+3
 11940     277C                     l8400:
 11941                           
 11942                           ;menu.c: 1080:   MENU_Memory_Init();
 11943     277C  31A6  26E7  31A7   	fcall	_MENU_Memory_Init
 11944     277F                     l1419:
 11945     277F  0008               	return
 11946     2780                     __end_of_MENU_MemorySave_Init:
 11947                           
 11948                           	psect	text28
 11949     27EA                     __ptext28:	
 11950 ;; *************** function _MENU_Reset_Init *****************
 11951 ;; Defined at:
 11952 ;;		line 363 in file "menu.c"
 11953 ;; Parameters:    Size  Location     Type
 11954 ;;		None
 11955 ;; Auto vars:     Size  Location     Type
 11956 ;;		None
 11957 ;; Return value:  Size  Location     Type
 11958 ;;                  1    wreg      void 
 11959 ;; Registers used:
 11960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11961 ;; Tracked objects:
 11962 ;;		On entry : 0/0
 11963 ;;		On exit  : 0/0
 11964 ;;		Unchanged: 0/0
 11965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11970 ;;Total ram usage:        0 bytes
 11971 ;; Hardware stack levels used: 1
 11972 ;; Hardware stack levels required when called: 1
 11973 ;; This function calls:
 11974 ;;		_DISP_Clr
 11975 ;;		_DISP_Str
 11976 ;;		_eeprom_write
 11977 ;; This function is called by:
 11978 ;;		_MENU_Main_Run
 11979 ;;		_MENU_Sub_Run
 11980 ;;		_MENU_Memory_Run
 11981 ;; This function uses a non-reentrant model
 11982 ;;
 11983                           
 11984     27EA                     _MENU_Reset_Init:	
 11985                           ;psect for function _MENU_Reset_Init
 11986                           
 11987     27EA                     l8008:	
 11988                           ;incstack = 0
 11989                           ; Regs used in _MENU_Reset_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11990                           
 11991                           
 11992                           ;menu.c: 366:     eeprom_write(0xFF, 0x00);
 11993     27EA  01F0               	clrf	eeprom_write@value
 11994     27EB  30FF               	movlw	255
 11995     27EC  3198  20EA  31A7   	fcall	_eeprom_write
 11996                           
 11997                           ;menu.c: 368:     DISP_Clr();
 11998     27EF  3199  2146  31A7   	fcall	_DISP_Clr
 11999     27F2                     l8010:
 12000                           
 12001                           ;menu.c: 369:     DISP_Str(0x80, 1, "Restarting", 1);
 12002     27F2  01F8               	clrf	DISP_Str@row
 12003     27F3  0AF8               	incf	DISP_Str@row,f
 12004     27F4  301D               	movlw	low (STR_1| (0+32768))
 12005     27F5  00F9               	movwf	DISP_Str@str
 12006     27F6  30A8               	movlw	high (STR_1| (0+32768))
 12007     27F7  00FA               	movwf	DISP_Str@str+1
 12008     27F8  01FB               	clrf	DISP_Str@invert
 12009     27F9  0AFB               	incf	DISP_Str@invert,f
 12010     27FA  3080               	movlw	128
 12011     27FB  318D  2547  31A7   	fcall	_DISP_Str
 12012     27FE                     l1229:	
 12013                           ;menu.c: 370:     while(1);
 12014                           
 12015     27FE                     l1230:
 12016     27FE  2FFE               	goto	l1229
 12017     27FF  0008               	return
 12018     2800                     __end_of_MENU_Reset_Init:
 12019                           
 12020                           	psect	text29
 12021     27BF                     __ptext29:	
 12022 ;; *************** function _MENU_Bypass_Init *****************
 12023 ;; Defined at:
 12024 ;;		line 374 in file "menu.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;Total ram usage:        0 bytes
 12043 ;; Hardware stack levels used: 1
 12044 ;; Hardware stack levels required when called: 1
 12045 ;; This function calls:
 12046 ;;		_MENU_Init
 12047 ;;		_UTILI_Get_LC_Relays
 12048 ;;		_UTILI_Set_LC_Relays
 12049 ;; This function is called by:
 12050 ;;		_MENU_Main_Run
 12051 ;;		_MENU_Sub_Run
 12052 ;;		_MENU_Memory_Run
 12053 ;; This function uses a non-reentrant model
 12054 ;;
 12055                           
 12056     27BF                     _MENU_Bypass_Init:	
 12057                           ;psect for function _MENU_Bypass_Init
 12058                           
 12059     27BF                     l8012:	
 12060                           ;incstack = 0
 12061                           ; Regs used in _MENU_Bypass_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12062                           
 12063                           
 12064                           ;menu.c: 376:   global.bypass_enable = 1;
 12065     27BF  3001               	movlw	1
 12066     27C0  0021               	movlb	1	; select bank1
 12067     27C1  00C9               	movwf	(_global^(0+128)+12)
 12068     27C2                     l8014:
 12069                           
 12070                           ;menu.c: 377:   global.bypass_save_relais = UTILI_Get_LC_Relays();
 12071     27C2  3198  2013  31A7   	fcall	_UTILI_Get_LC_Relays
 12072     27C5  0871               	movf	?_UTILI_Get_LC_Relays+1,w
 12073     27C6  0021               	movlb	1	; select bank1
 12074     27C7  00CB               	movwf	((_global+1)^(0+128)+13)
 12075     27C8  0870               	movf	?_UTILI_Get_LC_Relays,w
 12076     27C9  00CA               	movwf	(_global^(0+128)+13)
 12077                           
 12078                           ;menu.c: 378:   UTILI_Set_LC_Relays(0);
 12079     27CA  3000               	movlw	0
 12080     27CB  00F1               	movwf	UTILI_Set_LC_Relays@relays
 12081     27CC  00F2               	movwf	UTILI_Set_LC_Relays@relays+1
 12082     27CD  31A7  2758  31A7   	fcall	_UTILI_Set_LC_Relays
 12083     27D0                     l8016:
 12084                           
 12085                           ;menu.c: 379:   MENU_Init();
 12086     27D0  3187  27F6  31A7   	fcall	_MENU_Init
 12087     27D3                     l1235:
 12088     27D3  0008               	return
 12089     27D4                     __end_of_MENU_Bypass_Init:
 12090                           
 12091                           	psect	text30
 12092     27AA                     __ptext30:	
 12093 ;; *************** function _MENU_SubSetup_Init *****************
 12094 ;; Defined at:
 12095 ;;		line 939 in file "menu.c"
 12096 ;; Parameters:    Size  Location     Type
 12097 ;;		None
 12098 ;; Auto vars:     Size  Location     Type
 12099 ;;		None
 12100 ;; Return value:  Size  Location     Type
 12101 ;;                  1    wreg      void 
 12102 ;; Registers used:
 12103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12104 ;; Tracked objects:
 12105 ;;		On entry : 0/0
 12106 ;;		On exit  : 0/0
 12107 ;;		Unchanged: 0/0
 12108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12113 ;;Total ram usage:        0 bytes
 12114 ;; Hardware stack levels used: 1
 12115 ;; Hardware stack levels required when called: 1
 12116 ;; This function calls:
 12117 ;;		_BUTTON_Reset
 12118 ;;		_DISP_Clr
 12119 ;;		_MENU_Sub_Update
 12120 ;; This function is called by:
 12121 ;;		_MENU_Main_Run
 12122 ;;		_MENU_Sub_Run
 12123 ;;		_MENU_Memory_Run
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127     27AA                     _MENU_SubSetup_Init:	
 12128                           ;psect for function _MENU_SubSetup_Init
 12129                           
 12130     27AA                     l8354:	
 12131                           ;incstack = 0
 12132                           ; Regs used in _MENU_SubSetup_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12133                           
 12134                           
 12135                           ;menu.c: 941:   DISP_Clr();
 12136     27AA  3199  2146  31A7   	fcall	_DISP_Clr
 12137     27AD                     l8356:
 12138                           
 12139                           ;menu.c: 942:   BUTTON_Reset();
 12140     27AD  31A6  26BE  31A7   	fcall	_BUTTON_Reset
 12141     27B0                     l8358:
 12142                           
 12143                           ;menu.c: 944:   MENU_var.sub.cursor =0;
 12144     27B0  0020               	movlb	0	; select bank0
 12145     27B1  01DC               	clrf	_MENU_var+1
 12146     27B2                     l8360:
 12147                           
 12148                           ;menu.c: 945:   MENU_var.sub.top=0;
 12149     27B2  01DD               	clrf	_MENU_var+2
 12150     27B3                     l8362:
 12151                           
 12152                           ;menu.c: 946:   MENU_var.sub.timeout =0;
 12153     27B3  01DE               	clrf	_MENU_var+3
 12154     27B4  01DF               	clrf	_MENU_var+4
 12155     27B5                     l8364:
 12156                           
 12157                           ;menu.c: 947:   MENU_var.sub.items = 4;
 12158     27B5  3004               	movlw	4
 12159     27B6  00DB               	movwf	_MENU_var
 12160     27B7                     l8366:
 12161                           
 12162                           ;menu.c: 948:   MENU_var.sub.ptrMenu = ptrSubSetupMenu;
 12163     27B7  3060               	movlw	low _ptrSubSetupMenu
 12164     27B8  00E0               	movwf	_MENU_var+5
 12165     27B9  3001               	movlw	high _ptrSubSetupMenu
 12166     27BA  00E1               	movwf	_MENU_var+6
 12167     27BB                     l8368:
 12168                           
 12169                           ;menu.c: 950:   MENU_Sub_Update();
 12170     27BB  319C  242F  31A7   	fcall	_MENU_Sub_Update
 12171     27BE                     l1382:
 12172     27BE  0008               	return
 12173     27BF                     __end_of_MENU_SubSetup_Init:
 12174                           
 12175                           	psect	text31
 12176     2795                     __ptext31:	
 12177 ;; *************** function _MENU_SubTop_Init *****************
 12178 ;; Defined at:
 12179 ;;		line 954 in file "menu.c"
 12180 ;; Parameters:    Size  Location     Type
 12181 ;;		None
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;		None
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  1    wreg      void 
 12186 ;; Registers used:
 12187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12197 ;;Total ram usage:        0 bytes
 12198 ;; Hardware stack levels used: 1
 12199 ;; Hardware stack levels required when called: 1
 12200 ;; This function calls:
 12201 ;;		_BUTTON_Reset
 12202 ;;		_DISP_Clr
 12203 ;;		_MENU_Sub_Update
 12204 ;; This function is called by:
 12205 ;;		_MENU_Main_Run
 12206 ;;		_MENU_Sub_Run
 12207 ;;		_MENU_Memory_Run
 12208 ;; This function uses a non-reentrant model
 12209 ;;
 12210                           
 12211     2795                     _MENU_SubTop_Init:	
 12212                           ;psect for function _MENU_SubTop_Init
 12213                           
 12214     2795                     l8370:	
 12215                           ;incstack = 0
 12216                           ; Regs used in _MENU_SubTop_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12217                           
 12218                           
 12219                           ;menu.c: 956:   DISP_Clr();
 12220     2795  3199  2146  31A7   	fcall	_DISP_Clr
 12221     2798                     l8372:
 12222                           
 12223                           ;menu.c: 957:   BUTTON_Reset();
 12224     2798  31A6  26BE  31A7   	fcall	_BUTTON_Reset
 12225     279B                     l8374:
 12226                           
 12227                           ;menu.c: 959:   MENU_var.sub.cursor =0;
 12228     279B  0020               	movlb	0	; select bank0
 12229     279C  01DC               	clrf	_MENU_var+1
 12230     279D                     l8376:
 12231                           
 12232                           ;menu.c: 960:   MENU_var.sub.top=0;
 12233     279D  01DD               	clrf	_MENU_var+2
 12234     279E                     l8378:
 12235                           
 12236                           ;menu.c: 961:   MENU_var.sub.timeout =0;
 12237     279E  01DE               	clrf	_MENU_var+3
 12238     279F  01DF               	clrf	_MENU_var+4
 12239     27A0                     l8380:
 12240                           
 12241                           ;menu.c: 962:   MENU_var.sub.items = 6;
 12242     27A0  3006               	movlw	6
 12243     27A1  00DB               	movwf	_MENU_var
 12244     27A2                     l8382:
 12245                           
 12246                           ;menu.c: 963:   MENU_var.sub.ptrMenu = ptrSubTopMenu;
 12247     27A2  3054               	movlw	low _ptrSubTopMenu
 12248     27A3  00E0               	movwf	_MENU_var+5
 12249     27A4  3001               	movlw	high _ptrSubTopMenu
 12250     27A5  00E1               	movwf	_MENU_var+6
 12251     27A6                     l8384:
 12252                           
 12253                           ;menu.c: 965:   MENU_Sub_Update();
 12254     27A6  319C  242F  31A7   	fcall	_MENU_Sub_Update
 12255     27A9                     l1385:
 12256     27A9  0008               	return
 12257     27AA                     __end_of_MENU_SubTop_Init:
 12258                           
 12259                           	psect	text32
 12260     1AF8                     __ptext32:	
 12261 ;; *************** function _MENU_Main_Init *****************
 12262 ;; Defined at:
 12263 ;;		line 245 in file "menu.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;		None
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;		None
 12268 ;; Return value:  Size  Location     Type
 12269 ;;                  1    wreg      void 
 12270 ;; Registers used:
 12271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12272 ;; Tracked objects:
 12273 ;;		On entry : 0/0
 12274 ;;		On exit  : 0/0
 12275 ;;		Unchanged: 0/0
 12276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12281 ;;Total ram usage:        0 bytes
 12282 ;; Hardware stack levels used: 1
 12283 ;; Hardware stack levels required when called: 1
 12284 ;; This function calls:
 12285 ;;		_BUTTON_Reset
 12286 ;;		_DISP_Clr
 12287 ;;		_DISP_Str
 12288 ;;		_UTILI_Get_LC_Relays
 12289 ;; This function is called by:
 12290 ;;		_MENU_Main_Weakup
 12291 ;;		_MENU_Init
 12292 ;;		_MENU_Main_Run
 12293 ;;		_MENU_Sub_Run
 12294 ;;		_MENU_Memory_Run
 12295 ;; This function uses a non-reentrant model
 12296 ;;
 12297                           
 12298     1AF8                     _MENU_Main_Init:	
 12299                           ;psect for function _MENU_Main_Init
 12300                           
 12301     1AF8                     l7698:	
 12302                           ;incstack = 0
 12303                           ; Regs used in _MENU_Main_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12304                           
 12305                           
 12306                           ;menu.c: 247:   DISP_Clr();
 12307     1AF8  3199  2146  319A   	fcall	_DISP_Clr
 12308     1AFB                     l7700:
 12309                           
 12310                           ;menu.c: 248:   BUTTON_Reset();
 12311     1AFB  31A6  26BE  319A   	fcall	_BUTTON_Reset
 12312     1AFE                     l7702:
 12313                           
 12314                           ;menu.c: 249:   DISP_Str(0, 0,str_PWR,0);
 12315     1AFE  01F8               	clrf	DISP_Str@row
 12316     1AFF  30EA               	movlw	low (_str_PWR| (0+32768))
 12317     1B00  00F9               	movwf	DISP_Str@str
 12318     1B01  30A9               	movlw	high (_str_PWR| (0+32768))
 12319     1B02  00FA               	movwf	DISP_Str@str+1
 12320     1B03  01FB               	clrf	DISP_Str@invert
 12321     1B04  3000               	movlw	0
 12322     1B05  318D  2547  319A   	fcall	_DISP_Str
 12323     1B08                     l7704:
 12324                           
 12325                           ;menu.c: 250:   DISP_Str(0, 1,str_SWR,0);
 12326     1B08  01F8               	clrf	DISP_Str@row
 12327     1B09  0AF8               	incf	DISP_Str@row,f
 12328     1B0A  30EE               	movlw	low (_str_SWR| (0+32768))
 12329     1B0B  00F9               	movwf	DISP_Str@str
 12330     1B0C  30A9               	movlw	high (_str_SWR| (0+32768))
 12331     1B0D  00FA               	movwf	DISP_Str@str+1
 12332     1B0E  01FB               	clrf	DISP_Str@invert
 12333     1B0F  3000               	movlw	0
 12334     1B10  318D  2547  319A   	fcall	_DISP_Str
 12335     1B13                     l7706:
 12336                           
 12337                           ;menu.c: 251:   MENU_var.main.update_cnt = 0;
 12338     1B13  0020               	movlb	0	; select bank0
 12339     1B14  01DB               	clrf	_MENU_var
 12340     1B15                     l7708:
 12341                           
 12342                           ;menu.c: 252:   MENU_var.main.old_pwr = -1;
 12343     1B15  30FF               	movlw	255
 12344     1B16  00DC               	movwf	_MENU_var+1
 12345     1B17  30FF               	movlw	255
 12346     1B18  00DD               	movwf	_MENU_var+2
 12347                           
 12348                           ;menu.c: 253:   MENU_var.main.counter_1sec =0;
 12349     1B19  01E0               	clrf	_MENU_var+5
 12350                           
 12351                           ;menu.c: 254:   MENU_var.main.sleep_timer =0;
 12352     1B1A  01DE               	clrf	_MENU_var+3
 12353     1B1B  01DF               	clrf	_MENU_var+4
 12354     1B1C                     l7710:
 12355                           
 12356                           ;menu.c: 255:   MENU_var.main.relais_backup = UTILI_Get_LC_Relays();
 12357     1B1C  3198  2013  319A   	fcall	_UTILI_Get_LC_Relays
 12358     1B1F  0871               	movf	?_UTILI_Get_LC_Relays+1,w
 12359     1B20  0020               	movlb	0	; select bank0
 12360     1B21  00E2               	movwf	_MENU_var+7
 12361     1B22  0870               	movf	?_UTILI_Get_LC_Relays,w
 12362     1B23  00E1               	movwf	_MENU_var+6
 12363     1B24                     l7712:
 12364                           
 12365                           ;menu.c: 256:   global.PWR = 0;
 12366     1B24  0021               	movlb	1	; select bank1
 12367     1B25  01BD               	clrf	_global^(0+128)
 12368     1B26  01BE               	clrf	(_global+1)^(0+128)
 12369     1B27                     l7714:
 12370                           
 12371                           ;menu.c: 257:   global.SWR = 0;
 12372     1B27  01BF               	clrf	(_global^(0+128)+2)
 12373     1B28  01C0               	clrf	((_global+1)^(0+128)+2)
 12374     1B29                     l1197:
 12375     1B29  0008               	return
 12376     1B2A                     __end_of_MENU_Main_Init:
 12377                           
 12378                           	psect	text33
 12379     1927                     __ptext33:	
 12380 ;; *************** function _MENU_Tune_Init *****************
 12381 ;; Defined at:
 12382 ;;		line 401 in file "menu.c"
 12383 ;; Parameters:    Size  Location     Type
 12384 ;;		None
 12385 ;; Auto vars:     Size  Location     Type
 12386 ;;		None
 12387 ;; Return value:  Size  Location     Type
 12388 ;;                  1    wreg      void 
 12389 ;; Registers used:
 12390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12391 ;; Tracked objects:
 12392 ;;		On entry : 0/0
 12393 ;;		On exit  : 0/0
 12394 ;;		Unchanged: 0/0
 12395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12400 ;;Total ram usage:        0 bytes
 12401 ;; Hardware stack levels used: 1
 12402 ;; Hardware stack levels required when called: 1
 12403 ;; This function calls:
 12404 ;;		_BUTTON_Reset
 12405 ;;		_DISP_Clr
 12406 ;;		_DISP_Str
 12407 ;;		_TUNE_Init
 12408 ;;		_UTILI_Get_LC_Relays
 12409 ;; This function is called by:
 12410 ;;		_MENU_Main_Run
 12411 ;;		_MENU_Sub_Run
 12412 ;;		_MENU_Memory_Run
 12413 ;; This function uses a non-reentrant model
 12414 ;;
 12415                           
 12416     1927                     _MENU_Tune_Init:	
 12417                           ;psect for function _MENU_Tune_Init
 12418                           
 12419     1927                     l8028:	
 12420                           ;incstack = 0
 12421                           ; Regs used in _MENU_Tune_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12422                           
 12423                           
 12424                           ;menu.c: 403:   DISP_Clr();
 12425     1927  3199  2146  3199   	fcall	_DISP_Clr
 12426     192A                     l8030:
 12427                           
 12428                           ;menu.c: 404:   BUTTON_Reset();
 12429     192A  31A6  26BE  3199   	fcall	_BUTTON_Reset
 12430     192D                     l8032:
 12431                           
 12432                           ;menu.c: 405:   DISP_Str(0x80, 0, str__Tune_, 1);
 12433     192D  01F8               	clrf	DISP_Str@row
 12434     192E  3001               	movlw	low (_str__Tune_| (0+32768))
 12435     192F  00F9               	movwf	DISP_Str@str
 12436     1930  30A9               	movlw	high (_str__Tune_| (0+32768))
 12437     1931  00FA               	movwf	DISP_Str@str+1
 12438     1932  01FB               	clrf	DISP_Str@invert
 12439     1933  0AFB               	incf	DISP_Str@invert,f
 12440     1934  3080               	movlw	128
 12441     1935  318D  2547  3199   	fcall	_DISP_Str
 12442     1938                     l8034:
 12443                           
 12444                           ;menu.c: 406:   MENU_var.tune.blink=0;
 12445     1938  0020               	movlb	0	; select bank0
 12446     1939  01DC               	clrf	_MENU_var+1
 12447     193A                     l8036:
 12448                           
 12449                           ;menu.c: 407:   MENU_var.tune.relays_backup = UTILI_Get_LC_Relays();
 12450     193A  3198  2013  3199   	fcall	_UTILI_Get_LC_Relays
 12451     193D  0871               	movf	?_UTILI_Get_LC_Relays+1,w
 12452     193E  0020               	movlb	0	; select bank0
 12453     193F  00DE               	movwf	_MENU_var+3
 12454     1940  0870               	movf	?_UTILI_Get_LC_Relays,w
 12455     1941  00DD               	movwf	_MENU_var+2
 12456     1942                     l8038:
 12457                           
 12458                           ;menu.c: 408:   TUNE_Init();
 12459     1942  31A7  2700  3199   	fcall	_TUNE_Init
 12460     1945                     l1244:
 12461     1945  0008               	return
 12462     1946                     __end_of_MENU_Tune_Init:
 12463                           
 12464                           	psect	text34
 12465     2700                     __ptext34:	
 12466 ;; *************** function _TUNE_Init *****************
 12467 ;; Defined at:
 12468 ;;		line 52 in file "tune.c"
 12469 ;; Parameters:    Size  Location     Type
 12470 ;;		None
 12471 ;; Auto vars:     Size  Location     Type
 12472 ;;		None
 12473 ;; Return value:  Size  Location     Type
 12474 ;;                  1    wreg      void 
 12475 ;; Registers used:
 12476 ;;		wreg, status,2, status,0, pclath, cstack
 12477 ;; Tracked objects:
 12478 ;;		On entry : 0/0
 12479 ;;		On exit  : 0/0
 12480 ;;		Unchanged: 0/0
 12481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12486 ;;Total ram usage:        0 bytes
 12487 ;; Hardware stack levels used: 1
 12488 ;; Hardware stack levels required when called: 2
 12489 ;; This function calls:
 12490 ;;		_UTILI_SetRelays
 12491 ;; This function is called by:
 12492 ;;		_MENU_Tune_Init
 12493 ;; This function uses a non-reentrant model
 12494 ;;
 12495                           
 12496     2700                     _TUNE_Init:	
 12497                           ;psect for function _TUNE_Init
 12498                           
 12499     2700                     l7798:	
 12500                           ;incstack = 0
 12501                           ; Regs used in _TUNE_Init: [wreg+status,2+status,0+pclath+cstack]
 12502                           
 12503                           
 12504                           ;tune.c: 54:   TUNE_state = TUNE_IDLE;
 12505     2700  3001               	movlw	1
 12506     2701  0021               	movlb	1	; select bank1
 12507     2702  00B5               	movwf	_TUNE_state^(0+128)
 12508     2703                     l7800:
 12509                           
 12510                           ;tune.c: 55:   TUNE_step = 0;
 12511     2703  01B3               	clrf	_TUNE_step^(0+128)
 12512                           
 12513                           ;tune.c: 56:   TUNE_delay = 0;
 12514     2704  01B2               	clrf	_TUNE_delay^(0+128)
 12515                           
 12516                           ;tune.c: 57:   best_swr_valid = 0;
 12517     2705  01B1               	clrf	_best_swr_valid^(0+128)
 12518                           
 12519                           ;tune.c: 59:   global.cap_sw = 0;
 12520     2706  01D8               	clrf	(_global^(0+128)+27)
 12521                           
 12522                           ;tune.c: 60:   global.cap_relays = 0;
 12523     2707  01D9               	clrf	(_global^(0+128)+28)
 12524                           
 12525                           ;tune.c: 61:   global.ind_relays = 0;
 12526     2708  01DA               	clrf	(_global^(0+128)+29)
 12527     2709                     l7802:
 12528                           
 12529                           ;tune.c: 62:   UTILI_SetRelays();
 12530     2709  3194  2499  31A7   	fcall	_UTILI_SetRelays
 12531     270C                     l7804:
 12532                           
 12533                           ;tune.c: 63:   TUNE_delay = 2;
 12534     270C  3002               	movlw	2
 12535     270D  0021               	movlb	1	; select bank1
 12536     270E  00B2               	movwf	_TUNE_delay^(0+128)
 12537     270F                     l1811:
 12538     270F  0008               	return
 12539     2710                     __end_of_TUNE_Init:
 12540                           
 12541                           	psect	text35
 12542     1325                     __ptext35:	
 12543 ;; *************** function _MENU_TParam_Update *****************
 12544 ;; Defined at:
 12545 ;;		line 436 in file "menu.c"
 12546 ;; Parameters:    Size  Location     Type
 12547 ;;		None
 12548 ;; Auto vars:     Size  Location     Type
 12549 ;;  cursor          1   28[BANK0 ] unsigned char 
 12550 ;; Return value:  Size  Location     Type
 12551 ;;                  1    wreg      void 
 12552 ;; Registers used:
 12553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12554 ;; Tracked objects:
 12555 ;;		On entry : 0/0
 12556 ;;		On exit  : 0/0
 12557 ;;		Unchanged: 0/0
 12558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12560 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12562 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12563 ;;Total ram usage:        1 bytes
 12564 ;; Hardware stack levels used: 1
 12565 ;; Hardware stack levels required when called: 1
 12566 ;; This function calls:
 12567 ;;		_DISP_SWR
 12568 ;;		_DISP_Str
 12569 ;; This function is called by:
 12570 ;;		_MENU_TParam_Init
 12571 ;;		_MENU_TParam_Run
 12572 ;; This function uses a non-reentrant model
 12573 ;;
 12574                           
 12575     1325                     _MENU_TParam_Update:	
 12576                           ;psect for function _MENU_TParam_Update
 12577                           
 12578     1325                     l7806:	
 12579                           ;incstack = 0
 12580                           ; Regs used in _MENU_TParam_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12581                           
 12582                           
 12583                           ;menu.c: 438:   uint8_t cursor = MENU_var.tparam.cursor;
 12584     1325  0020               	movlb	0	; select bank0
 12585     1326  085B               	movf	_MENU_var,w
 12586     1327  00BC               	movwf	MENU_TParam_Update@cursor
 12587     1328                     l7808:
 12588                           
 12589                           ;menu.c: 439:   if(MENU_var.tparam.auto_enable == 1)
 12590     1328  0360               	decf	_MENU_var+5,w
 12591     1329  1D03               	btfss	3,2
 12592     132A  2B2C               	goto	u8631
 12593     132B  2B2D               	goto	u8630
 12594     132C                     u8631:
 12595     132C  2B3F               	goto	l7812
 12596     132D                     u8630:
 12597     132D                     l7810:
 12598                           
 12599                           ;menu.c: 440:   {;menu.c: 441:     DISP_Str(7, 0, str_On, (cursor == 0));
 12600     132D  01F8               	clrf	DISP_Str@row
 12601     132E  30DE               	movlw	low (_str_On| (0+32768))
 12602     132F  00F9               	movwf	DISP_Str@str
 12603     1330  30A9               	movlw	high (_str_On| (0+32768))
 12604     1331  00FA               	movwf	DISP_Str@str+1
 12605     1332  083C               	movf	MENU_TParam_Update@cursor,w
 12606     1333  1903               	btfsc	3,2
 12607     1334  2B36               	goto	u8641
 12608     1335  2B38               	goto	u8640
 12609     1336                     u8641:
 12610     1336  3001               	movlw	1
 12611     1337  2B39               	goto	u8650
 12612     1338                     u8640:
 12613     1338  3000               	movlw	0
 12614     1339                     u8650:
 12615     1339  00FB               	movwf	DISP_Str@invert
 12616     133A  3007               	movlw	7
 12617     133B  318D  2547  3193   	fcall	_DISP_Str
 12618                           
 12619                           ;menu.c: 442:   }
 12620     133E  2B50               	goto	l7814
 12621     133F                     l7812:
 12622                           
 12623                           ;menu.c: 444:   {;menu.c: 445:     DISP_Str(7, 0, str_Off, (cursor == 0));
 12624     133F  01F8               	clrf	DISP_Str@row
 12625     1340  30E2               	movlw	low (_str_Off| (0+32768))
 12626     1341  00F9               	movwf	DISP_Str@str
 12627     1342  30A9               	movlw	high (_str_Off| (0+32768))
 12628     1343  00FA               	movwf	DISP_Str@str+1
 12629     1344  083C               	movf	MENU_TParam_Update@cursor,w
 12630     1345  1903               	btfsc	3,2
 12631     1346  2B48               	goto	u8661
 12632     1347  2B4A               	goto	u8660
 12633     1348                     u8661:
 12634     1348  3001               	movlw	1
 12635     1349  2B4B               	goto	u8670
 12636     134A                     u8660:
 12637     134A  3000               	movlw	0
 12638     134B                     u8670:
 12639     134B  00FB               	movwf	DISP_Str@invert
 12640     134C  3007               	movlw	7
 12641     134D  318D  2547  3193   	fcall	_DISP_Str
 12642     1350                     l7814:
 12643                           
 12644                           ;menu.c: 448:   DISP_SWR(6, 1, MENU_var.tparam.auto_swr, (cursor == 1));
 12645     1350  0020               	movlb	0	; select bank0
 12646     1351  01B1               	clrf	DISP_SWR@row
 12647     1352  0AB1               	incf	DISP_SWR@row,f
 12648     1353  085F               	movf	_MENU_var+4,w
 12649     1354  00B3               	movwf	DISP_SWR@centiSWR+1
 12650     1355  085E               	movf	_MENU_var+3,w
 12651     1356  00B2               	movwf	DISP_SWR@centiSWR
 12652     1357  033C               	decf	MENU_TParam_Update@cursor,w
 12653     1358  1903               	btfsc	3,2
 12654     1359  2B5B               	goto	u8681
 12655     135A  2B5D               	goto	u8680
 12656     135B                     u8681:
 12657     135B  3001               	movlw	1
 12658     135C  2B5E               	goto	u8690
 12659     135D                     u8680:
 12660     135D  3000               	movlw	0
 12661     135E                     u8690:
 12662     135E  00B4               	movwf	DISP_SWR@invert
 12663     135F  3006               	movlw	6
 12664     1360  319D  2545  3193   	fcall	_DISP_SWR
 12665     1363                     l7816:
 12666                           
 12667                           ;menu.c: 449:   DISP_SWR(6, 2, MENU_var.tparam.stop_swr, (cursor == 2));
 12668     1363  3002               	movlw	2
 12669     1364  0020               	movlb	0	; select bank0
 12670     1365  00B1               	movwf	DISP_SWR@row
 12671     1366  085D               	movf	_MENU_var+2,w
 12672     1367  00B3               	movwf	DISP_SWR@centiSWR+1
 12673     1368  085C               	movf	_MENU_var+1,w
 12674     1369  00B2               	movwf	DISP_SWR@centiSWR
 12675     136A  3002               	movlw	2
 12676     136B  063C               	xorwf	MENU_TParam_Update@cursor,w
 12677     136C  1903               	btfsc	3,2
 12678     136D  2B6F               	goto	u8701
 12679     136E  2B71               	goto	u8700
 12680     136F                     u8701:
 12681     136F  3001               	movlw	1
 12682     1370  2B72               	goto	u8710
 12683     1371                     u8700:
 12684     1371  3000               	movlw	0
 12685     1372                     u8710:
 12686     1372  00B4               	movwf	DISP_SWR@invert
 12687     1373  3006               	movlw	6
 12688     1374  319D  2545  3193   	fcall	_DISP_SWR
 12689                           
 12690                           ;menu.c: 450:   DISP_Str(0,3,str_Save, (cursor == 3));
 12691     1377  3003               	movlw	3
 12692     1378  00F8               	movwf	DISP_Str@row
 12693     1379  30C0               	movlw	low (_str_Save| (0+32768))
 12694     137A  00F9               	movwf	DISP_Str@str
 12695     137B  30A9               	movlw	high (_str_Save| (0+32768))
 12696     137C  00FA               	movwf	DISP_Str@str+1
 12697     137D  3003               	movlw	3
 12698     137E  0020               	movlb	0	; select bank0
 12699     137F  063C               	xorwf	MENU_TParam_Update@cursor,w
 12700     1380  1903               	btfsc	3,2
 12701     1381  2B83               	goto	u8721
 12702     1382  2B85               	goto	u8720
 12703     1383                     u8721:
 12704     1383  3001               	movlw	1
 12705     1384  2B86               	goto	u8730
 12706     1385                     u8720:
 12707     1385  3000               	movlw	0
 12708     1386                     u8730:
 12709     1386  00FB               	movwf	DISP_Str@invert
 12710     1387  3000               	movlw	0
 12711     1388  318D  2547  3193   	fcall	_DISP_Str
 12712                           
 12713                           ;menu.c: 451:   DISP_Str(7,3,str_Esc, (cursor == 4));
 12714     138B  3003               	movlw	3
 12715     138C  00F8               	movwf	DISP_Str@row
 12716     138D  30E6               	movlw	low (_str_Esc| (0+32768))
 12717     138E  00F9               	movwf	DISP_Str@str
 12718     138F  30A9               	movlw	high (_str_Esc| (0+32768))
 12719     1390  00FA               	movwf	DISP_Str@str+1
 12720     1391  3004               	movlw	4
 12721     1392  0020               	movlb	0	; select bank0
 12722     1393  063C               	xorwf	MENU_TParam_Update@cursor,w
 12723     1394  1903               	btfsc	3,2
 12724     1395  2B97               	goto	u8741
 12725     1396  2B99               	goto	u8740
 12726     1397                     u8741:
 12727     1397  3001               	movlw	1
 12728     1398  2B9A               	goto	u8750
 12729     1399                     u8740:
 12730     1399  3000               	movlw	0
 12731     139A                     u8750:
 12732     139A  00FB               	movwf	DISP_Str@invert
 12733     139B  3007               	movlw	7
 12734     139C  318D  2547  3193   	fcall	_DISP_Str
 12735     139F                     l1255:
 12736     139F  0008               	return
 12737     13A0                     __end_of_MENU_TParam_Update:
 12738                           
 12739                           	psect	text36
 12740     1C2F                     __ptext36:	
 12741 ;; *************** function _MENU_Sub_Update *****************
 12742 ;; Defined at:
 12743 ;;		line 968 in file "menu.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;		None
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;  i               1   13[COMMON] unsigned char 
 12748 ;;  pos             1   12[COMMON] unsigned char 
 12749 ;; Return value:  Size  Location     Type
 12750 ;;                  1    wreg      void 
 12751 ;; Registers used:
 12752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12753 ;; Tracked objects:
 12754 ;;		On entry : 0/0
 12755 ;;		On exit  : 0/0
 12756 ;;		Unchanged: 0/0
 12757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12762 ;;Total ram usage:        7 bytes
 12763 ;; Hardware stack levels used: 1
 12764 ;; Hardware stack levels required when called: 1
 12765 ;; This function calls:
 12766 ;;		_DISP_Str
 12767 ;; This function is called by:
 12768 ;;		_MENU_SubSetup_Init
 12769 ;;		_MENU_SubTop_Init
 12770 ;;		_MENU_Sub_Run
 12771 ;; This function uses a non-reentrant model
 12772 ;;
 12773                           
 12774     1C2F                     _MENU_Sub_Update:	
 12775                           ;psect for function _MENU_Sub_Update
 12776                           
 12777     1C2F                     l7876:	
 12778                           ;incstack = 0
 12779                           ; Regs used in _MENU_Sub_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12780                           
 12781                           
 12782                           ;menu.c: 971:   uint8_t pos = MENU_var.sub.top;
 12783     1C2F  0020               	movlb	0	; select bank0
 12784     1C30  085D               	movf	_MENU_var+2,w
 12785     1C31  00FC               	movwf	MENU_Sub_Update@pos
 12786     1C32                     l7878:
 12787                           
 12788                           ;menu.c: 973:   for(uint8_t i = 0; i < 4; i++)
 12789     1C32  01FD               	clrf	MENU_Sub_Update@i
 12790     1C33                     l7884:
 12791                           
 12792                           ;menu.c: 974:   {;menu.c: 975:       DISP_Str(0x80, i, MENU_var.sub.ptrMenu[pos]->title,
      +                           (pos == MENU_var.sub.cursor));
 12793     1C33  087D               	movf	MENU_Sub_Update@i,w
 12794     1C34  00F8               	movwf	DISP_Str@row
 12795     1C35  087C               	movf	MENU_Sub_Update@pos,w
 12796     1C36  0020               	movlb	0	; select bank0
 12797     1C37  00B1               	movwf	??_MENU_Sub_Update
 12798     1C38  01B2               	clrf	??_MENU_Sub_Update+1
 12799     1C39  35B1               	lslf	??_MENU_Sub_Update,f
 12800     1C3A  0DB2               	rlf	??_MENU_Sub_Update+1,f
 12801     1C3B  0831               	movf	??_MENU_Sub_Update,w
 12802     1C3C  0760               	addwf	_MENU_var+5,w
 12803     1C3D  0086               	movwf	6
 12804     1C3E  0832               	movf	??_MENU_Sub_Update+1,w
 12805     1C3F  3D61               	addwfc	_MENU_var+6,w
 12806     1C40  0087               	movwf	7
 12807     1C41  3F40               	moviw [0]fsr1
 12808     1C42  00B3               	movwf	??_MENU_Sub_Update+2
 12809     1C43  3F41               	moviw [1]fsr1
 12810     1C44  00B4               	movwf	??_MENU_Sub_Update+3
 12811     1C45  0833               	movf	??_MENU_Sub_Update+2,w
 12812     1C46  0084               	movwf	4
 12813     1C47  0834               	movf	??_MENU_Sub_Update+3,w
 12814     1C48  0085               	movwf	5
 12815     1C49  3F00               	moviw [0]fsr0
 12816     1C4A  00F9               	movwf	DISP_Str@str
 12817     1C4B  3F01               	moviw [1]fsr0
 12818     1C4C  00FA               	movwf	DISP_Str@str+1
 12819     1C4D  085C               	movf	_MENU_var+1,w
 12820     1C4E  067C               	xorwf	MENU_Sub_Update@pos,w
 12821     1C4F  1903               	skipnz
 12822     1C50  2C52               	goto	u9031
 12823     1C51  2C54               	goto	u9030
 12824     1C52                     u9031:
 12825     1C52  3001               	movlw	1
 12826     1C53  2C55               	goto	u9040
 12827     1C54                     u9030:
 12828     1C54  3000               	movlw	0
 12829     1C55                     u9040:
 12830     1C55  00FB               	movwf	DISP_Str@invert
 12831     1C56  3080               	movlw	128
 12832     1C57  318D  2547  319C   	fcall	_DISP_Str
 12833     1C5A                     l7886:
 12834                           
 12835                           ;menu.c: 976:       pos++;
 12836     1C5A  3001               	movlw	1
 12837     1C5B  07FC               	addwf	MENU_Sub_Update@pos,f
 12838     1C5C                     l7888:
 12839                           
 12840                           ;menu.c: 977:   }
 12841     1C5C  3001               	movlw	1
 12842     1C5D  07FD               	addwf	MENU_Sub_Update@i,f
 12843     1C5E                     l7890:
 12844     1C5E  3004               	movlw	4
 12845     1C5F  027D               	subwf	MENU_Sub_Update@i,w
 12846     1C60  1C03               	skipc
 12847     1C61  2C63               	goto	u9051
 12848     1C62  2C64               	goto	u9050
 12849     1C63                     u9051:
 12850     1C63  2C33               	goto	l7884
 12851     1C64                     u9050:
 12852     1C64                     l1390:
 12853     1C64  0008               	return
 12854     1C65                     __end_of_MENU_Sub_Update:
 12855                           
 12856                           	psect	text37
 12857     1990                     __ptext37:	
 12858 ;; *************** function _MENU_StartupSave_Update *****************
 12859 ;; Defined at:
 12860 ;;		line 1275 in file "menu.c"
 12861 ;; Parameters:    Size  Location     Type
 12862 ;;		None
 12863 ;; Auto vars:     Size  Location     Type
 12864 ;;		None
 12865 ;; Return value:  Size  Location     Type
 12866 ;;                  1    wreg      void 
 12867 ;; Registers used:
 12868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12869 ;; Tracked objects:
 12870 ;;		On entry : 0/0
 12871 ;;		On exit  : 0/0
 12872 ;;		Unchanged: 0/0
 12873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12878 ;;Total ram usage:        0 bytes
 12879 ;; Hardware stack levels used: 1
 12880 ;; Hardware stack levels required when called: 1
 12881 ;; This function calls:
 12882 ;;		_DISP_Str
 12883 ;; This function is called by:
 12884 ;;		_MENU_StartupSave_Init
 12885 ;;		_MENU_StartupSave_Run
 12886 ;; This function uses a non-reentrant model
 12887 ;;
 12888                           
 12889     1990                     _MENU_StartupSave_Update:	
 12890                           ;psect for function _MENU_StartupSave_Update
 12891                           
 12892     1990                     l7944:	
 12893                           ;incstack = 0
 12894                           ; Regs used in _MENU_StartupSave_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12895                           
 12896                           
 12897                           ;menu.c: 1277:    DISP_Str(0,3,str_Save, (MENU_var.startupsave.cursor == 0));
 12898     1990  3003               	movlw	3
 12899     1991  00F8               	movwf	DISP_Str@row
 12900     1992  30C0               	movlw	low (_str_Save| (0+32768))
 12901     1993  00F9               	movwf	DISP_Str@str
 12902     1994  30A9               	movlw	high (_str_Save| (0+32768))
 12903     1995  00FA               	movwf	DISP_Str@str+1
 12904     1996  0020               	movlb	0	; select bank0
 12905     1997  085C               	movf	_MENU_var+1,w
 12906     1998  1903               	btfsc	3,2
 12907     1999  299B               	goto	u9181
 12908     199A  299D               	goto	u9180
 12909     199B                     u9181:
 12910     199B  3001               	movlw	1
 12911     199C  299E               	goto	u9190
 12912     199D                     u9180:
 12913     199D  3000               	movlw	0
 12914     199E                     u9190:
 12915     199E  00FB               	movwf	DISP_Str@invert
 12916     199F  3000               	movlw	0
 12917     19A0  318D  2547  3199   	fcall	_DISP_Str
 12918                           
 12919                           ;menu.c: 1278:    DISP_Str(7,3,str_Esc, (MENU_var.startupsave.cursor == 1));
 12920     19A3  3003               	movlw	3
 12921     19A4  00F8               	movwf	DISP_Str@row
 12922     19A5  30E6               	movlw	low (_str_Esc| (0+32768))
 12923     19A6  00F9               	movwf	DISP_Str@str
 12924     19A7  30A9               	movlw	high (_str_Esc| (0+32768))
 12925     19A8  00FA               	movwf	DISP_Str@str+1
 12926     19A9  0020               	movlb	0	; select bank0
 12927     19AA  035C               	decf	_MENU_var+1,w
 12928     19AB  1903               	btfsc	3,2
 12929     19AC  29AE               	goto	u9201
 12930     19AD  29B0               	goto	u9200
 12931     19AE                     u9201:
 12932     19AE  3001               	movlw	1
 12933     19AF  29B1               	goto	u9210
 12934     19B0                     u9200:
 12935     19B0  3000               	movlw	0
 12936     19B1                     u9210:
 12937     19B1  00FB               	movwf	DISP_Str@invert
 12938     19B2  3007               	movlw	7
 12939     19B3  318D  2547  3199   	fcall	_DISP_Str
 12940     19B6                     l1475:
 12941     19B6  0008               	return
 12942     19B7                     __end_of_MENU_StartupSave_Update:
 12943                           
 12944                           	psect	text38
 12945     12B2                     __ptext38:	
 12946 ;; *************** function _MENU_Sleep_Update *****************
 12947 ;; Defined at:
 12948 ;;		line 553 in file "menu.c"
 12949 ;; Parameters:    Size  Location     Type
 12950 ;;		None
 12951 ;; Auto vars:     Size  Location     Type
 12952 ;;  str             4   17[BANK0 ] unsigned char [4]
 12953 ;;  cursor          1   21[BANK0 ] unsigned char 
 12954 ;; Return value:  Size  Location     Type
 12955 ;;                  1    wreg      void 
 12956 ;; Registers used:
 12957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12958 ;; Tracked objects:
 12959 ;;		On entry : 0/0
 12960 ;;		On exit  : 0/0
 12961 ;;		Unchanged: 0/0
 12962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12964 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12966 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12967 ;;Total ram usage:        5 bytes
 12968 ;; Hardware stack levels used: 1
 12969 ;; Hardware stack levels required when called: 1
 12970 ;; This function calls:
 12971 ;;		_DISP_Str
 12972 ;;		_UTILI_Int2Str
 12973 ;; This function is called by:
 12974 ;;		_MENU_Sleep_Init
 12975 ;;		_MENU_Sleep_Run
 12976 ;; This function uses a non-reentrant model
 12977 ;;
 12978                           
 12979     12B2                     _MENU_Sleep_Update:	
 12980                           ;psect for function _MENU_Sleep_Update
 12981                           
 12982     12B2                     l7818:	
 12983                           ;incstack = 0
 12984                           ; Regs used in _MENU_Sleep_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12985                           
 12986                           
 12987                           ;menu.c: 555:   uint8_t cursor = MENU_var.sleep.cursor;
 12988     12B2  0020               	movlb	0	; select bank0
 12989     12B3  085B               	movf	_MENU_var,w
 12990     12B4  00B5               	movwf	MENU_Sleep_Update@cursor
 12991     12B5                     l7820:
 12992                           
 12993                           ;menu.c: 556:   if(MENU_var.sleep.enable == 1)
 12994     12B5  035C               	decf	_MENU_var+1,w
 12995     12B6  1D03               	btfss	3,2
 12996     12B7  2AB9               	goto	u8761
 12997     12B8  2ABA               	goto	u8760
 12998     12B9                     u8761:
 12999     12B9  2ACC               	goto	l7824
 13000     12BA                     u8760:
 13001     12BA                     l7822:
 13002                           
 13003                           ;menu.c: 557:   {;menu.c: 558:     DISP_Str(7, 0, str_On, (cursor == 0));
 13004     12BA  01F8               	clrf	DISP_Str@row
 13005     12BB  30DE               	movlw	low (_str_On| (0+32768))
 13006     12BC  00F9               	movwf	DISP_Str@str
 13007     12BD  30A9               	movlw	high (_str_On| (0+32768))
 13008     12BE  00FA               	movwf	DISP_Str@str+1
 13009     12BF  0835               	movf	MENU_Sleep_Update@cursor,w
 13010     12C0  1903               	btfsc	3,2
 13011     12C1  2AC3               	goto	u8771
 13012     12C2  2AC5               	goto	u8770
 13013     12C3                     u8771:
 13014     12C3  3001               	movlw	1
 13015     12C4  2AC6               	goto	u8780
 13016     12C5                     u8770:
 13017     12C5  3000               	movlw	0
 13018     12C6                     u8780:
 13019     12C6  00FB               	movwf	DISP_Str@invert
 13020     12C7  3007               	movlw	7
 13021     12C8  318D  2547  3192   	fcall	_DISP_Str
 13022                           
 13023                           ;menu.c: 559:   }
 13024     12CB  2ADD               	goto	l7826
 13025     12CC                     l7824:
 13026                           
 13027                           ;menu.c: 561:   {;menu.c: 562:     DISP_Str(7, 0, str_Off, (cursor == 0));
 13028     12CC  01F8               	clrf	DISP_Str@row
 13029     12CD  30E2               	movlw	low (_str_Off| (0+32768))
 13030     12CE  00F9               	movwf	DISP_Str@str
 13031     12CF  30A9               	movlw	high (_str_Off| (0+32768))
 13032     12D0  00FA               	movwf	DISP_Str@str+1
 13033     12D1  0835               	movf	MENU_Sleep_Update@cursor,w
 13034     12D2  1903               	btfsc	3,2
 13035     12D3  2AD5               	goto	u8791
 13036     12D4  2AD7               	goto	u8790
 13037     12D5                     u8791:
 13038     12D5  3001               	movlw	1
 13039     12D6  2AD8               	goto	u8800
 13040     12D7                     u8790:
 13041     12D7  3000               	movlw	0
 13042     12D8                     u8800:
 13043     12D8  00FB               	movwf	DISP_Str@invert
 13044     12D9  3007               	movlw	7
 13045     12DA  318D  2547  3192   	fcall	_DISP_Str
 13046     12DD                     l7826:
 13047                           
 13048                           ;menu.c: 565:   char str[4];;menu.c: 566:   UTILI_Int2Str(MENU_var.sleep.delay_sec, str,
      +                           sizeof(str));
 13049     12DD  0020               	movlb	0	; select bank0
 13050     12DE  085E               	movf	_MENU_var+3,w
 13051     12DF  00F9               	movwf	UTILI_Int2Str@number+1
 13052     12E0  085D               	movf	_MENU_var+2,w
 13053     12E1  00F8               	movwf	UTILI_Int2Str@number
 13054     12E2  3031               	movlw	(low (MENU_Sleep_Update@str| 0))& (0+255)
 13055     12E3  00FA               	movwf	UTILI_Int2Str@output
 13056     12E4  3004               	movlw	4
 13057     12E5  00FB               	movwf	UTILI_Int2Str@size
 13058     12E6  3194  241B  3192   	fcall	_UTILI_Int2Str
 13059     12E9                     l7828:
 13060                           
 13061                           ;menu.c: 567:   DISP_Str(7,1,str,(cursor == 1));
 13062     12E9  01F8               	clrf	DISP_Str@row
 13063     12EA  0AF8               	incf	DISP_Str@row,f
 13064     12EB  3031               	movlw	low MENU_Sleep_Update@str
 13065     12EC  00F9               	movwf	DISP_Str@str
 13066     12ED  3000               	movlw	high MENU_Sleep_Update@str
 13067     12EE  00FA               	movwf	DISP_Str@str+1
 13068     12EF  0020               	movlb	0	; select bank0
 13069     12F0  0335               	decf	MENU_Sleep_Update@cursor,w
 13070     12F1  1903               	btfsc	3,2
 13071     12F2  2AF4               	goto	u8811
 13072     12F3  2AF6               	goto	u8810
 13073     12F4                     u8811:
 13074     12F4  3001               	movlw	1
 13075     12F5  2AF7               	goto	u8820
 13076     12F6                     u8810:
 13077     12F6  3000               	movlw	0
 13078     12F7                     u8820:
 13079     12F7  00FB               	movwf	DISP_Str@invert
 13080     12F8  3007               	movlw	7
 13081     12F9  318D  2547  3192   	fcall	_DISP_Str
 13082     12FC                     l7830:
 13083                           
 13084                           ;menu.c: 568:   DISP_Str(0,3,str_Save,(cursor == 2));
 13085     12FC  3003               	movlw	3
 13086     12FD  00F8               	movwf	DISP_Str@row
 13087     12FE  30C0               	movlw	low (_str_Save| (0+32768))
 13088     12FF  00F9               	movwf	DISP_Str@str
 13089     1300  30A9               	movlw	high (_str_Save| (0+32768))
 13090     1301  00FA               	movwf	DISP_Str@str+1
 13091     1302  3002               	movlw	2
 13092     1303  0020               	movlb	0	; select bank0
 13093     1304  0635               	xorwf	MENU_Sleep_Update@cursor,w
 13094     1305  1903               	btfsc	3,2
 13095     1306  2B08               	goto	u8831
 13096     1307  2B0A               	goto	u8830
 13097     1308                     u8831:
 13098     1308  3001               	movlw	1
 13099     1309  2B0B               	goto	u8840
 13100     130A                     u8830:
 13101     130A  3000               	movlw	0
 13102     130B                     u8840:
 13103     130B  00FB               	movwf	DISP_Str@invert
 13104     130C  3000               	movlw	0
 13105     130D  318D  2547  3192   	fcall	_DISP_Str
 13106     1310                     l7832:
 13107                           
 13108                           ;menu.c: 569:   DISP_Str(7,3,str_Esc, (cursor == 3));
 13109     1310  3003               	movlw	3
 13110     1311  00F8               	movwf	DISP_Str@row
 13111     1312  30E6               	movlw	low (_str_Esc| (0+32768))
 13112     1313  00F9               	movwf	DISP_Str@str
 13113     1314  30A9               	movlw	high (_str_Esc| (0+32768))
 13114     1315  00FA               	movwf	DISP_Str@str+1
 13115     1316  3003               	movlw	3
 13116     1317  0020               	movlb	0	; select bank0
 13117     1318  0635               	xorwf	MENU_Sleep_Update@cursor,w
 13118     1319  1903               	btfsc	3,2
 13119     131A  2B1C               	goto	u8851
 13120     131B  2B1E               	goto	u8850
 13121     131C                     u8851:
 13122     131C  3001               	movlw	1
 13123     131D  2B1F               	goto	u8860
 13124     131E                     u8850:
 13125     131E  3000               	movlw	0
 13126     131F                     u8860:
 13127     131F  00FB               	movwf	DISP_Str@invert
 13128     1320  3007               	movlw	7
 13129     1321  318D  2547  3192   	fcall	_DISP_Str
 13130     1324                     l1279:
 13131     1324  0008               	return
 13132     1325                     __end_of_MENU_Sleep_Update:
 13133                           
 13134                           	psect	text39
 13135     0A89                     __ptext39:	
 13136 ;; *************** function _MENU_RelTest_Update *****************
 13137 ;; Defined at:
 13138 ;;		line 653 in file "menu.c"
 13139 ;; Parameters:    Size  Location     Type
 13140 ;;		None
 13141 ;; Auto vars:     Size  Location     Type
 13142 ;;  str             7   19[BANK0 ] unsigned char [7]
 13143 ;;  cursor          1   28[BANK0 ] unsigned char 
 13144 ;;  l_row           1   27[BANK0 ] unsigned char 
 13145 ;;  c_row           1   26[BANK0 ] unsigned char 
 13146 ;; Return value:  Size  Location     Type
 13147 ;;                  1    wreg      void 
 13148 ;; Registers used:
 13149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13150 ;; Tracked objects:
 13151 ;;		On entry : 0/0
 13152 ;;		On exit  : 0/0
 13153 ;;		Unchanged: 0/0
 13154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13156 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13157 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13158 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13159 ;;Total ram usage:       12 bytes
 13160 ;; Hardware stack levels used: 1
 13161 ;; Hardware stack levels required when called: 1
 13162 ;; This function calls:
 13163 ;;		_DISP_Str
 13164 ;;		_UTILI_GetCapValueStr
 13165 ;;		_UTILI_GetIndValueStr
 13166 ;; This function is called by:
 13167 ;;		_MENU_RelTest_Init
 13168 ;;		_MENU_RelTest_Run
 13169 ;; This function uses a non-reentrant model
 13170 ;;
 13171                           
 13172     0A89                     _MENU_RelTest_Update:	
 13173                           ;psect for function _MENU_RelTest_Update
 13174                           
 13175     0A89                     l7834:	
 13176                           ;incstack = 0
 13177                           ; Regs used in _MENU_RelTest_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13178                           
 13179                           
 13180                           ;menu.c: 655:   uint8_t cursor = MENU_var.reltest.cursor;
 13181     0A89  0020               	movlb	0	; select bank0
 13182     0A8A  085B               	movf	_MENU_var,w
 13183     0A8B  00BC               	movwf	MENU_RelTest_Update@cursor
 13184     0A8C                     l7836:
 13185                           
 13186                           ;menu.c: 656:   uint8_t c_row = 1;
 13187     0A8C  3001               	movlw	1
 13188     0A8D  00BA               	movwf	MENU_RelTest_Update@c_row
 13189     0A8E                     l7838:
 13190                           
 13191                           ;menu.c: 657:   uint8_t l_row = 2;
 13192     0A8E  3002               	movlw	2
 13193     0A8F  00BB               	movwf	MENU_RelTest_Update@l_row
 13194     0A90                     l7840:
 13195                           
 13196                           ;menu.c: 658:   char str[7];;menu.c: 660:   if (global.cap_sw)
 13197     0A90  0021               	movlb	1	; select bank1
 13198     0A91  0858               	movf	(_global^(0+128)+27),w
 13199     0A92  1903               	btfsc	3,2
 13200     0A93  2A95               	goto	u8871
 13201     0A94  2A96               	goto	u8870
 13202     0A95                     u8871:
 13203     0A95  2A9B               	goto	l7844
 13204     0A96                     u8870:
 13205     0A96                     l7842:
 13206                           
 13207                           ;menu.c: 661:   {;menu.c: 662:     c_row = 2;
 13208     0A96  3002               	movlw	2
 13209     0A97  0020               	movlb	0	; select bank0
 13210     0A98  00BA               	movwf	MENU_RelTest_Update@c_row
 13211                           
 13212                           ;menu.c: 663:     l_row = 1;
 13213     0A99  3001               	movlw	1
 13214     0A9A  00BB               	movwf	MENU_RelTest_Update@l_row
 13215     0A9B                     l7844:
 13216                           
 13217                           ;menu.c: 666:   DISP_Str(0, c_row, str_C_, 0);
 13218     0A9B  0020               	movlb	0	; select bank0
 13219     0A9C  083A               	movf	MENU_RelTest_Update@c_row,w
 13220     0A9D  00F8               	movwf	DISP_Str@row
 13221     0A9E  30F5               	movlw	low (_str_C_| (0+32768))
 13222     0A9F  00F9               	movwf	DISP_Str@str
 13223     0AA0  30A9               	movlw	high (_str_C_| (0+32768))
 13224     0AA1  00FA               	movwf	DISP_Str@str+1
 13225     0AA2  01FB               	clrf	DISP_Str@invert
 13226     0AA3  3000               	movlw	0
 13227     0AA4  318D  2547  318A   	fcall	_DISP_Str
 13228     0AA7                     l7846:
 13229                           
 13230                           ;menu.c: 667:   UTILI_GetCapValueStr(str, sizeof (str));
 13231     0AA7  3033               	movlw	(low (MENU_RelTest_Update@str| 0))& (0+255)
 13232     0AA8  0020               	movlb	0	; select bank0
 13233     0AA9  00A3               	movwf	UTILI_GetCapValueStr@str
 13234     0AAA  3007               	movlw	7
 13235     0AAB  00A4               	movwf	UTILI_GetCapValueStr@str_size
 13236     0AAC  319A  223B  318A   	fcall	_UTILI_GetCapValueStr
 13237     0AAF                     l7848:
 13238                           
 13239                           ;menu.c: 668:   DISP_Str(4, c_row, str, (cursor == (c_row - 1)));
 13240     0AAF  0020               	movlb	0	; select bank0
 13241     0AB0  083A               	movf	MENU_RelTest_Update@c_row,w
 13242     0AB1  00F8               	movwf	DISP_Str@row
 13243     0AB2  3033               	movlw	low MENU_RelTest_Update@str
 13244     0AB3  00F9               	movwf	DISP_Str@str
 13245     0AB4  3000               	movlw	high MENU_RelTest_Update@str
 13246     0AB5  00FA               	movwf	DISP_Str@str+1
 13247     0AB6  083A               	movf	MENU_RelTest_Update@c_row,w
 13248     0AB7  3EFF               	addlw	255
 13249     0AB8  00B1               	movwf	??_MENU_RelTest_Update
 13250     0AB9  30FF               	movlw	255
 13251     0ABA  1803               	skipnc
 13252     0ABB  3000               	movlw	0
 13253     0ABC  00B2               	movwf	??_MENU_RelTest_Update+1
 13254     0ABD  083C               	movf	MENU_RelTest_Update@cursor,w
 13255     0ABE  0631               	xorwf	??_MENU_RelTest_Update,w
 13256     0ABF  0432               	iorwf	??_MENU_RelTest_Update+1,w
 13257     0AC0  1903               	skipnz
 13258     0AC1  2AC3               	goto	u8881
 13259     0AC2  2AC5               	goto	u8880
 13260     0AC3                     u8881:
 13261     0AC3  3001               	movlw	1
 13262     0AC4  2AC6               	goto	u8890
 13263     0AC5                     u8880:
 13264     0AC5  3000               	movlw	0
 13265     0AC6                     u8890:
 13266     0AC6  00FB               	movwf	DISP_Str@invert
 13267     0AC7  3004               	movlw	4
 13268     0AC8  318D  2547  318A   	fcall	_DISP_Str
 13269     0ACB                     l7850:
 13270                           
 13271                           ;menu.c: 670:   DISP_Str(0, l_row, str_L_, 0);
 13272     0ACB  0020               	movlb	0	; select bank0
 13273     0ACC  083B               	movf	MENU_RelTest_Update@l_row,w
 13274     0ACD  00F8               	movwf	DISP_Str@row
 13275     0ACE  30F8               	movlw	low (_str_L_| (0+32768))
 13276     0ACF  00F9               	movwf	DISP_Str@str
 13277     0AD0  30A9               	movlw	high (_str_L_| (0+32768))
 13278     0AD1  00FA               	movwf	DISP_Str@str+1
 13279     0AD2  01FB               	clrf	DISP_Str@invert
 13280     0AD3  3000               	movlw	0
 13281     0AD4  318D  2547  318A   	fcall	_DISP_Str
 13282     0AD7                     l7852:
 13283                           
 13284                           ;menu.c: 671:   UTILI_GetIndValueStr(str, sizeof (str));
 13285     0AD7  3033               	movlw	(low (MENU_RelTest_Update@str| 0))& (0+255)
 13286     0AD8  0020               	movlb	0	; select bank0
 13287     0AD9  00A3               	movwf	UTILI_GetIndValueStr@str
 13288     0ADA  3007               	movlw	7
 13289     0ADB  00A4               	movwf	UTILI_GetIndValueStr@str_size
 13290     0ADC  319A  2269  318A   	fcall	_UTILI_GetIndValueStr
 13291                           
 13292                           ;menu.c: 672:   DISP_Str(4, l_row, str, (cursor == (l_row - 1)));
 13293     0ADF  0020               	movlb	0	; select bank0
 13294     0AE0  083B               	movf	MENU_RelTest_Update@l_row,w
 13295     0AE1  00F8               	movwf	DISP_Str@row
 13296     0AE2  3033               	movlw	low MENU_RelTest_Update@str
 13297     0AE3  00F9               	movwf	DISP_Str@str
 13298     0AE4  3000               	movlw	high MENU_RelTest_Update@str
 13299     0AE5  00FA               	movwf	DISP_Str@str+1
 13300     0AE6  083B               	movf	MENU_RelTest_Update@l_row,w
 13301     0AE7  3EFF               	addlw	255
 13302     0AE8  00B1               	movwf	??_MENU_RelTest_Update
 13303     0AE9  30FF               	movlw	255
 13304     0AEA  1803               	skipnc
 13305     0AEB  3000               	movlw	0
 13306     0AEC  00B2               	movwf	??_MENU_RelTest_Update+1
 13307     0AED  083C               	movf	MENU_RelTest_Update@cursor,w
 13308     0AEE  0631               	xorwf	??_MENU_RelTest_Update,w
 13309     0AEF  0432               	iorwf	??_MENU_RelTest_Update+1,w
 13310     0AF0  1903               	skipnz
 13311     0AF1  2AF3               	goto	u8901
 13312     0AF2  2AF5               	goto	u8900
 13313     0AF3                     u8901:
 13314     0AF3  3001               	movlw	1
 13315     0AF4  2AF6               	goto	u8910
 13316     0AF5                     u8900:
 13317     0AF5  3000               	movlw	0
 13318     0AF6                     u8910:
 13319     0AF6  00FB               	movwf	DISP_Str@invert
 13320     0AF7  3004               	movlw	4
 13321     0AF8  318D  2547  318A   	fcall	_DISP_Str
 13322     0AFB                     l7854:
 13323                           
 13324                           ;menu.c: 674:   if (!global.cap_sw)
 13325     0AFB  0021               	movlb	1	; select bank1
 13326     0AFC  0858               	movf	(_global^(0+128)+27),w
 13327     0AFD  1D03               	btfss	3,2
 13328     0AFE  2B00               	goto	u8921
 13329     0AFF  2B01               	goto	u8920
 13330     0B00                     u8921:
 13331     0B00  2B16               	goto	l7858
 13332     0B01                     u8920:
 13333     0B01                     l7856:
 13334                           
 13335                           ;menu.c: 675:   {;menu.c: 676:     DISP_Str(0, 3, str_C_L, (cursor == 2));
 13336     0B01  3003               	movlw	3
 13337     0B02  00F8               	movwf	DISP_Str@row
 13338     0B03  30D9               	movlw	low (_str_C_L| (0+32768))
 13339     0B04  00F9               	movwf	DISP_Str@str
 13340     0B05  30A9               	movlw	high (_str_C_L| (0+32768))
 13341     0B06  00FA               	movwf	DISP_Str@str+1
 13342     0B07  3002               	movlw	2
 13343     0B08  0020               	movlb	0	; select bank0
 13344     0B09  063C               	xorwf	MENU_RelTest_Update@cursor,w
 13345     0B0A  1903               	btfsc	3,2
 13346     0B0B  2B0D               	goto	u8931
 13347     0B0C  2B0F               	goto	u8930
 13348     0B0D                     u8931:
 13349     0B0D  3001               	movlw	1
 13350     0B0E  2B10               	goto	u8940
 13351     0B0F                     u8930:
 13352     0B0F  3000               	movlw	0
 13353     0B10                     u8940:
 13354     0B10  00FB               	movwf	DISP_Str@invert
 13355     0B11  3000               	movlw	0
 13356     0B12  318D  2547  318A   	fcall	_DISP_Str
 13357                           
 13358                           ;menu.c: 677:   } else
 13359     0B15  2B2A               	goto	l1302
 13360     0B16                     l7858:
 13361                           
 13362                           ;menu.c: 678:   {;menu.c: 679:     DISP_Str(0, 3, str_L_C, (cursor == 2));
 13363     0B16  3003               	movlw	3
 13364     0B17  00F8               	movwf	DISP_Str@row
 13365     0B18  30D4               	movlw	low (_str_L_C| (0+32768))
 13366     0B19  00F9               	movwf	DISP_Str@str
 13367     0B1A  30A9               	movlw	high (_str_L_C| (0+32768))
 13368     0B1B  00FA               	movwf	DISP_Str@str+1
 13369     0B1C  3002               	movlw	2
 13370     0B1D  0020               	movlb	0	; select bank0
 13371     0B1E  063C               	xorwf	MENU_RelTest_Update@cursor,w
 13372     0B1F  1903               	btfsc	3,2
 13373     0B20  2B22               	goto	u8951
 13374     0B21  2B24               	goto	u8950
 13375     0B22                     u8951:
 13376     0B22  3001               	movlw	1
 13377     0B23  2B25               	goto	u8960
 13378     0B24                     u8950:
 13379     0B24  3000               	movlw	0
 13380     0B25                     u8960:
 13381     0B25  00FB               	movwf	DISP_Str@invert
 13382     0B26  3000               	movlw	0
 13383     0B27  318D  2547  318A   	fcall	_DISP_Str
 13384     0B2A                     l1302:	
 13385                           ;menu.c: 680:   }
 13386                           
 13387                           
 13388                           ;menu.c: 682:   DISP_Str(7, 3, str_Esc, (cursor == 3));
 13389     0B2A  3003               	movlw	3
 13390     0B2B  00F8               	movwf	DISP_Str@row
 13391     0B2C  30E6               	movlw	low (_str_Esc| (0+32768))
 13392     0B2D  00F9               	movwf	DISP_Str@str
 13393     0B2E  30A9               	movlw	high (_str_Esc| (0+32768))
 13394     0B2F  00FA               	movwf	DISP_Str@str+1
 13395     0B30  3003               	movlw	3
 13396     0B31  0020               	movlb	0	; select bank0
 13397     0B32  063C               	xorwf	MENU_RelTest_Update@cursor,w
 13398     0B33  1903               	btfsc	3,2
 13399     0B34  2B36               	goto	u8971
 13400     0B35  2B38               	goto	u8970
 13401     0B36                     u8971:
 13402     0B36  3001               	movlw	1
 13403     0B37  2B39               	goto	u8980
 13404     0B38                     u8970:
 13405     0B38  3000               	movlw	0
 13406     0B39                     u8980:
 13407     0B39  00FB               	movwf	DISP_Str@invert
 13408     0B3A  3007               	movlw	7
 13409     0B3B  318D  2547  318A   	fcall	_DISP_Str
 13410     0B3E                     l1303:
 13411     0B3E  0008               	return
 13412     0B3F                     __end_of_MENU_RelTest_Update:
 13413                           
 13414                           	psect	text40
 13415     09D5                     __ptext40:	
 13416 ;; *************** function _MENU_NameEdit_Update *****************
 13417 ;; Defined at:
 13418 ;;		line 1158 in file "menu.c"
 13419 ;; Parameters:    Size  Location     Type
 13420 ;;		None
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;  x               1   24[BANK0 ] unsigned char 
 13423 ;;  c               1   23[BANK0 ] unsigned char 
 13424 ;;  i               1   25[BANK0 ] unsigned char 
 13425 ;; Return value:  Size  Location     Type
 13426 ;;                  1    wreg      void 
 13427 ;; Registers used:
 13428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13429 ;; Tracked objects:
 13430 ;;		On entry : 0/0
 13431 ;;		On exit  : 0/0
 13432 ;;		Unchanged: 0/0
 13433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13435 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13436 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13437 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13438 ;;Total ram usage:        5 bytes
 13439 ;; Hardware stack levels used: 1
 13440 ;; Hardware stack levels required when called: 1
 13441 ;; This function calls:
 13442 ;;		_DISP_Char
 13443 ;;		_DISP_Str
 13444 ;; This function is called by:
 13445 ;;		_MENU_NameEdit_Init
 13446 ;;		_MENU_NameEdit_Run
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450     09D5                     _MENU_NameEdit_Update:	
 13451                           ;psect for function _MENU_NameEdit_Update
 13452                           
 13453     09D5                     l7898:	
 13454                           ;incstack = 0
 13455                           ; Regs used in _MENU_NameEdit_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13456                           
 13457                           
 13458                           ;menu.c: 1160:   uint8_t i;;menu.c: 1163:   for(i=0; i<8; i++)
 13459     09D5  0020               	movlb	0	; select bank0
 13460     09D6  01B9               	clrf	MENU_NameEdit_Update@i
 13461     09D7                     l7904:
 13462                           
 13463                           ;menu.c: 1164:   {;menu.c: 1165:     DISP_Char(2+i, 0, MENU_var.nameedit.tunemem.str_nam
      +                          e[i],(MENU_var.nameedit.cursor == i));
 13464     09D7  01B1               	clrf	DISP_Char@row
 13465     09D8  3060               	movlw	low (_MENU_var+5)
 13466     09D9  00FC               	movwf	??_MENU_NameEdit_Update
 13467     09DA  3000               	movlw	high (_MENU_var+5)
 13468     09DB  00FD               	movwf	??_MENU_NameEdit_Update+1
 13469     09DC  0839               	movf	MENU_NameEdit_Update@i,w
 13470     09DD  077C               	addwf	??_MENU_NameEdit_Update,w
 13471     09DE  0086               	movwf	6
 13472     09DF  3000               	movlw	0
 13473     09E0  3D7D               	addwfc	??_MENU_NameEdit_Update+1,w
 13474     09E1  0087               	movwf	7
 13475     09E2  0801               	movf	1,w
 13476     09E3  00B2               	movwf	DISP_Char@c
 13477     09E4  085C               	movf	_MENU_var+1,w
 13478     09E5  0639               	xorwf	MENU_NameEdit_Update@i,w
 13479     09E6  1903               	skipnz
 13480     09E7  29E9               	goto	u9061
 13481     09E8  29EB               	goto	u9060
 13482     09E9                     u9061:
 13483     09E9  3001               	movlw	1
 13484     09EA  29EC               	goto	u9070
 13485     09EB                     u9060:
 13486     09EB  3000               	movlw	0
 13487     09EC                     u9070:
 13488     09EC  00B3               	movwf	DISP_Char@invert
 13489     09ED  0839               	movf	MENU_NameEdit_Update@i,w
 13490     09EE  3E02               	addlw	2
 13491     09EF  31A7  2720  3189   	fcall	_DISP_Char
 13492     09F2                     l7906:
 13493                           
 13494                           ;menu.c: 1166:   }
 13495     09F2  3001               	movlw	1
 13496     09F3  0020               	movlb	0	; select bank0
 13497     09F4  07B9               	addwf	MENU_NameEdit_Update@i,f
 13498     09F5                     l7908:
 13499     09F5  3008               	movlw	8
 13500     09F6  0239               	subwf	MENU_NameEdit_Update@i,w
 13501     09F7  1C03               	skipc
 13502     09F8  29FA               	goto	u9081
 13503     09F9  29FB               	goto	u9080
 13504     09FA                     u9081:
 13505     09FA  29D7               	goto	l7904
 13506     09FB                     u9080:
 13507     09FB                     l7910:
 13508                           
 13509                           ;menu.c: 1169:   if(MENU_var.nameedit.cursor < 8)
 13510     09FB  3008               	movlw	8
 13511     09FC  025C               	subwf	_MENU_var+1,w
 13512     09FD  1803               	skipnc
 13513     09FE  2A00               	goto	u9091
 13514     09FF  2A01               	goto	u9090
 13515     0A00                     u9091:
 13516     0A00  2A55               	goto	l7942
 13517     0A01                     u9090:
 13518     0A01                     l7912:
 13519                           
 13520                           ;menu.c: 1170:   {;menu.c: 1172:     char c = MENU_var.nameedit.tunemem.str_name[MENU_va
      +                          r.nameedit.cursor];
 13521     0A01  3060               	movlw	low (_MENU_var+5)
 13522     0A02  00FC               	movwf	??_MENU_NameEdit_Update
 13523     0A03  3000               	movlw	high (_MENU_var+5)
 13524     0A04  00FD               	movwf	??_MENU_NameEdit_Update+1
 13525     0A05  085C               	movf	_MENU_var+1,w
 13526     0A06  077C               	addwf	??_MENU_NameEdit_Update,w
 13527     0A07  0086               	movwf	6
 13528     0A08  3000               	movlw	0
 13529     0A09  3D7D               	addwfc	??_MENU_NameEdit_Update+1,w
 13530     0A0A  0087               	movwf	7
 13531     0A0B  0801               	movf	1,w
 13532     0A0C  00B7               	movwf	MENU_NameEdit_Update@c
 13533     0A0D                     l7914:
 13534                           
 13535                           ;menu.c: 1173:     i=0;
 13536     0A0D  01B9               	clrf	MENU_NameEdit_Update@i
 13537                           
 13538                           ;menu.c: 1174:     while( (c != NameEditChar[i]) && (i<sizeof(NameEditChar)) )
 13539     0A0E  2A11               	goto	l7918
 13540     0A0F                     l7916:
 13541                           
 13542                           ;menu.c: 1175:     {;menu.c: 1176:       i++;
 13543     0A0F  3001               	movlw	1
 13544     0A10  07B9               	addwf	MENU_NameEdit_Update@i,f
 13545     0A11                     l7918:
 13546                           
 13547                           ;menu.c: 1174:     while( (c != NameEditChar[i]) && (i<sizeof(NameEditChar)) )
 13548     0A11  0839               	movf	MENU_NameEdit_Update@i,w
 13549     0A12  3E00               	addlw	low (_NameEditChar| (0+32768))
 13550     0A13  0084               	movwf	4
 13551     0A14  30A0               	movlw	high (_NameEditChar| (0+32768))
 13552     0A15  1803               	skipnc
 13553     0A16  3E01               	addlw	1
 13554     0A17  0085               	movwf	5
 13555     0A18  0800               	movf	0,w	;code access
 13556     0A19  0637               	xorwf	MENU_NameEdit_Update@c,w
 13557     0A1A  1903               	skipnz
 13558     0A1B  2A1D               	goto	u9101
 13559     0A1C  2A1E               	goto	u9100
 13560     0A1D                     u9101:
 13561     0A1D  2A24               	goto	l7922
 13562     0A1E                     u9100:
 13563     0A1E                     l7920:
 13564     0A1E  3049               	movlw	73
 13565     0A1F  0239               	subwf	MENU_NameEdit_Update@i,w
 13566     0A20  1C03               	skipc
 13567     0A21  2A23               	goto	u9111
 13568     0A22  2A24               	goto	u9110
 13569     0A23                     u9111:
 13570     0A23  2A0F               	goto	l7916
 13571     0A24                     u9110:
 13572     0A24                     l7922:
 13573                           
 13574                           ;menu.c: 1178:     DISP_Char(2,1,c,1);
 13575     0A24  01B1               	clrf	DISP_Char@row
 13576     0A25  0AB1               	incf	DISP_Char@row,f
 13577     0A26  0837               	movf	MENU_NameEdit_Update@c,w
 13578     0A27  00B2               	movwf	DISP_Char@c
 13579     0A28  01B3               	clrf	DISP_Char@invert
 13580     0A29  0AB3               	incf	DISP_Char@invert,f
 13581     0A2A  3002               	movlw	2
 13582     0A2B  31A7  2720  3189   	fcall	_DISP_Char
 13583     0A2E                     l7924:
 13584                           
 13585                           ;menu.c: 1180:     for(uint8_t x=1; x< 8; x++)
 13586     0A2E  3001               	movlw	1
 13587     0A2F  0020               	movlb	0	; select bank0
 13588     0A30  00B8               	movwf	MENU_NameEdit_Update@x
 13589     0A31                     l7930:
 13590                           
 13591                           ;menu.c: 1181:     {;menu.c: 1182:       i++;
 13592     0A31  3001               	movlw	1
 13593     0A32  07B9               	addwf	MENU_NameEdit_Update@i,f
 13594     0A33                     l7932:
 13595                           
 13596                           ;menu.c: 1183:       if (i >= (sizeof(NameEditChar)-1) )
 13597     0A33  3048               	movlw	72
 13598     0A34  0239               	subwf	MENU_NameEdit_Update@i,w
 13599     0A35  1C03               	skipc
 13600     0A36  2A38               	goto	u9121
 13601     0A37  2A39               	goto	u9120
 13602     0A38                     u9121:
 13603     0A38  2A3A               	goto	l7936
 13604     0A39                     u9120:
 13605     0A39                     l7934:
 13606                           
 13607                           ;menu.c: 1184:       {;menu.c: 1185:          i=0;
 13608     0A39  01B9               	clrf	MENU_NameEdit_Update@i
 13609     0A3A                     l7936:
 13610                           
 13611                           ;menu.c: 1187:       DISP_Char(2+x,1,NameEditChar[i],0);
 13612     0A3A  01B1               	clrf	DISP_Char@row
 13613     0A3B  0AB1               	incf	DISP_Char@row,f
 13614     0A3C  0839               	movf	MENU_NameEdit_Update@i,w
 13615     0A3D  3E00               	addlw	low (_NameEditChar| (0+32768))
 13616     0A3E  0084               	movwf	4
 13617     0A3F  30A0               	movlw	high (_NameEditChar| (0+32768))
 13618     0A40  1803               	skipnc
 13619     0A41  3E01               	addlw	1
 13620     0A42  0085               	movwf	5
 13621     0A43  0800               	movf	0,w	;code access
 13622     0A44  00B2               	movwf	DISP_Char@c
 13623     0A45  01B3               	clrf	DISP_Char@invert
 13624     0A46  0838               	movf	MENU_NameEdit_Update@x,w
 13625     0A47  3E02               	addlw	2
 13626     0A48  31A7  2720  3189   	fcall	_DISP_Char
 13627     0A4B                     l7938:
 13628                           
 13629                           ;menu.c: 1188:     }
 13630     0A4B  3001               	movlw	1
 13631     0A4C  0020               	movlb	0	; select bank0
 13632     0A4D  07B8               	addwf	MENU_NameEdit_Update@x,f
 13633     0A4E                     l7940:
 13634     0A4E  3008               	movlw	8
 13635     0A4F  0238               	subwf	MENU_NameEdit_Update@x,w
 13636     0A50  1C03               	skipc
 13637     0A51  2A53               	goto	u9131
 13638     0A52  2A54               	goto	u9130
 13639     0A53                     u9131:
 13640     0A53  2A31               	goto	l7930
 13641     0A54                     u9130:
 13642     0A54  2A60               	goto	l1449
 13643     0A55                     l7942:
 13644                           
 13645                           ;menu.c: 1191:   {;menu.c: 1192:     DISP_Str(0, 1, str_SpaceLine,0);
 13646     0A55  01F8               	clrf	DISP_Str@row
 13647     0A56  0AF8               	incf	DISP_Str@row,f
 13648     0A57  3075               	movlw	low (_str_SpaceLine| (0+32768))
 13649     0A58  00F9               	movwf	DISP_Str@str
 13650     0A59  30A8               	movlw	high (_str_SpaceLine| (0+32768))
 13651     0A5A  00FA               	movwf	DISP_Str@str+1
 13652     0A5B  01FB               	clrf	DISP_Str@invert
 13653     0A5C  3000               	movlw	0
 13654     0A5D  318D  2547  3189   	fcall	_DISP_Str
 13655     0A60                     l1449:	
 13656                           ;menu.c: 1193:   }
 13657                           
 13658                           
 13659                           ;menu.c: 1195:   DISP_Str(0,3,str_Save, (MENU_var.nameedit.cursor == 8) );
 13660     0A60  3003               	movlw	3
 13661     0A61  00F8               	movwf	DISP_Str@row
 13662     0A62  30C0               	movlw	low (_str_Save| (0+32768))
 13663     0A63  00F9               	movwf	DISP_Str@str
 13664     0A64  30A9               	movlw	high (_str_Save| (0+32768))
 13665     0A65  00FA               	movwf	DISP_Str@str+1
 13666     0A66  3008               	movlw	8
 13667     0A67  0020               	movlb	0	; select bank0
 13668     0A68  065C               	xorwf	_MENU_var+1,w
 13669     0A69  1903               	btfsc	3,2
 13670     0A6A  2A6C               	goto	u9141
 13671     0A6B  2A6E               	goto	u9140
 13672     0A6C                     u9141:
 13673     0A6C  3001               	movlw	1
 13674     0A6D  2A6F               	goto	u9150
 13675     0A6E                     u9140:
 13676     0A6E  3000               	movlw	0
 13677     0A6F                     u9150:
 13678     0A6F  00FB               	movwf	DISP_Str@invert
 13679     0A70  3000               	movlw	0
 13680     0A71  318D  2547  3189   	fcall	_DISP_Str
 13681                           
 13682                           ;menu.c: 1196:   DISP_Str(7,3,str_Esc, (MENU_var.nameedit.cursor == 8 +1));
 13683     0A74  3003               	movlw	3
 13684     0A75  00F8               	movwf	DISP_Str@row
 13685     0A76  30E6               	movlw	low (_str_Esc| (0+32768))
 13686     0A77  00F9               	movwf	DISP_Str@str
 13687     0A78  30A9               	movlw	high (_str_Esc| (0+32768))
 13688     0A79  00FA               	movwf	DISP_Str@str+1
 13689     0A7A  3009               	movlw	9
 13690     0A7B  0020               	movlb	0	; select bank0
 13691     0A7C  065C               	xorwf	_MENU_var+1,w
 13692     0A7D  1903               	btfsc	3,2
 13693     0A7E  2A80               	goto	u9161
 13694     0A7F  2A82               	goto	u9160
 13695     0A80                     u9161:
 13696     0A80  3001               	movlw	1
 13697     0A81  2A83               	goto	u9170
 13698     0A82                     u9160:
 13699     0A82  3000               	movlw	0
 13700     0A83                     u9170:
 13701     0A83  00FB               	movwf	DISP_Str@invert
 13702     0A84  3007               	movlw	7
 13703     0A85  318D  2547  3189   	fcall	_DISP_Str
 13704     0A88                     l1450:
 13705     0A88  0008               	return
 13706     0A89                     __end_of_MENU_NameEdit_Update:
 13707                           
 13708                           	psect	text41
 13709     26E7                     __ptext41:	
 13710 ;; *************** function _MENU_Memory_Init *****************
 13711 ;; Defined at:
 13712 ;;		line 1058 in file "menu.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;		None
 13715 ;; Auto vars:     Size  Location     Type
 13716 ;;		None
 13717 ;; Return value:  Size  Location     Type
 13718 ;;                  1    wreg      void 
 13719 ;; Registers used:
 13720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13721 ;; Tracked objects:
 13722 ;;		On entry : 0/0
 13723 ;;		On exit  : 0/0
 13724 ;;		Unchanged: 0/0
 13725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13730 ;;Total ram usage:        0 bytes
 13731 ;; Hardware stack levels used: 1
 13732 ;; Hardware stack levels required when called: 1
 13733 ;; This function calls:
 13734 ;;		_BUTTON_Reset
 13735 ;;		_MENU_Memory_Update
 13736 ;; This function is called by:
 13737 ;;		_MENU_MemoryLoad_Init
 13738 ;;		_MENU_MemorySave_Init
 13739 ;; This function uses a non-reentrant model
 13740 ;;
 13741                           
 13742     26E7                     _MENU_Memory_Init:	
 13743                           ;psect for function _MENU_Memory_Init
 13744                           
 13745     26E7                     l7892:	
 13746                           ;incstack = 0
 13747                           ; Regs used in _MENU_Memory_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13748                           
 13749                           
 13750                           ;menu.c: 1060:   MENU_var.memory.cursor =0;
 13751     26E7  0020               	movlb	0	; select bank0
 13752     26E8  01DD               	clrf	_MENU_var+2
 13753                           
 13754                           ;menu.c: 1061:   MENU_var.memory.top=0;
 13755     26E9  01DF               	clrf	_MENU_var+4
 13756                           
 13757                           ;menu.c: 1062:   MENU_var.memory.timeout =0;
 13758     26EA  01DB               	clrf	_MENU_var
 13759     26EB  01DC               	clrf	_MENU_var+1
 13760     26EC                     l7894:
 13761                           
 13762                           ;menu.c: 1063:   MENU_Memory_Update();
 13763     26EC  319F  274D  31A6   	fcall	_MENU_Memory_Update
 13764     26EF                     l7896:
 13765                           
 13766                           ;menu.c: 1064:   BUTTON_Reset();
 13767     26EF  31A6  26BE  31A6   	fcall	_BUTTON_Reset
 13768     26F2                     l1413:
 13769     26F2  0008               	return
 13770     26F3                     __end_of_MENU_Memory_Init:
 13771                           
 13772                           	psect	text42
 13773     1F4D                     __ptext42:	
 13774 ;; *************** function _MENU_Memory_Update *****************
 13775 ;; Defined at:
 13776 ;;		line 1035 in file "menu.c"
 13777 ;; Parameters:    Size  Location     Type
 13778 ;;		None
 13779 ;; Auto vars:     Size  Location     Type
 13780 ;;  i               1   32[BANK0 ] unsigned char 
 13781 ;;  memory         11   21[BANK0 ] struct .
 13782 ;;  str_index       3   17[BANK0 ] unsigned char [3]
 13783 ;;  index           1   20[BANK0 ] unsigned char 
 13784 ;; Return value:  Size  Location     Type
 13785 ;;                  1    wreg      void 
 13786 ;; Registers used:
 13787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13788 ;; Tracked objects:
 13789 ;;		On entry : 0/0
 13790 ;;		On exit  : 0/0
 13791 ;;		Unchanged: 0/0
 13792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13794 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13796 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13797 ;;Total ram usage:       16 bytes
 13798 ;; Hardware stack levels used: 1
 13799 ;; Hardware stack levels required when called: 1
 13800 ;; This function calls:
 13801 ;;		_DISP_Str
 13802 ;;		_EEPROM_Read
 13803 ;;		___bmul
 13804 ;; This function is called by:
 13805 ;;		_MENU_Memory_Init
 13806 ;;		_MENU_Memory_Run
 13807 ;; This function uses a non-reentrant model
 13808 ;;
 13809                           
 13810     1F4D                     _MENU_Memory_Update:	
 13811                           ;psect for function _MENU_Memory_Update
 13812                           
 13813     1F4D                     l7716:	
 13814                           ;incstack = 0
 13815                           ; Regs used in _MENU_Memory_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13816                           
 13817                           
 13818                           ;menu.c: 1037:   char str_index[3] = "0:";
 13819     1F4D  0021               	movlb	1	; select bank1
 13820     1F4E  0866               	movf	MENU_Memory_Update@F3118^(0+128),w
 13821     1F4F  0020               	movlb	0	; select bank0
 13822     1F50  00B1               	movwf	MENU_Memory_Update@str_index
 13823     1F51  0021               	movlb	1	; select bank1
 13824     1F52  0867               	movf	(MENU_Memory_Update@F3118+1)^(0+128),w
 13825     1F53  0020               	movlb	0	; select bank0
 13826     1F54  00B2               	movwf	MENU_Memory_Update@str_index+1
 13827     1F55  0021               	movlb	1	; select bank1
 13828     1F56  0868               	movf	(MENU_Memory_Update@F3118+2)^(0+128),w
 13829     1F57  0020               	movlb	0	; select bank0
 13830     1F58  00B3               	movwf	MENU_Memory_Update@str_index+2
 13831     1F59                     l7718:
 13832                           
 13833                           ;menu.c: 1038:   uint8_t index;;menu.c: 1043:   }memory;;menu.c: 1045:   for(uint8_t i =
      +                           0; i < 3; i++)
 13834     1F59  01C0               	clrf	MENU_Memory_Update@i
 13835     1F5A                     l7724:
 13836                           
 13837                           ;menu.c: 1046:   {;menu.c: 1047:     index = MENU_var.memory.top + i;
 13838     1F5A  085F               	movf	_MENU_var+4,w
 13839     1F5B  0740               	addwf	MENU_Memory_Update@i,w
 13840     1F5C  00B4               	movwf	MENU_Memory_Update@index
 13841                           
 13842                           ;menu.c: 1048:     str_index[0] = '0' + index;
 13843     1F5D  0834               	movf	MENU_Memory_Update@index,w
 13844     1F5E  3E30               	addlw	48
 13845     1F5F  00B1               	movwf	MENU_Memory_Update@str_index
 13846     1F60                     l7726:
 13847                           
 13848                           ;menu.c: 1049:     DISP_Str(0, i+1,str_index,(index == MENU_var.memory.cursor));
 13849     1F60  0840               	movf	MENU_Memory_Update@i,w
 13850     1F61  3E01               	addlw	1
 13851     1F62  00F8               	movwf	DISP_Str@row
 13852     1F63  3031               	movlw	low MENU_Memory_Update@str_index
 13853     1F64  00F9               	movwf	DISP_Str@str
 13854     1F65  3000               	movlw	high MENU_Memory_Update@str_index
 13855     1F66  00FA               	movwf	DISP_Str@str+1
 13856     1F67  085D               	movf	_MENU_var+2,w
 13857     1F68  0634               	xorwf	MENU_Memory_Update@index,w
 13858     1F69  1903               	skipnz
 13859     1F6A  2F6C               	goto	u8521
 13860     1F6B  2F6E               	goto	u8520
 13861     1F6C                     u8521:
 13862     1F6C  3001               	movlw	1
 13863     1F6D  2F6F               	goto	u8530
 13864     1F6E                     u8520:
 13865     1F6E  3000               	movlw	0
 13866     1F6F                     u8530:
 13867     1F6F  00FB               	movwf	DISP_Str@invert
 13868     1F70  3000               	movlw	0
 13869     1F71  318D  2547  319F   	fcall	_DISP_Str
 13870     1F74                     l7728:
 13871                           
 13872                           ;menu.c: 1052:     EEPROM_Read((uint8_t)&ee_tunemem + (sizeof(tunemem_t) * index) , &mem
      +                          ory, sizeof(tunemem_t));
 13873     1F74  3035               	movlw	low MENU_Memory_Update@memory
 13874     1F75  00F3               	movwf	EEPROM_Read@ptrValue
 13875     1F76  3000               	movlw	high MENU_Memory_Update@memory
 13876     1F77  00F4               	movwf	EEPROM_Read@ptrValue+1
 13877     1F78  300A               	movlw	10
 13878     1F79  00F5               	movwf	EEPROM_Read@size
 13879     1F7A  300A               	movlw	10
 13880     1F7B  00F0               	movwf	___bmul@multiplicand
 13881     1F7C  0020               	movlb	0	; select bank0
 13882     1F7D  0834               	movf	MENU_Memory_Update@index,w
 13883     1F7E  31A7  2745  319F   	fcall	___bmul
 13884     1F81  3E00               	addlw	low _ee_tunemem
 13885     1F82  3198  2093  319F   	fcall	_EEPROM_Read
 13886     1F85                     l7730:
 13887                           
 13888                           ;menu.c: 1053:     memory.bytes[sizeof(tunemem_t)] =0;
 13889     1F85  0020               	movlb	0	; select bank0
 13890     1F86  01BF               	clrf	MENU_Memory_Update@memory+10
 13891     1F87                     l7732:
 13892                           
 13893                           ;menu.c: 1054:     DISP_Str(2,i+1,memory.tunemem.str_name, (index == MENU_var.memory.cur
      +                          sor));
 13894     1F87  0840               	movf	MENU_Memory_Update@i,w
 13895     1F88  3E01               	addlw	1
 13896     1F89  00F8               	movwf	DISP_Str@row
 13897     1F8A  3037               	movlw	low (MENU_Memory_Update@memory+2)
 13898     1F8B  00F9               	movwf	DISP_Str@str
 13899     1F8C  3000               	movlw	high (MENU_Memory_Update@memory+2)
 13900     1F8D  00FA               	movwf	DISP_Str@str+1
 13901     1F8E  085D               	movf	_MENU_var+2,w
 13902     1F8F  0634               	xorwf	MENU_Memory_Update@index,w
 13903     1F90  1903               	skipnz
 13904     1F91  2F93               	goto	u8541
 13905     1F92  2F95               	goto	u8540
 13906     1F93                     u8541:
 13907     1F93  3001               	movlw	1
 13908     1F94  2F96               	goto	u8550
 13909     1F95                     u8540:
 13910     1F95  3000               	movlw	0
 13911     1F96                     u8550:
 13912     1F96  00FB               	movwf	DISP_Str@invert
 13913     1F97  3002               	movlw	2
 13914     1F98  318D  2547  319F   	fcall	_DISP_Str
 13915     1F9B                     l7734:
 13916                           
 13917                           ;menu.c: 1055:   }
 13918     1F9B  3001               	movlw	1
 13919     1F9C  0020               	movlb	0	; select bank0
 13920     1F9D  07C0               	addwf	MENU_Memory_Update@i,f
 13921     1F9E                     l7736:
 13922     1F9E  3003               	movlw	3
 13923     1F9F  0240               	subwf	MENU_Memory_Update@i,w
 13924     1FA0  1C03               	skipc
 13925     1FA1  2FA3               	goto	u8561
 13926     1FA2  2FA4               	goto	u8560
 13927     1FA3                     u8561:
 13928     1FA3  2F5A               	goto	l7724
 13929     1FA4                     u8560:
 13930     1FA4                     l1410:
 13931     1FA4  0008               	return
 13932     1FA5                     __end_of_MENU_Memory_Update:
 13933                           
 13934                           	psect	text43
 13935     26DB                     __ptext43:	
 13936 ;; *************** function _MENU_Main_Weakup *****************
 13937 ;; Defined at:
 13938 ;;		line 260 in file "menu.c"
 13939 ;; Parameters:    Size  Location     Type
 13940 ;;		None
 13941 ;; Auto vars:     Size  Location     Type
 13942 ;;		None
 13943 ;; Return value:  Size  Location     Type
 13944 ;;                  1    wreg      void 
 13945 ;; Registers used:
 13946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13947 ;; Tracked objects:
 13948 ;;		On entry : 0/0
 13949 ;;		On exit  : 0/0
 13950 ;;		Unchanged: 0/0
 13951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13956 ;;Total ram usage:        0 bytes
 13957 ;; Hardware stack levels used: 1
 13958 ;; Hardware stack levels required when called: 2
 13959 ;; This function calls:
 13960 ;;		_MENU_Main_Init
 13961 ;;		_UTILI_Set_LC_Relays
 13962 ;; This function is called by:
 13963 ;;		_MENU_Main_Run
 13964 ;; This function uses a non-reentrant model
 13965 ;;
 13966                           
 13967     26DB                     _MENU_Main_Weakup:	
 13968                           ;psect for function _MENU_Main_Weakup
 13969                           
 13970     26DB                     l8004:	
 13971                           ;incstack = 0
 13972                           ; Regs used in _MENU_Main_Weakup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13973                           
 13974                           
 13975                           ;menu.c: 262:    UTILI_Set_LC_Relays(MENU_var.main.relais_backup);
 13976     26DB  0020               	movlb	0	; select bank0
 13977     26DC  0862               	movf	_MENU_var+7,w
 13978     26DD  00F2               	movwf	UTILI_Set_LC_Relays@relays+1
 13979     26DE  0861               	movf	_MENU_var+6,w
 13980     26DF  00F1               	movwf	UTILI_Set_LC_Relays@relays
 13981     26E0  31A7  2758  31A6   	fcall	_UTILI_Set_LC_Relays
 13982     26E3                     l8006:
 13983                           
 13984                           ;menu.c: 263:    MENU_Main_Init();
 13985     26E3  319A  22F8  31A6   	fcall	_MENU_Main_Init
 13986     26E6                     l1200:
 13987     26E6  0008               	return
 13988     26E7                     __end_of_MENU_Main_Weakup:
 13989                           
 13990                           	psect	text44
 13991     0929                     __ptext44:	
 13992 ;; *************** function _MENU_Main_Update *****************
 13993 ;; Defined at:
 13994 ;;		line 202 in file "menu.c"
 13995 ;; Parameters:    Size  Location     Type
 13996 ;;		None
 13997 ;; Auto vars:     Size  Location     Type
 13998 ;;  i               1   40[BANK0 ] unsigned char 
 13999 ;;  str             7   29[BANK0 ] unsigned char [7]
 14000 ;;  p_str           2   36[BANK0 ] PTR const unsigned char 
 14001 ;;		 -> str_AUTO(5), NULL(0), 
 14002 ;;  l_row           1   39[BANK0 ] unsigned char 
 14003 ;;  c_row           1   38[BANK0 ] unsigned char 
 14004 ;; Return value:  Size  Location     Type
 14005 ;;                  1    wreg      void 
 14006 ;; Registers used:
 14007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14008 ;; Tracked objects:
 14009 ;;		On entry : 0/0
 14010 ;;		On exit  : 0/0
 14011 ;;		Unchanged: 0/0
 14012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14014 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14016 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14017 ;;Total ram usage:       12 bytes
 14018 ;; Hardware stack levels used: 1
 14019 ;; Hardware stack levels required when called: 3
 14020 ;; This function calls:
 14021 ;;		_DISP_Char
 14022 ;;		_DISP_PWR
 14023 ;;		_DISP_SWR
 14024 ;;		_DISP_Str
 14025 ;;		_UTILI_GetCapValueStr
 14026 ;;		_UTILI_GetIndValueStr
 14027 ;; This function is called by:
 14028 ;;		_MENU_Main_Run
 14029 ;; This function uses a non-reentrant model
 14030 ;;
 14031                           
 14032     0929                     _MENU_Main_Update:	
 14033                           ;psect for function _MENU_Main_Update
 14034                           
 14035     0929                     l7960:	
 14036                           ;incstack = 0
 14037                           ; Regs used in _MENU_Main_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14038                           
 14039                           
 14040                           ;menu.c: 204:   uint8_t c_row = 2;
 14041     0929  3002               	movlw	2
 14042     092A  0020               	movlb	0	; select bank0
 14043     092B  00C6               	movwf	MENU_Main_Update@c_row
 14044                           
 14045                           ;menu.c: 205:   uint8_t l_row = 3;
 14046     092C  3003               	movlw	3
 14047     092D  00C7               	movwf	MENU_Main_Update@l_row
 14048     092E                     l7962:
 14049     092E                     l7964:
 14050                           
 14051                           ;menu.c: 208:   char str[7];;menu.c: 210:   DISP_PWR(4, 0, global.PWR, 0);
 14052     092E  01B1               	clrf	DISP_PWR@row
 14053     092F  0021               	movlb	1	; select bank1
 14054     0930  083E               	movf	(_global+1)^(0+128),w
 14055     0931  0020               	movlb	0	; select bank0
 14056     0932  00B3               	movwf	DISP_PWR@deciWatt+1
 14057     0933  0021               	movlb	1	; select bank1
 14058     0934  083D               	movf	_global^(0+128),w
 14059     0935  0020               	movlb	0	; select bank0
 14060     0936  00B2               	movwf	DISP_PWR@deciWatt
 14061     0937  01B4               	clrf	DISP_PWR@invert
 14062     0938  3004               	movlw	4
 14063     0939  319E  26A5  3189   	fcall	_DISP_PWR
 14064     093C                     l7966:
 14065                           
 14066                           ;menu.c: 211:   DISP_SWR(4, 1, global.SWR, 0);
 14067     093C  0020               	movlb	0	; select bank0
 14068     093D  01B1               	clrf	DISP_SWR@row
 14069     093E  0AB1               	incf	DISP_SWR@row,f
 14070     093F  0021               	movlb	1	; select bank1
 14071     0940  0840               	movf	((_global+1)^(0+128)+2),w
 14072     0941  0020               	movlb	0	; select bank0
 14073     0942  00B3               	movwf	DISP_SWR@centiSWR+1
 14074     0943  0021               	movlb	1	; select bank1
 14075     0944  083F               	movf	(_global^(0+128)+2),w
 14076     0945  0020               	movlb	0	; select bank0
 14077     0946  00B2               	movwf	DISP_SWR@centiSWR
 14078     0947  01B4               	clrf	DISP_SWR@invert
 14079     0948  3004               	movlw	4
 14080     0949  319D  2545  3189   	fcall	_DISP_SWR
 14081     094C                     l7968:
 14082                           
 14083                           ;menu.c: 213:   if (global.cap_sw)
 14084     094C  0021               	movlb	1	; select bank1
 14085     094D  0858               	movf	(_global^(0+128)+27),w
 14086     094E  1903               	btfsc	3,2
 14087     094F  2951               	goto	u9231
 14088     0950  2952               	goto	u9230
 14089     0951                     u9231:
 14090     0951  2957               	goto	l7972
 14091     0952                     u9230:
 14092     0952                     l7970:
 14093                           
 14094                           ;menu.c: 214:   {;menu.c: 215:     c_row = 3;
 14095     0952  3003               	movlw	3
 14096     0953  0020               	movlb	0	; select bank0
 14097     0954  00C6               	movwf	MENU_Main_Update@c_row
 14098                           
 14099                           ;menu.c: 216:     l_row = 2;
 14100     0955  3002               	movlw	2
 14101     0956  00C7               	movwf	MENU_Main_Update@l_row
 14102     0957                     l7972:
 14103                           
 14104                           ;menu.c: 219:   if (global.bypass_enable == 1)
 14105     0957  0021               	movlb	1	; select bank1
 14106     0958  0349               	decf	(_global^(0+128)+12),w
 14107     0959  1D03               	btfss	3,2
 14108     095A  295C               	goto	u9241
 14109     095B  295D               	goto	u9240
 14110     095C                     u9241:
 14111     095C  296A               	goto	l7976
 14112     095D                     u9240:
 14113     095D                     l7974:
 14114                           
 14115                           ;menu.c: 220:   {;menu.c: 221:     DISP_Str(0, 3, str_Bypass, 1);
 14116     095D  3003               	movlw	3
 14117     095E  00F8               	movwf	DISP_Str@row
 14118     095F  30F8               	movlw	low (_str_Bypass| (0+32768))
 14119     0960  00F9               	movwf	DISP_Str@str
 14120     0961  30A8               	movlw	high (_str_Bypass| (0+32768))
 14121     0962  00FA               	movwf	DISP_Str@str+1
 14122     0963  01FB               	clrf	DISP_Str@invert
 14123     0964  0AFB               	incf	DISP_Str@invert,f
 14124     0965  3000               	movlw	0
 14125     0966  318D  2547  3189   	fcall	_DISP_Str
 14126                           
 14127                           ;menu.c: 222:   }
 14128     0969  29AA               	goto	l7986
 14129     096A                     l7976:
 14130                           
 14131                           ;menu.c: 224:   {;menu.c: 225:     DISP_Str(0, c_row,str_C_, 0);
 14132     096A  0020               	movlb	0	; select bank0
 14133     096B  0846               	movf	MENU_Main_Update@c_row,w
 14134     096C  00F8               	movwf	DISP_Str@row
 14135     096D  30F5               	movlw	low (_str_C_| (0+32768))
 14136     096E  00F9               	movwf	DISP_Str@str
 14137     096F  30A9               	movlw	high (_str_C_| (0+32768))
 14138     0970  00FA               	movwf	DISP_Str@str+1
 14139     0971  01FB               	clrf	DISP_Str@invert
 14140     0972  3000               	movlw	0
 14141     0973  318D  2547  3189   	fcall	_DISP_Str
 14142     0976                     l7978:
 14143                           
 14144                           ;menu.c: 226:     UTILI_GetCapValueStr(str, sizeof (str));
 14145     0976  303D               	movlw	(low (MENU_Main_Update@str| 0))& (0+255)
 14146     0977  0020               	movlb	0	; select bank0
 14147     0978  00A3               	movwf	UTILI_GetCapValueStr@str
 14148     0979  3007               	movlw	7
 14149     097A  00A4               	movwf	UTILI_GetCapValueStr@str_size
 14150     097B  319A  223B  3189   	fcall	_UTILI_GetCapValueStr
 14151     097E                     l7980:
 14152                           
 14153                           ;menu.c: 227:     DISP_Str(2, c_row, str, 0);
 14154     097E  0020               	movlb	0	; select bank0
 14155     097F  0846               	movf	MENU_Main_Update@c_row,w
 14156     0980  00F8               	movwf	DISP_Str@row
 14157     0981  303D               	movlw	low MENU_Main_Update@str
 14158     0982  00F9               	movwf	DISP_Str@str
 14159     0983  3000               	movlw	high MENU_Main_Update@str
 14160     0984  00FA               	movwf	DISP_Str@str+1
 14161     0985  01FB               	clrf	DISP_Str@invert
 14162     0986  3002               	movlw	2
 14163     0987  318D  2547  3189   	fcall	_DISP_Str
 14164     098A                     l7982:
 14165                           
 14166                           ;menu.c: 229:     DISP_Str(0, l_row,str_L_, 0);
 14167     098A  0020               	movlb	0	; select bank0
 14168     098B  0847               	movf	MENU_Main_Update@l_row,w
 14169     098C  00F8               	movwf	DISP_Str@row
 14170     098D  30F8               	movlw	low (_str_L_| (0+32768))
 14171     098E  00F9               	movwf	DISP_Str@str
 14172     098F  30A9               	movlw	high (_str_L_| (0+32768))
 14173     0990  00FA               	movwf	DISP_Str@str+1
 14174     0991  01FB               	clrf	DISP_Str@invert
 14175     0992  3000               	movlw	0
 14176     0993  318D  2547  3189   	fcall	_DISP_Str
 14177     0996                     l7984:
 14178                           
 14179                           ;menu.c: 230:     UTILI_GetIndValueStr(str, sizeof (str));
 14180     0996  303D               	movlw	(low (MENU_Main_Update@str| 0))& (0+255)
 14181     0997  0020               	movlb	0	; select bank0
 14182     0998  00A3               	movwf	UTILI_GetIndValueStr@str
 14183     0999  3007               	movlw	7
 14184     099A  00A4               	movwf	UTILI_GetIndValueStr@str_size
 14185     099B  319A  2269  3189   	fcall	_UTILI_GetIndValueStr
 14186                           
 14187                           ;menu.c: 231:     DISP_Str(2, l_row, str, 0);
 14188     099E  0020               	movlb	0	; select bank0
 14189     099F  0847               	movf	MENU_Main_Update@l_row,w
 14190     09A0  00F8               	movwf	DISP_Str@row
 14191     09A1  303D               	movlw	low MENU_Main_Update@str
 14192     09A2  00F9               	movwf	DISP_Str@str
 14193     09A3  3000               	movlw	high MENU_Main_Update@str
 14194     09A4  00FA               	movwf	DISP_Str@str+1
 14195     09A5  01FB               	clrf	DISP_Str@invert
 14196     09A6  3002               	movlw	2
 14197     09A7  318D  2547  3189   	fcall	_DISP_Str
 14198     09AA                     l7986:
 14199                           
 14200                           ;menu.c: 235:   if((global.tune_auto_enable == 1) && (global.bypass_enable != 1))
 14201     09AA  0021               	movlb	1	; select bank1
 14202     09AB  0345               	decf	(_global^(0+128)+8),w
 14203     09AC  1D03               	btfss	3,2
 14204     09AD  29AF               	goto	u9251
 14205     09AE  29B0               	goto	u9250
 14206     09AF                     u9251:
 14207     09AF  29D4               	goto	l1194
 14208     09B0                     u9250:
 14209     09B0                     l7988:
 14210     09B0  0349               	decf	(_global^(0+128)+12),w
 14211     09B1  1903               	btfsc	3,2
 14212     09B2  29B4               	goto	u9261
 14213     09B3  29B5               	goto	u9260
 14214     09B4                     u9261:
 14215     09B4  29D4               	goto	l1194
 14216     09B5                     u9260:
 14217     09B5                     l7990:
 14218                           
 14219                           ;menu.c: 236:   {;menu.c: 237:     p_str = str_AUTO;
 14220     09B5  30CF               	movlw	low (_str_AUTO| (0+32768))
 14221     09B6  0020               	movlb	0	; select bank0
 14222     09B7  00C4               	movwf	MENU_Main_Update@p_str
 14223     09B8  30A9               	movlw	high (_str_AUTO| (0+32768))
 14224     09B9  00C5               	movwf	MENU_Main_Update@p_str+1
 14225     09BA                     l7992:
 14226                           
 14227                           ;menu.c: 238:     for(uint8_t i=0; i<4; i++)
 14228     09BA  01C8               	clrf	MENU_Main_Update@i
 14229     09BB                     l7998:
 14230                           
 14231                           ;menu.c: 239:     {;menu.c: 240:      DISP_Char(9, i, p_str[i], 0);
 14232     09BB  0848               	movf	MENU_Main_Update@i,w
 14233     09BC  00B1               	movwf	DISP_Char@row
 14234     09BD  0848               	movf	MENU_Main_Update@i,w
 14235     09BE  0744               	addwf	MENU_Main_Update@p_str,w
 14236     09BF  0084               	movwf	4
 14237     09C0  0845               	movf	MENU_Main_Update@p_str+1,w
 14238     09C1  1803               	skipnc
 14239     09C2  3E01               	addlw	1
 14240     09C3  0085               	movwf	5
 14241     09C4  0800               	movf	0,w	;code access
 14242     09C5  00B2               	movwf	DISP_Char@c
 14243     09C6  01B3               	clrf	DISP_Char@invert
 14244     09C7  3009               	movlw	9
 14245     09C8  31A7  2720  3189   	fcall	_DISP_Char
 14246     09CB                     l8000:
 14247                           
 14248                           ;menu.c: 241:     }
 14249     09CB  3001               	movlw	1
 14250     09CC  0020               	movlb	0	; select bank0
 14251     09CD  07C8               	addwf	MENU_Main_Update@i,f
 14252     09CE                     l8002:
 14253     09CE  3004               	movlw	4
 14254     09CF  0248               	subwf	MENU_Main_Update@i,w
 14255     09D0  1C03               	skipc
 14256     09D1  29D3               	goto	u9271
 14257     09D2  29D4               	goto	u9270
 14258     09D3                     u9271:
 14259     09D3  29BB               	goto	l7998
 14260     09D4                     u9270:
 14261     09D4                     l1194:
 14262     09D4  0008               	return
 14263     09D5                     __end_of_MENU_Main_Update:
 14264                           
 14265                           	psect	text45
 14266     1A69                     __ptext45:	
 14267 ;; *************** function _UTILI_GetIndValueStr *****************
 14268 ;; Defined at:
 14269 ;;		line 259 in file "utili.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;  str             1    3[BANK0 ] PTR unsigned char 
 14272 ;;		 -> MENU_RelTest_Update@str(7), MENU_Main_Update@str(7), 
 14273 ;;  str_size        1    4[BANK0 ] unsigned char 
 14274 ;; Auto vars:     Size  Location     Type
 14275 ;;  value           2    5[BANK0 ] short 
 14276 ;; Return value:  Size  Location     Type
 14277 ;;                  1    wreg      void 
 14278 ;; Registers used:
 14279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14280 ;; Tracked objects:
 14281 ;;		On entry : 0/0
 14282 ;;		On exit  : 0/0
 14283 ;;		Unchanged: 0/0
 14284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14286 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14288 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;Total ram usage:        4 bytes
 14290 ;; Hardware stack levels used: 1
 14291 ;; Hardware stack levels required when called: 1
 14292 ;; This function calls:
 14293 ;;		_UTILI_GetIndValue
 14294 ;;		_UTILI_Int2Str
 14295 ;; This function is called by:
 14296 ;;		_MENU_Main_Update
 14297 ;;		_MENU_RelTest_Update
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           
 14301     1A69                     _UTILI_GetIndValueStr:	
 14302                           ;psect for function _UTILI_GetIndValueStr
 14303                           
 14304     1A69                     l7644:	
 14305                           ;incstack = 0
 14306                           ; Regs used in _UTILI_GetIndValueStr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14307                           
 14308                           
 14309                           ;utili.c: 259: void UTILI_GetIndValueStr(char *str, uint8_t str_size);utili.c: 260: {;ut
      +                          ili.c: 261:   if (str_size < 7) return;
 14310     1A69  3007               	movlw	7
 14311     1A6A  0020               	movlb	0	; select bank0
 14312     1A6B  0224               	subwf	UTILI_GetIndValueStr@str_size,w
 14313     1A6C  1803               	skipnc
 14314     1A6D  2A6F               	goto	u8461
 14315     1A6E  2A70               	goto	u8460
 14316     1A6F                     u8461:
 14317     1A6F  2A71               	goto	l7648
 14318     1A70                     u8460:
 14319     1A70  2A96               	goto	l540
 14320     1A71                     l7648:
 14321                           
 14322                           ;utili.c: 262:   int16_t value = UTILI_GetIndValue();
 14323     1A71  319B  2391  319A   	fcall	_UTILI_GetIndValue
 14324     1A74  0871               	movf	?_UTILI_GetIndValue+1,w
 14325     1A75  0020               	movlb	0	; select bank0
 14326     1A76  00A6               	movwf	UTILI_GetIndValueStr@value+1
 14327     1A77  0870               	movf	?_UTILI_GetIndValue,w
 14328     1A78  00A5               	movwf	UTILI_GetIndValueStr@value
 14329     1A79                     l7650:
 14330                           
 14331                           ;utili.c: 263:   UTILI_Int2Str(value, str, 5);
 14332     1A79  0826               	movf	UTILI_GetIndValueStr@value+1,w
 14333     1A7A  00F9               	movwf	UTILI_Int2Str@number+1
 14334     1A7B  0825               	movf	UTILI_GetIndValueStr@value,w
 14335     1A7C  00F8               	movwf	UTILI_Int2Str@number
 14336     1A7D  0823               	movf	UTILI_GetIndValueStr@str,w
 14337     1A7E  00FA               	movwf	UTILI_Int2Str@output
 14338     1A7F  3005               	movlw	5
 14339     1A80  00FB               	movwf	UTILI_Int2Str@size
 14340     1A81  3194  241B  319A   	fcall	_UTILI_Int2Str
 14341     1A84                     l7652:
 14342                           
 14343                           ;utili.c: 264:   str[4] = 'n';
 14344     1A84  0020               	movlb	0	; select bank0
 14345     1A85  0823               	movf	UTILI_GetIndValueStr@str,w
 14346     1A86  3E04               	addlw	4
 14347     1A87  0086               	movwf	6
 14348     1A88  0187               	clrf	7
 14349     1A89  306E               	movlw	110
 14350     1A8A  0081               	movwf	1
 14351     1A8B                     l7654:
 14352                           
 14353                           ;utili.c: 265:   str[5] = 'H';
 14354     1A8B  0823               	movf	UTILI_GetIndValueStr@str,w
 14355     1A8C  3E05               	addlw	5
 14356     1A8D  0086               	movwf	6
 14357     1A8E  0187               	clrf	7
 14358     1A8F  3048               	movlw	72
 14359     1A90  0081               	movwf	1
 14360     1A91                     l7656:
 14361                           
 14362                           ;utili.c: 266:   str[6] =0;
 14363     1A91  0823               	movf	UTILI_GetIndValueStr@str,w
 14364     1A92  3E06               	addlw	6
 14365     1A93  0086               	movwf	6
 14366     1A94  0187               	clrf	7
 14367     1A95  0181               	clrf	1
 14368     1A96                     l540:
 14369     1A96  0008               	return
 14370     1A97                     __end_of_UTILI_GetIndValueStr:
 14371                           
 14372                           	psect	text46
 14373     1B91                     __ptext46:	
 14374 ;; *************** function _UTILI_GetIndValue *****************
 14375 ;; Defined at:
 14376 ;;		line 235 in file "utili.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;		None
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;  i               1    8[COMMON] unsigned char 
 14381 ;;  value           2    6[COMMON] short 
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  2    0[COMMON] short 
 14384 ;; Registers used:
 14385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 14386 ;; Tracked objects:
 14387 ;;		On entry : 0/0
 14388 ;;		On exit  : 0/0
 14389 ;;		Unchanged: 0/0
 14390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14392 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14393 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14394 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14395 ;;Total ram usage:        9 bytes
 14396 ;; Hardware stack levels used: 1
 14397 ;; Hardware stack levels required when called: 1
 14398 ;; This function calls:
 14399 ;;		Nothing
 14400 ;; This function is called by:
 14401 ;;		_UTILI_GetIndValueStr
 14402 ;; This function uses a non-reentrant model
 14403 ;;
 14404                           
 14405     1B91                     _UTILI_GetIndValue:	
 14406                           ;psect for function _UTILI_GetIndValue
 14407                           
 14408     1B91                     l7516:	
 14409                           ;incstack = 0
 14410                           ; Regs used in _UTILI_GetIndValue: [wreg-fsr0h+status,2+status,0+pclath]
 14411                           
 14412                           
 14413                           ;utili.c: 237:   int16_t value = 0;
 14414     1B91  01F6               	clrf	UTILI_GetIndValue@value
 14415     1B92  01F7               	clrf	UTILI_GetIndValue@value+1
 14416                           
 14417                           ;utili.c: 238:   for (uint8_t i = 0; i < 7; i++)
 14418     1B93  01F8               	clrf	UTILI_GetIndValue@i
 14419     1B94                     l7522:
 14420                           
 14421                           ;utili.c: 239:   {;utili.c: 240:     if (global.ind_relays & (1 << i))
 14422     1B94  3001               	movlw	1
 14423     1B95  00F2               	movwf	??_UTILI_GetIndValue
 14424     1B96  0A78               	incf	UTILI_GetIndValue@i,w
 14425     1B97  2B99               	goto	u8004
 14426     1B98                     u8005:
 14427     1B98  35F2               	lslf	??_UTILI_GetIndValue,f
 14428     1B99                     u8004:
 14429     1B99  0B89               	decfsz	9,f
 14430     1B9A  2B98               	goto	u8005
 14431     1B9B  0872               	movf	??_UTILI_GetIndValue,w
 14432     1B9C  0021               	movlb	1	; select bank1
 14433     1B9D  055A               	andwf	(_global^(0+128)+29),w
 14434     1B9E  1903               	btfsc	3,2
 14435     1B9F  2BA1               	goto	u8011
 14436     1BA0  2BA2               	goto	u8010
 14437     1BA1                     u8011:
 14438     1BA1  2BB8               	goto	l7526
 14439     1BA2                     u8010:
 14440     1BA2                     l7524:
 14441                           
 14442                           ;utili.c: 241:     {;utili.c: 243:       value = value + IND_VALUES[i];
 14443     1BA2  0878               	movf	UTILI_GetIndValue@i,w
 14444     1BA3  00F2               	movwf	??_UTILI_GetIndValue
 14445     1BA4  01F3               	clrf	??_UTILI_GetIndValue+1
 14446     1BA5  35F2               	lslf	??_UTILI_GetIndValue,f
 14447     1BA6  0DF3               	rlf	??_UTILI_GetIndValue+1,f
 14448     1BA7  3000               	movlw	low _IND_VALUES
 14449     1BA8  0772               	addwf	??_UTILI_GetIndValue,w
 14450     1BA9  0084               	movwf	4
 14451     1BAA  3028               	movlw	high _IND_VALUES
 14452     1BAB  3D73               	addwfc	??_UTILI_GetIndValue+1,w
 14453     1BAC  3880               	iorlw	128
 14454     1BAD  0085               	movwf	5
 14455     1BAE  3F00               	moviw [0]fsr0
 14456     1BAF  00F4               	movwf	??_UTILI_GetIndValue+2
 14457     1BB0  3F01               	moviw [1]fsr0
 14458     1BB1  00F5               	movwf	??_UTILI_GetIndValue+3
 14459     1BB2  0876               	movf	UTILI_GetIndValue@value,w
 14460     1BB3  0774               	addwf	??_UTILI_GetIndValue+2,w
 14461     1BB4  00F6               	movwf	UTILI_GetIndValue@value
 14462     1BB5  0877               	movf	UTILI_GetIndValue@value+1,w
 14463     1BB6  3D75               	addwfc	??_UTILI_GetIndValue+3,w
 14464     1BB7  00F7               	movwf	UTILI_GetIndValue@value+1
 14465     1BB8                     l7526:
 14466                           
 14467                           ;utili.c: 245:   }
 14468     1BB8  3001               	movlw	1
 14469     1BB9  07F8               	addwf	UTILI_GetIndValue@i,f
 14470     1BBA                     l7528:
 14471     1BBA  3007               	movlw	7
 14472     1BBB  0278               	subwf	UTILI_GetIndValue@i,w
 14473     1BBC  1C03               	skipc
 14474     1BBD  2BBF               	goto	u8021
 14475     1BBE  2BC0               	goto	u8020
 14476     1BBF                     u8021:
 14477     1BBF  2B94               	goto	l7522
 14478     1BC0                     u8020:
 14479     1BC0                     l7530:
 14480                           
 14481                           ;utili.c: 246:   return (value);
 14482     1BC0  0877               	movf	UTILI_GetIndValue@value+1,w
 14483     1BC1  00F1               	movwf	?_UTILI_GetIndValue+1
 14484     1BC2  0876               	movf	UTILI_GetIndValue@value,w
 14485     1BC3  00F0               	movwf	?_UTILI_GetIndValue
 14486     1BC4                     l532:
 14487     1BC4  0008               	return
 14488     1BC5                     __end_of_UTILI_GetIndValue:
 14489                           
 14490                           	psect	text47
 14491     1A3B                     __ptext47:	
 14492 ;; *************** function _UTILI_GetCapValueStr *****************
 14493 ;; Defined at:
 14494 ;;		line 249 in file "utili.c"
 14495 ;; Parameters:    Size  Location     Type
 14496 ;;  str             1    3[BANK0 ] PTR unsigned char 
 14497 ;;		 -> MENU_RelTest_Update@str(7), MENU_Main_Update@str(7), 
 14498 ;;  str_size        1    4[BANK0 ] unsigned char 
 14499 ;; Auto vars:     Size  Location     Type
 14500 ;;  value           2    5[BANK0 ] short 
 14501 ;; Return value:  Size  Location     Type
 14502 ;;                  1    wreg      void 
 14503 ;; Registers used:
 14504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14505 ;; Tracked objects:
 14506 ;;		On entry : 0/0
 14507 ;;		On exit  : 0/0
 14508 ;;		Unchanged: 0/0
 14509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14510 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14511 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14513 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14514 ;;Total ram usage:        4 bytes
 14515 ;; Hardware stack levels used: 1
 14516 ;; Hardware stack levels required when called: 1
 14517 ;; This function calls:
 14518 ;;		_UTILI_GetCapValue
 14519 ;;		_UTILI_Int2Str
 14520 ;; This function is called by:
 14521 ;;		_MENU_Main_Update
 14522 ;;		_MENU_RelTest_Update
 14523 ;; This function uses a non-reentrant model
 14524 ;;
 14525                           
 14526     1A3B                     _UTILI_GetCapValueStr:	
 14527                           ;psect for function _UTILI_GetCapValueStr
 14528                           
 14529     1A3B                     l7630:	
 14530                           ;incstack = 0
 14531                           ; Regs used in _UTILI_GetCapValueStr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14532                           
 14533                           
 14534                           ;utili.c: 249: void UTILI_GetCapValueStr(char *str, uint8_t str_size);utili.c: 250: {;ut
      +                          ili.c: 251:   if (str_size < 7) return;
 14535     1A3B  3007               	movlw	7
 14536     1A3C  0020               	movlb	0	; select bank0
 14537     1A3D  0224               	subwf	UTILI_GetCapValueStr@str_size,w
 14538     1A3E  1803               	skipnc
 14539     1A3F  2A41               	goto	u8451
 14540     1A40  2A42               	goto	u8450
 14541     1A41                     u8451:
 14542     1A41  2A43               	goto	l7634
 14543     1A42                     u8450:
 14544     1A42  2A68               	goto	l536
 14545     1A43                     l7634:
 14546                           
 14547                           ;utili.c: 252:   int16_t value = UTILI_GetCapValue();
 14548     1A43  319B  235D  319A   	fcall	_UTILI_GetCapValue
 14549     1A46  0871               	movf	?_UTILI_GetCapValue+1,w
 14550     1A47  0020               	movlb	0	; select bank0
 14551     1A48  00A6               	movwf	UTILI_GetCapValueStr@value+1
 14552     1A49  0870               	movf	?_UTILI_GetCapValue,w
 14553     1A4A  00A5               	movwf	UTILI_GetCapValueStr@value
 14554     1A4B                     l7636:
 14555                           
 14556                           ;utili.c: 253:   UTILI_Int2Str(value, str, 5);
 14557     1A4B  0826               	movf	UTILI_GetCapValueStr@value+1,w
 14558     1A4C  00F9               	movwf	UTILI_Int2Str@number+1
 14559     1A4D  0825               	movf	UTILI_GetCapValueStr@value,w
 14560     1A4E  00F8               	movwf	UTILI_Int2Str@number
 14561     1A4F  0823               	movf	UTILI_GetCapValueStr@str,w
 14562     1A50  00FA               	movwf	UTILI_Int2Str@output
 14563     1A51  3005               	movlw	5
 14564     1A52  00FB               	movwf	UTILI_Int2Str@size
 14565     1A53  3194  241B  319A   	fcall	_UTILI_Int2Str
 14566     1A56                     l7638:
 14567                           
 14568                           ;utili.c: 254:   str[4] = 'p';
 14569     1A56  0020               	movlb	0	; select bank0
 14570     1A57  0823               	movf	UTILI_GetCapValueStr@str,w
 14571     1A58  3E04               	addlw	4
 14572     1A59  0086               	movwf	6
 14573     1A5A  0187               	clrf	7
 14574     1A5B  3070               	movlw	112
 14575     1A5C  0081               	movwf	1
 14576     1A5D                     l7640:
 14577                           
 14578                           ;utili.c: 255:   str[5] = 'F';
 14579     1A5D  0823               	movf	UTILI_GetCapValueStr@str,w
 14580     1A5E  3E05               	addlw	5
 14581     1A5F  0086               	movwf	6
 14582     1A60  0187               	clrf	7
 14583     1A61  3046               	movlw	70
 14584     1A62  0081               	movwf	1
 14585     1A63                     l7642:
 14586                           
 14587                           ;utili.c: 256:   str[6] =0;
 14588     1A63  0823               	movf	UTILI_GetCapValueStr@str,w
 14589     1A64  3E06               	addlw	6
 14590     1A65  0086               	movwf	6
 14591     1A66  0187               	clrf	7
 14592     1A67  0181               	clrf	1
 14593     1A68                     l536:
 14594     1A68  0008               	return
 14595     1A69                     __end_of_UTILI_GetCapValueStr:
 14596                           
 14597                           	psect	text48
 14598     1B5D                     __ptext48:	
 14599 ;; *************** function _UTILI_GetCapValue *****************
 14600 ;; Defined at:
 14601 ;;		line 221 in file "utili.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;		None
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;  i               1    8[COMMON] unsigned char 
 14606 ;;  value           2    6[COMMON] short 
 14607 ;; Return value:  Size  Location     Type
 14608 ;;                  2    0[COMMON] short 
 14609 ;; Registers used:
 14610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 14611 ;; Tracked objects:
 14612 ;;		On entry : 0/0
 14613 ;;		On exit  : 0/0
 14614 ;;		Unchanged: 0/0
 14615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14617 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14618 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14619 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14620 ;;Total ram usage:        9 bytes
 14621 ;; Hardware stack levels used: 1
 14622 ;; Hardware stack levels required when called: 1
 14623 ;; This function calls:
 14624 ;;		Nothing
 14625 ;; This function is called by:
 14626 ;;		_UTILI_GetCapValueStr
 14627 ;; This function uses a non-reentrant model
 14628 ;;
 14629                           
 14630     1B5D                     _UTILI_GetCapValue:	
 14631                           ;psect for function _UTILI_GetCapValue
 14632                           
 14633     1B5D                     l7498:	
 14634                           ;incstack = 0
 14635                           ; Regs used in _UTILI_GetCapValue: [wreg-fsr0h+status,2+status,0+pclath]
 14636                           
 14637                           
 14638                           ;utili.c: 223:   int16_t value = 0;
 14639     1B5D  01F6               	clrf	UTILI_GetCapValue@value
 14640     1B5E  01F7               	clrf	UTILI_GetCapValue@value+1
 14641                           
 14642                           ;utili.c: 224:   for (uint8_t i = 0; i < 7; i++)
 14643     1B5F  01F8               	clrf	UTILI_GetCapValue@i
 14644     1B60                     l7504:
 14645                           
 14646                           ;utili.c: 225:   {;utili.c: 226:     if (global.cap_relays & (1 << i))
 14647     1B60  3001               	movlw	1
 14648     1B61  00F2               	movwf	??_UTILI_GetCapValue
 14649     1B62  0A78               	incf	UTILI_GetCapValue@i,w
 14650     1B63  2B65               	goto	u7974
 14651     1B64                     u7975:
 14652     1B64  35F2               	lslf	??_UTILI_GetCapValue,f
 14653     1B65                     u7974:
 14654     1B65  0B89               	decfsz	9,f
 14655     1B66  2B64               	goto	u7975
 14656     1B67  0872               	movf	??_UTILI_GetCapValue,w
 14657     1B68  0021               	movlb	1	; select bank1
 14658     1B69  0559               	andwf	(_global^(0+128)+28),w
 14659     1B6A  1903               	btfsc	3,2
 14660     1B6B  2B6D               	goto	u7981
 14661     1B6C  2B6E               	goto	u7980
 14662     1B6D                     u7981:
 14663     1B6D  2B84               	goto	l7508
 14664     1B6E                     u7980:
 14665     1B6E                     l7506:
 14666                           
 14667                           ;utili.c: 227:     {;utili.c: 229:       value = value + CAP_VALUES[i];
 14668     1B6E  0878               	movf	UTILI_GetCapValue@i,w
 14669     1B6F  00F2               	movwf	??_UTILI_GetCapValue
 14670     1B70  01F3               	clrf	??_UTILI_GetCapValue+1
 14671     1B71  35F2               	lslf	??_UTILI_GetCapValue,f
 14672     1B72  0DF3               	rlf	??_UTILI_GetCapValue+1,f
 14673     1B73  300E               	movlw	low _CAP_VALUES
 14674     1B74  0772               	addwf	??_UTILI_GetCapValue,w
 14675     1B75  0084               	movwf	4
 14676     1B76  3028               	movlw	high _CAP_VALUES
 14677     1B77  3D73               	addwfc	??_UTILI_GetCapValue+1,w
 14678     1B78  3880               	iorlw	128
 14679     1B79  0085               	movwf	5
 14680     1B7A  3F00               	moviw [0]fsr0
 14681     1B7B  00F4               	movwf	??_UTILI_GetCapValue+2
 14682     1B7C  3F01               	moviw [1]fsr0
 14683     1B7D  00F5               	movwf	??_UTILI_GetCapValue+3
 14684     1B7E  0876               	movf	UTILI_GetCapValue@value,w
 14685     1B7F  0774               	addwf	??_UTILI_GetCapValue+2,w
 14686     1B80  00F6               	movwf	UTILI_GetCapValue@value
 14687     1B81  0877               	movf	UTILI_GetCapValue@value+1,w
 14688     1B82  3D75               	addwfc	??_UTILI_GetCapValue+3,w
 14689     1B83  00F7               	movwf	UTILI_GetCapValue@value+1
 14690     1B84                     l7508:
 14691                           
 14692                           ;utili.c: 231:   }
 14693     1B84  3001               	movlw	1
 14694     1B85  07F8               	addwf	UTILI_GetCapValue@i,f
 14695     1B86                     l7510:
 14696     1B86  3007               	movlw	7
 14697     1B87  0278               	subwf	UTILI_GetCapValue@i,w
 14698     1B88  1C03               	skipc
 14699     1B89  2B8B               	goto	u7991
 14700     1B8A  2B8C               	goto	u7990
 14701     1B8B                     u7991:
 14702     1B8B  2B60               	goto	l7504
 14703     1B8C                     u7990:
 14704     1B8C                     l7512:
 14705                           
 14706                           ;utili.c: 232:   return (value);
 14707     1B8C  0877               	movf	UTILI_GetCapValue@value+1,w
 14708     1B8D  00F1               	movwf	?_UTILI_GetCapValue+1
 14709     1B8E  0876               	movf	UTILI_GetCapValue@value,w
 14710     1B8F  00F0               	movwf	?_UTILI_GetCapValue
 14711     1B90                     l526:
 14712     1B90  0008               	return
 14713     1B91                     __end_of_UTILI_GetCapValue:
 14714                           
 14715                           	psect	text49
 14716     1D45                     __ptext49:	
 14717 ;; *************** function _DISP_SWR *****************
 14718 ;; Defined at:
 14719 ;;		line 346 in file "disp.c"
 14720 ;; Parameters:    Size  Location     Type
 14721 ;;  col             1    wreg     unsigned char 
 14722 ;;  row             1   17[BANK0 ] unsigned char 
 14723 ;;  centiSWR        2   18[BANK0 ] short 
 14724 ;;  invert          1   20[BANK0 ] unsigned char 
 14725 ;; Auto vars:     Size  Location     Type
 14726 ;;  col             1   22[BANK0 ] unsigned char 
 14727 ;;  str             5   23[BANK0 ] unsigned char [5]
 14728 ;; Return value:  Size  Location     Type
 14729 ;;                  1    wreg      void 
 14730 ;; Registers used:
 14731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14732 ;; Tracked objects:
 14733 ;;		On entry : 0/0
 14734 ;;		On exit  : 0/0
 14735 ;;		Unchanged: 0/0
 14736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14738 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14740 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14741 ;;Total ram usage:       11 bytes
 14742 ;; Hardware stack levels used: 1
 14743 ;; Hardware stack levels required when called: 1
 14744 ;; This function calls:
 14745 ;;		_DISP_Str
 14746 ;;		_UTILI_Int2Str
 14747 ;; This function is called by:
 14748 ;;		_MENU_Main_Update
 14749 ;;		_MENU_TParam_Update
 14750 ;;		_MENU_RelTest_Run
 14751 ;; This function uses a non-reentrant model
 14752 ;;
 14753                           
 14754     1D45                     _DISP_SWR:	
 14755                           ;psect for function _DISP_SWR
 14756                           
 14757                           
 14758                           ;incstack = 0
 14759                           ; Regs used in _DISP_SWR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14760                           ;DISP_SWR@col stored from wreg
 14761     1D45  0020               	movlb	0	; select bank0
 14762     1D46  00B6               	movwf	DISP_SWR@col
 14763     1D47                     l7686:
 14764                           
 14765                           ;disp.c: 346: void DISP_SWR(uint8_t col, uint8_t row, int16_t centiSWR, uint8_t invert);
      +                          disp.c: 347: {;disp.c: 348:   char str[5] = "0.00";
 14766     1D47  30DB               	movlw	low DISP_SWR@F2959
 14767     1D48  0086               	movwf	6
 14768     1D49  3000               	movlw	high DISP_SWR@F2959
 14769     1D4A  0087               	movwf	7
 14770     1D4B  3037               	movlw	low DISP_SWR@str
 14771     1D4C  0084               	movwf	4
 14772     1D4D  3000               	movlw	high DISP_SWR@str
 14773     1D4E  0085               	movwf	5
 14774     1D4F  3005               	movlw	5
 14775     1D50  00B5               	movwf	??_DISP_SWR
 14776     1D51                     u8500:
 14777     1D51  0016               	moviw fsr1++
 14778     1D52  001A               	movwi fsr0++
 14779     1D53  0BB5               	decfsz	??_DISP_SWR,f
 14780     1D54  2D51               	goto	u8500
 14781     1D55                     l7688:
 14782                           
 14783                           ;disp.c: 349:   if(centiSWR >= 100)
 14784     1D55  0833               	movf	DISP_SWR@centiSWR+1,w
 14785     1D56  3A80               	xorlw	128
 14786     1D57  00B5               	movwf	??_DISP_SWR
 14787     1D58  3080               	movlw	128
 14788     1D59  0235               	subwf	??_DISP_SWR,w
 14789     1D5A  1D03               	skipz
 14790     1D5B  2D5E               	goto	u8515
 14791     1D5C  3064               	movlw	100
 14792     1D5D  0232               	subwf	DISP_SWR@centiSWR,w
 14793     1D5E                     u8515:
 14794     1D5E  1C03               	skipc
 14795     1D5F  2D61               	goto	u8511
 14796     1D60  2D62               	goto	u8510
 14797     1D61                     u8511:
 14798     1D61  2D73               	goto	l7696
 14799     1D62                     u8510:
 14800     1D62                     l7690:
 14801                           
 14802                           ;disp.c: 350:   {;disp.c: 351:     UTILI_Int2Str(centiSWR , &str[1], (sizeof(str)-1));
 14803     1D62  0020               	movlb	0	; select bank0
 14804     1D63  0833               	movf	DISP_SWR@centiSWR+1,w
 14805     1D64  00F9               	movwf	UTILI_Int2Str@number+1
 14806     1D65  0832               	movf	DISP_SWR@centiSWR,w
 14807     1D66  00F8               	movwf	UTILI_Int2Str@number
 14808     1D67  3038               	movlw	(low ((DISP_SWR@str| 0+1)))& (0+255)
 14809     1D68  00FA               	movwf	UTILI_Int2Str@output
 14810     1D69  3004               	movlw	4
 14811     1D6A  00FB               	movwf	UTILI_Int2Str@size
 14812     1D6B  3194  241B  319D   	fcall	_UTILI_Int2Str
 14813     1D6E                     l7692:
 14814                           
 14815                           ;disp.c: 352:     str[0] = str[1];
 14816     1D6E  0020               	movlb	0	; select bank0
 14817     1D6F  0838               	movf	DISP_SWR@str+1,w
 14818     1D70  00B7               	movwf	DISP_SWR@str
 14819     1D71                     l7694:
 14820                           
 14821                           ;disp.c: 353:     str[1] = '.';
 14822     1D71  302E               	movlw	46
 14823     1D72  00B8               	movwf	DISP_SWR@str+1
 14824     1D73                     l7696:
 14825                           
 14826                           ;disp.c: 355:   DISP_Str(col, row, str, invert);
 14827     1D73  0020               	movlb	0	; select bank0
 14828     1D74  0831               	movf	DISP_SWR@row,w
 14829     1D75  00F8               	movwf	DISP_Str@row
 14830     1D76  3037               	movlw	low DISP_SWR@str
 14831     1D77  00F9               	movwf	DISP_Str@str
 14832     1D78  3000               	movlw	high DISP_SWR@str
 14833     1D79  00FA               	movwf	DISP_Str@str+1
 14834     1D7A  0834               	movf	DISP_SWR@invert,w
 14835     1D7B  00FB               	movwf	DISP_Str@invert
 14836     1D7C  0836               	movf	DISP_SWR@col,w
 14837     1D7D  318D  2547  319D   	fcall	_DISP_Str
 14838     1D80                     l756:
 14839     1D80  0008               	return
 14840     1D81                     __end_of_DISP_SWR:
 14841                           
 14842                           	psect	text50
 14843     2720                     __ptext50:	
 14844 ;; *************** function _DISP_Char *****************
 14845 ;; Defined at:
 14846 ;;		line 206 in file "disp.c"
 14847 ;; Parameters:    Size  Location     Type
 14848 ;;  col             1    wreg     unsigned char 
 14849 ;;  row             1   17[BANK0 ] unsigned char 
 14850 ;;  c               1   18[BANK0 ] unsigned char 
 14851 ;;  invert          1   19[BANK0 ] unsigned char 
 14852 ;; Auto vars:     Size  Location     Type
 14853 ;;  col             1   20[BANK0 ] unsigned char 
 14854 ;;  str             2   21[BANK0 ] unsigned char [2]
 14855 ;; Return value:  Size  Location     Type
 14856 ;;                  1    wreg      void 
 14857 ;; Registers used:
 14858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14859 ;; Tracked objects:
 14860 ;;		On entry : 0/0
 14861 ;;		On exit  : 0/0
 14862 ;;		Unchanged: 0/0
 14863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14864 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14865 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14867 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14868 ;;Total ram usage:        6 bytes
 14869 ;; Hardware stack levels used: 1
 14870 ;; Hardware stack levels required when called: 1
 14871 ;; This function calls:
 14872 ;;		_DISP_Str
 14873 ;; This function is called by:
 14874 ;;		_MENU_Main_Update
 14875 ;;		_MENU_NameEdit_Update
 14876 ;; This function uses a non-reentrant model
 14877 ;;
 14878                           
 14879     2720                     _DISP_Char:	
 14880                           ;psect for function _DISP_Char
 14881                           
 14882                           
 14883                           ;incstack = 0
 14884                           ; Regs used in _DISP_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14885                           ;DISP_Char@col stored from wreg
 14886     2720  0020               	movlb	0	; select bank0
 14887     2721  00B4               	movwf	DISP_Char@col
 14888     2722                     l7658:
 14889                           
 14890                           ;disp.c: 206: void DISP_Char(uint8_t col, uint8_t row, char c, uint8_t invert);disp.c: 2
      +                          07: {;disp.c: 208:   char str[2];;disp.c: 209:   str[0] = c;
 14891     2722  0832               	movf	DISP_Char@c,w
 14892     2723  00B5               	movwf	DISP_Char@str
 14893     2724                     l7660:
 14894                           
 14895                           ;disp.c: 210:   str[1] =0;
 14896     2724  01B6               	clrf	DISP_Char@str+1
 14897     2725                     l7662:
 14898                           
 14899                           ;disp.c: 211:   DISP_Str(col, row, str, invert);
 14900     2725  0831               	movf	DISP_Char@row,w
 14901     2726  00F8               	movwf	DISP_Str@row
 14902     2727  3035               	movlw	low DISP_Char@str
 14903     2728  00F9               	movwf	DISP_Str@str
 14904     2729  3000               	movlw	high DISP_Char@str
 14905     272A  00FA               	movwf	DISP_Str@str+1
 14906     272B  0833               	movf	DISP_Char@invert,w
 14907     272C  00FB               	movwf	DISP_Str@invert
 14908     272D  0834               	movf	DISP_Char@col,w
 14909     272E  318D  2547  31A7   	fcall	_DISP_Str
 14910     2731                     l724:
 14911     2731  0008               	return
 14912     2732                     __end_of_DISP_Char:
 14913                           
 14914                           	psect	text51
 14915     2758                     __ptext51:	
 14916 ;; *************** function _UTILI_Set_LC_Relays *****************
 14917 ;; Defined at:
 14918 ;;		line 48 in file "utili.c"
 14919 ;; Parameters:    Size  Location     Type
 14920 ;;  relays          2    1[COMMON] unsigned short 
 14921 ;; Auto vars:     Size  Location     Type
 14922 ;;		None
 14923 ;; Return value:  Size  Location     Type
 14924 ;;                  1    wreg      void 
 14925 ;; Registers used:
 14926 ;;		wreg, status,2, status,0, pclath, cstack
 14927 ;; Tracked objects:
 14928 ;;		On entry : 0/0
 14929 ;;		On exit  : 0/0
 14930 ;;		Unchanged: 0/0
 14931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14935 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14936 ;;Total ram usage:        2 bytes
 14937 ;; Hardware stack levels used: 1
 14938 ;; Hardware stack levels required when called: 1
 14939 ;; This function calls:
 14940 ;;		_UTILI_SetRelays
 14941 ;; This function is called by:
 14942 ;;		_main
 14943 ;;		_MENU_Main_Weakup
 14944 ;;		_MENU_Main_Run
 14945 ;;		_MENU_Bypass_Init
 14946 ;;		_MENU_Tune_Run
 14947 ;;		_MENU_RelTest_Run
 14948 ;;		_MENU_Memory_Run
 14949 ;; This function uses a non-reentrant model
 14950 ;;
 14951                           
 14952     2758                     _UTILI_Set_LC_Relays:	
 14953                           ;psect for function _UTILI_Set_LC_Relays
 14954                           
 14955     2758                     l7742:	
 14956                           ;incstack = 0
 14957                           ; Regs used in _UTILI_Set_LC_Relays: [wreg+status,2+status,0+pclath+cstack]
 14958                           
 14959                           
 14960                           ;utili.c: 48: void UTILI_Set_LC_Relays(uint16_t relays);utili.c: 49: {;utili.c: 50:   if
      +                          (relays & 0x8000)
 14961     2758  1FF2               	btfss	UTILI_Set_LC_Relays@relays+1,7
 14962     2759  2F5B               	goto	u8571
 14963     275A  2F5C               	goto	u8570
 14964     275B                     u8571:
 14965     275B  2F60               	goto	l7746
 14966     275C                     u8570:
 14967     275C                     l7744:
 14968                           
 14969                           ;utili.c: 51:   {;utili.c: 52:     global.cap_sw =1;
 14970     275C  3001               	movlw	1
 14971     275D  0021               	movlb	1	; select bank1
 14972     275E  00D8               	movwf	(_global^(0+128)+27)
 14973                           
 14974                           ;utili.c: 53:   }
 14975     275F  2F62               	goto	l7748
 14976     2760                     l7746:
 14977                           
 14978                           ;utili.c: 55:   {;utili.c: 56:     global.cap_sw =0;
 14979     2760  0021               	movlb	1	; select bank1
 14980     2761  01D8               	clrf	(_global^(0+128)+27)
 14981     2762                     l7748:
 14982                           
 14983                           ;utili.c: 59:   global.cap_relays = (uint8_t)(relays >>8) & 0x7f;
 14984     2762  0872               	movf	UTILI_Set_LC_Relays@relays+1,w
 14985     2763  397F               	andlw	127
 14986     2764  00D9               	movwf	(_global^(0+128)+28)
 14987     2765                     l7750:
 14988                           
 14989                           ;utili.c: 60:   global.ind_relays = (uint8_t)(relays & 0x7f);
 14990     2765  0871               	movf	UTILI_Set_LC_Relays@relays,w
 14991     2766  397F               	andlw	127
 14992     2767  00DA               	movwf	(_global^(0+128)+29)
 14993     2768                     l7752:
 14994                           
 14995                           ;utili.c: 61:   UTILI_SetRelays();
 14996     2768  3194  2499  31A7   	fcall	_UTILI_SetRelays
 14997     276B                     l483:
 14998     276B  0008               	return
 14999     276C                     __end_of_UTILI_Set_LC_Relays:
 15000                           
 15001                           	psect	text52
 15002     1499                     __ptext52:	
 15003 ;; *************** function _UTILI_SetRelays *****************
 15004 ;; Defined at:
 15005 ;;		line 21 in file "utili.c"
 15006 ;; Parameters:    Size  Location     Type
 15007 ;;		None
 15008 ;; Auto vars:     Size  Location     Type
 15009 ;;  v               1    0[COMMON] struct .
 15010 ;; Return value:  Size  Location     Type
 15011 ;;                  1    wreg      void 
 15012 ;; Registers used:
 15013 ;;		wreg, status,0
 15014 ;; Tracked objects:
 15015 ;;		On entry : 0/0
 15016 ;;		On exit  : 0/0
 15017 ;;		Unchanged: 0/0
 15018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15022 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15023 ;;Total ram usage:        1 bytes
 15024 ;; Hardware stack levels used: 1
 15025 ;; Hardware stack levels required when called: 1
 15026 ;; This function calls:
 15027 ;;		Nothing
 15028 ;; This function is called by:
 15029 ;;		_UTILI_Set_LC_Relays
 15030 ;;		_MENU_RelTest_Init
 15031 ;;		_MENU_RelTest_Run
 15032 ;;		_TUNE_Init
 15033 ;;		_TUNE_Run
 15034 ;; This function uses a non-reentrant model
 15035 ;;
 15036                           
 15037     1499                     _UTILI_SetRelays:	
 15038                           ;psect for function _UTILI_SetRelays
 15039                           
 15040     1499                     l7592:	
 15041                           ;incstack = 0
 15042                           ; Regs used in _UTILI_SetRelays: [wreg+status,0]
 15043                           
 15044                           
 15045                           ;utili.c: 23:   bitfield_t v;;utili.c: 24:   v.byte = global.ind_relays;
 15046     1499  0021               	movlb	1	; select bank1
 15047     149A  085A               	movf	(_global^(0+128)+29),w
 15048     149B  00F0               	movwf	UTILI_SetRelays@v
 15049     149C                     l7594:
 15050                           
 15051                           ;utili.c: 25:   LATBbits.LATB3 = v.bits.B0;
 15052     149C  1870               	btfsc	UTILI_SetRelays@v,0
 15053     149D  2C9F               	goto	u8171
 15054     149E  2CA2               	goto	u8170
 15055     149F                     u8171:
 15056     149F  0022               	movlb	2	; select bank2
 15057     14A0  158D               	bsf	13,3	;volatile
 15058     14A1  2CA4               	goto	u8184
 15059     14A2                     u8170:
 15060     14A2  0022               	movlb	2	; select bank2
 15061     14A3  118D               	bcf	13,3	;volatile
 15062     14A4                     u8184:
 15063     14A4                     l7596:
 15064                           
 15065                           ;utili.c: 26:   LATAbits.LATA2 = v.bits.B1;
 15066     14A4  18F0               	btfsc	UTILI_SetRelays@v,1
 15067     14A5  2CA7               	goto	u8191
 15068     14A6  2CAA               	goto	u8190
 15069     14A7                     u8191:
 15070     14A7  0022               	movlb	2	; select bank2
 15071     14A8  150C               	bsf	12,2	;volatile
 15072     14A9  2CAC               	goto	u8204
 15073     14AA                     u8190:
 15074     14AA  0022               	movlb	2	; select bank2
 15075     14AB  110C               	bcf	12,2	;volatile
 15076     14AC                     u8204:
 15077     14AC                     l7598:
 15078                           
 15079                           ;utili.c: 27:   LATBbits.LATB4 = v.bits.B2;
 15080     14AC  1970               	btfsc	UTILI_SetRelays@v,2
 15081     14AD  2CAF               	goto	u8211
 15082     14AE  2CB2               	goto	u8210
 15083     14AF                     u8211:
 15084     14AF  0022               	movlb	2	; select bank2
 15085     14B0  160D               	bsf	13,4	;volatile
 15086     14B1  2CB4               	goto	u8224
 15087     14B2                     u8210:
 15088     14B2  0022               	movlb	2	; select bank2
 15089     14B3  120D               	bcf	13,4	;volatile
 15090     14B4                     u8224:
 15091     14B4                     l7600:
 15092                           
 15093                           ;utili.c: 28:   LATAbits.LATA3 = v.bits.B3;
 15094     14B4  19F0               	btfsc	UTILI_SetRelays@v,3
 15095     14B5  2CB7               	goto	u8231
 15096     14B6  2CBA               	goto	u8230
 15097     14B7                     u8231:
 15098     14B7  0022               	movlb	2	; select bank2
 15099     14B8  158C               	bsf	12,3	;volatile
 15100     14B9  2CBC               	goto	u8244
 15101     14BA                     u8230:
 15102     14BA  0022               	movlb	2	; select bank2
 15103     14BB  118C               	bcf	12,3	;volatile
 15104     14BC                     u8244:
 15105     14BC                     l7602:
 15106                           
 15107                           ;utili.c: 29:   LATBbits.LATB5 = v.bits.B4;
 15108     14BC  1A70               	btfsc	UTILI_SetRelays@v,4
 15109     14BD  2CBF               	goto	u8251
 15110     14BE  2CC2               	goto	u8250
 15111     14BF                     u8251:
 15112     14BF  0022               	movlb	2	; select bank2
 15113     14C0  168D               	bsf	13,5	;volatile
 15114     14C1  2CC4               	goto	u8264
 15115     14C2                     u8250:
 15116     14C2  0022               	movlb	2	; select bank2
 15117     14C3  128D               	bcf	13,5	;volatile
 15118     14C4                     u8264:
 15119     14C4                     l7604:
 15120                           
 15121                           ;utili.c: 30:   LATAbits.LATA5 = v.bits.B5;
 15122     14C4  1AF0               	btfsc	UTILI_SetRelays@v,5
 15123     14C5  2CC7               	goto	u8271
 15124     14C6  2CCA               	goto	u8270
 15125     14C7                     u8271:
 15126     14C7  0022               	movlb	2	; select bank2
 15127     14C8  168C               	bsf	12,5	;volatile
 15128     14C9  2CCC               	goto	u8284
 15129     14CA                     u8270:
 15130     14CA  0022               	movlb	2	; select bank2
 15131     14CB  128C               	bcf	12,5	;volatile
 15132     14CC                     u8284:
 15133     14CC                     l7606:
 15134                           
 15135                           ;utili.c: 31:   LATAbits.LATA4 = v.bits.B6;
 15136     14CC  1B70               	btfsc	UTILI_SetRelays@v,6
 15137     14CD  2CCF               	goto	u8291
 15138     14CE  2CD2               	goto	u8290
 15139     14CF                     u8291:
 15140     14CF  0022               	movlb	2	; select bank2
 15141     14D0  160C               	bsf	12,4	;volatile
 15142     14D1  2CD4               	goto	u8304
 15143     14D2                     u8290:
 15144     14D2  0022               	movlb	2	; select bank2
 15145     14D3  120C               	bcf	12,4	;volatile
 15146     14D4                     u8304:
 15147                           
 15148                           ;utili.c: 33:   v.byte = global.cap_relays;
 15149     14D4  0021               	movlb	1	; select bank1
 15150     14D5  0859               	movf	(_global^(0+128)+28),w
 15151     14D6  00F0               	movwf	UTILI_SetRelays@v
 15152     14D7                     l7608:
 15153                           
 15154                           ;utili.c: 34:   LATCbits.LATC7 = v.bits.B0;
 15155     14D7  1870               	btfsc	UTILI_SetRelays@v,0
 15156     14D8  2CDA               	goto	u8311
 15157     14D9  2CDD               	goto	u8310
 15158     14DA                     u8311:
 15159     14DA  0022               	movlb	2	; select bank2
 15160     14DB  178E               	bsf	14,7	;volatile
 15161     14DC  2CDF               	goto	u8324
 15162     14DD                     u8310:
 15163     14DD  0022               	movlb	2	; select bank2
 15164     14DE  138E               	bcf	14,7	;volatile
 15165     14DF                     u8324:
 15166     14DF                     l7610:
 15167                           
 15168                           ;utili.c: 35:   LATCbits.LATC3 = v.bits.B1;
 15169     14DF  18F0               	btfsc	UTILI_SetRelays@v,1
 15170     14E0  2CE2               	goto	u8331
 15171     14E1  2CE5               	goto	u8330
 15172     14E2                     u8331:
 15173     14E2  0022               	movlb	2	; select bank2
 15174     14E3  158E               	bsf	14,3	;volatile
 15175     14E4  2CE7               	goto	u8344
 15176     14E5                     u8330:
 15177     14E5  0022               	movlb	2	; select bank2
 15178     14E6  118E               	bcf	14,3	;volatile
 15179     14E7                     u8344:
 15180     14E7                     l7612:
 15181                           
 15182                           ;utili.c: 36:   LATCbits.LATC6 = v.bits.B2;
 15183     14E7  1970               	btfsc	UTILI_SetRelays@v,2
 15184     14E8  2CEA               	goto	u8351
 15185     14E9  2CED               	goto	u8350
 15186     14EA                     u8351:
 15187     14EA  0022               	movlb	2	; select bank2
 15188     14EB  170E               	bsf	14,6	;volatile
 15189     14EC  2CEF               	goto	u8364
 15190     14ED                     u8350:
 15191     14ED  0022               	movlb	2	; select bank2
 15192     14EE  130E               	bcf	14,6	;volatile
 15193     14EF                     u8364:
 15194     14EF                     l7614:
 15195                           
 15196                           ;utili.c: 37:   LATCbits.LATC2 = v.bits.B3;
 15197     14EF  19F0               	btfsc	UTILI_SetRelays@v,3
 15198     14F0  2CF2               	goto	u8371
 15199     14F1  2CF5               	goto	u8370
 15200     14F2                     u8371:
 15201     14F2  0022               	movlb	2	; select bank2
 15202     14F3  150E               	bsf	14,2	;volatile
 15203     14F4  2CF7               	goto	u8384
 15204     14F5                     u8370:
 15205     14F5  0022               	movlb	2	; select bank2
 15206     14F6  110E               	bcf	14,2	;volatile
 15207     14F7                     u8384:
 15208     14F7                     l7616:
 15209                           
 15210                           ;utili.c: 38:   LATCbits.LATC5 = v.bits.B4;
 15211     14F7  1A70               	btfsc	UTILI_SetRelays@v,4
 15212     14F8  2CFA               	goto	u8391
 15213     14F9  2CFD               	goto	u8390
 15214     14FA                     u8391:
 15215     14FA  0022               	movlb	2	; select bank2
 15216     14FB  168E               	bsf	14,5	;volatile
 15217     14FC  2CFF               	goto	u8404
 15218     14FD                     u8390:
 15219     14FD  0022               	movlb	2	; select bank2
 15220     14FE  128E               	bcf	14,5	;volatile
 15221     14FF                     u8404:
 15222     14FF                     l7618:
 15223                           
 15224                           ;utili.c: 39:   LATCbits.LATC1 = v.bits.B5;
 15225     14FF  1AF0               	btfsc	UTILI_SetRelays@v,5
 15226     1500  2D02               	goto	u8411
 15227     1501  2D05               	goto	u8410
 15228     1502                     u8411:
 15229     1502  0022               	movlb	2	; select bank2
 15230     1503  148E               	bsf	14,1	;volatile
 15231     1504  2D07               	goto	u8424
 15232     1505                     u8410:
 15233     1505  0022               	movlb	2	; select bank2
 15234     1506  108E               	bcf	14,1	;volatile
 15235     1507                     u8424:
 15236     1507                     l7620:
 15237                           
 15238                           ;utili.c: 40:   LATCbits.LATC4 = v.bits.B6;
 15239     1507  1B70               	btfsc	UTILI_SetRelays@v,6
 15240     1508  2D0A               	goto	u8431
 15241     1509  2D0D               	goto	u8430
 15242     150A                     u8431:
 15243     150A  0022               	movlb	2	; select bank2
 15244     150B  160E               	bsf	14,4	;volatile
 15245     150C  2D0F               	goto	u8444
 15246     150D                     u8430:
 15247     150D  0022               	movlb	2	; select bank2
 15248     150E  120E               	bcf	14,4	;volatile
 15249     150F                     u8444:
 15250     150F                     l7622:
 15251                           
 15252                           ;utili.c: 42:   LATCbits.LATC0 = global.cap_sw;
 15253     150F  0021               	movlb	1	; select bank1
 15254     1510  0C58               	rrf	(_global^(0+128)+27),w
 15255     1511  0022               	movlb	2	; select bank2
 15256     1512  1C03               	skipc
 15257     1513  100E               	bcf	14,0	;volatile
 15258     1514  1803               	skipnc
 15259     1515  140E               	bsf	14,0	;volatile
 15260     1516                     l478:
 15261     1516  0008               	return
 15262     1517                     __end_of_UTILI_SetRelays:
 15263                           
 15264                           	psect	text53
 15265     0884                     __ptext53:	
 15266 ;; *************** function _UTILI_deciWatt_to_centiVolt *****************
 15267 ;; Defined at:
 15268 ;;		line 143 in file "utili.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;  deciWatt        2   12[COMMON] short 
 15271 ;; Auto vars:     Size  Location     Type
 15272 ;;  temp            4   30[BANK0 ] long 
 15273 ;;  sqrt            4   26[BANK0 ] long 
 15274 ;;  number          4   22[BANK0 ] long 
 15275 ;; Return value:  Size  Location     Type
 15276 ;;                  2   12[COMMON] short 
 15277 ;; Registers used:
 15278 ;;		wreg, status,2, status,0, pclath, cstack
 15279 ;; Tracked objects:
 15280 ;;		On entry : 0/0
 15281 ;;		On exit  : 0/0
 15282 ;;		Unchanged: 0/0
 15283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15285 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15286 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15287 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;Total ram usage:       22 bytes
 15289 ;; Hardware stack levels used: 1
 15290 ;; Hardware stack levels required when called: 2
 15291 ;; This function calls:
 15292 ;;		___aldiv
 15293 ;;		___lmul
 15294 ;; This function is called by:
 15295 ;;		_MENU_CalPWR_Run
 15296 ;; This function uses a non-reentrant model
 15297 ;;
 15298                           
 15299     0884                     _UTILI_deciWatt_to_centiVolt:	
 15300                           ;psect for function _UTILI_deciWatt_to_centiVolt
 15301                           
 15302     0884                     l7946:	
 15303                           ;incstack = 0
 15304                           ; Regs used in _UTILI_deciWatt_to_centiVolt: [wreg+status,2+status,0+pclath+cstack]
 15305                           
 15306                           
 15307                           ;utili.c: 143: int16_t UTILI_deciWatt_to_centiVolt(int16_t deciWatt);utili.c: 144: {;uti
      +                          li.c: 145:   int32_t number;;utili.c: 146:   int32_t sqrt;;utili.c: 147:   int32_t temp;
      +                          ;utili.c: 150:   number = deciWatt * (int32_t) 50000;
 15308     0884  087C               	movf	UTILI_deciWatt_to_centiVolt@deciWatt,w
 15309     0885  00F0               	movwf	___lmul@multiplier
 15310     0886  087D               	movf	UTILI_deciWatt_to_centiVolt@deciWatt+1,w
 15311     0887  00F1               	movwf	___lmul@multiplier+1
 15312     0888  0D89               	rlf	9,f
 15313     0889  3B89               	subwfb	9,f
 15314     088A  0989               	comf	9,f
 15315     088B  00F2               	movwf	___lmul@multiplier+2
 15316     088C  00F3               	movwf	___lmul@multiplier+3
 15317     088D  3000               	movlw	0
 15318     088E  00F7               	movwf	___lmul@multiplicand+3
 15319     088F  3000               	movlw	0
 15320     0890  00F6               	movwf	___lmul@multiplicand+2
 15321     0891  30C3               	movlw	195
 15322     0892  00F5               	movwf	___lmul@multiplicand+1
 15323     0893  3050               	movlw	80
 15324     0894  00F4               	movwf	___lmul@multiplicand
 15325     0895  319B  232A  3188   	fcall	___lmul
 15326     0898  0873               	movf	?___lmul+3,w
 15327     0899  0020               	movlb	0	; select bank0
 15328     089A  00B9               	movwf	UTILI_deciWatt_to_centiVolt@number+3
 15329     089B  0872               	movf	?___lmul+2,w
 15330     089C  00B8               	movwf	UTILI_deciWatt_to_centiVolt@number+2
 15331     089D  0871               	movf	?___lmul+1,w
 15332     089E  00B7               	movwf	UTILI_deciWatt_to_centiVolt@number+1
 15333     089F  0870               	movf	?___lmul,w
 15334     08A0  00B6               	movwf	UTILI_deciWatt_to_centiVolt@number
 15335                           
 15336                           ;utili.c: 151:   sqrt = number / 2;
 15337     08A1  3000               	movlw	0
 15338     08A2  00A3               	movwf	___aldiv@divisor+3
 15339     08A3  3000               	movlw	0
 15340     08A4  00A2               	movwf	___aldiv@divisor+2
 15341     08A5  3000               	movlw	0
 15342     08A6  00A1               	movwf	___aldiv@divisor+1
 15343     08A7  3002               	movlw	2
 15344     08A8  00A0               	movwf	___aldiv@divisor
 15345     08A9  0839               	movf	UTILI_deciWatt_to_centiVolt@number+3,w
 15346     08AA  00A7               	movwf	___aldiv@dividend+3
 15347     08AB  0838               	movf	UTILI_deciWatt_to_centiVolt@number+2,w
 15348     08AC  00A6               	movwf	___aldiv@dividend+2
 15349     08AD  0837               	movf	UTILI_deciWatt_to_centiVolt@number+1,w
 15350     08AE  00A5               	movwf	___aldiv@dividend+1
 15351     08AF  0836               	movf	UTILI_deciWatt_to_centiVolt@number,w
 15352     08B0  00A4               	movwf	___aldiv@dividend
 15353     08B1  3195  25A2  3188   	fcall	___aldiv
 15354     08B4  0020               	movlb	0	; select bank0
 15355     08B5  0823               	movf	?___aldiv+3,w
 15356     08B6  00BD               	movwf	UTILI_deciWatt_to_centiVolt@sqrt+3
 15357     08B7  0822               	movf	?___aldiv+2,w
 15358     08B8  00BC               	movwf	UTILI_deciWatt_to_centiVolt@sqrt+2
 15359     08B9  0821               	movf	?___aldiv+1,w
 15360     08BA  00BB               	movwf	UTILI_deciWatt_to_centiVolt@sqrt+1
 15361     08BB  0820               	movf	?___aldiv,w
 15362     08BC  00BA               	movwf	UTILI_deciWatt_to_centiVolt@sqrt
 15363     08BD                     l7948:
 15364                           
 15365                           ;utili.c: 152:   temp=0;
 15366     08BD  3000               	movlw	0
 15367     08BE  00C1               	movwf	UTILI_deciWatt_to_centiVolt@temp+3
 15368     08BF  3000               	movlw	0
 15369     08C0  00C0               	movwf	UTILI_deciWatt_to_centiVolt@temp+2
 15370     08C1  3000               	movlw	0
 15371     08C2  00BF               	movwf	UTILI_deciWatt_to_centiVolt@temp+1
 15372     08C3  3000               	movlw	0
 15373     08C4  00BE               	movwf	UTILI_deciWatt_to_centiVolt@temp
 15374                           
 15375                           ;utili.c: 154:   while (sqrt != temp)
 15376     08C5  2912               	goto	l503
 15377     08C6                     l7950:
 15378                           
 15379                           ;utili.c: 155:   {;utili.c: 156:     temp = sqrt;
 15380     08C6  083D               	movf	UTILI_deciWatt_to_centiVolt@sqrt+3,w
 15381     08C7  00C1               	movwf	UTILI_deciWatt_to_centiVolt@temp+3
 15382     08C8  083C               	movf	UTILI_deciWatt_to_centiVolt@sqrt+2,w
 15383     08C9  00C0               	movwf	UTILI_deciWatt_to_centiVolt@temp+2
 15384     08CA  083B               	movf	UTILI_deciWatt_to_centiVolt@sqrt+1,w
 15385     08CB  00BF               	movwf	UTILI_deciWatt_to_centiVolt@temp+1
 15386     08CC  083A               	movf	UTILI_deciWatt_to_centiVolt@sqrt,w
 15387     08CD  00BE               	movwf	UTILI_deciWatt_to_centiVolt@temp
 15388     08CE                     l7952:
 15389                           
 15390                           ;utili.c: 157:     sqrt = ((number / temp) + temp ) / 2;
 15391     08CE  0841               	movf	UTILI_deciWatt_to_centiVolt@temp+3,w
 15392     08CF  00A3               	movwf	___aldiv@divisor+3
 15393     08D0  0840               	movf	UTILI_deciWatt_to_centiVolt@temp+2,w
 15394     08D1  00A2               	movwf	___aldiv@divisor+2
 15395     08D2  083F               	movf	UTILI_deciWatt_to_centiVolt@temp+1,w
 15396     08D3  00A1               	movwf	___aldiv@divisor+1
 15397     08D4  083E               	movf	UTILI_deciWatt_to_centiVolt@temp,w
 15398     08D5  00A0               	movwf	___aldiv@divisor
 15399     08D6  0839               	movf	UTILI_deciWatt_to_centiVolt@number+3,w
 15400     08D7  00A7               	movwf	___aldiv@dividend+3
 15401     08D8  0838               	movf	UTILI_deciWatt_to_centiVolt@number+2,w
 15402     08D9  00A6               	movwf	___aldiv@dividend+2
 15403     08DA  0837               	movf	UTILI_deciWatt_to_centiVolt@number+1,w
 15404     08DB  00A5               	movwf	___aldiv@dividend+1
 15405     08DC  0836               	movf	UTILI_deciWatt_to_centiVolt@number,w
 15406     08DD  00A4               	movwf	___aldiv@dividend
 15407     08DE  3195  25A2  3188   	fcall	___aldiv
 15408     08E1  0020               	movlb	0	; select bank0
 15409     08E2  0820               	movf	?___aldiv,w
 15410     08E3  073E               	addwf	UTILI_deciWatt_to_centiVolt@temp,w
 15411     08E4  00AE               	movwf	??_UTILI_deciWatt_to_centiVolt
 15412     08E5  0821               	movf	?___aldiv+1,w
 15413     08E6  3D3F               	addwfc	UTILI_deciWatt_to_centiVolt@temp+1,w
 15414     08E7  00AF               	movwf	??_UTILI_deciWatt_to_centiVolt+1
 15415     08E8  0822               	movf	?___aldiv+2,w
 15416     08E9  3D40               	addwfc	UTILI_deciWatt_to_centiVolt@temp+2,w
 15417     08EA  00B0               	movwf	??_UTILI_deciWatt_to_centiVolt+2
 15418     08EB  0823               	movf	?___aldiv+3,w
 15419     08EC  3D41               	addwfc	UTILI_deciWatt_to_centiVolt@temp+3,w
 15420     08ED  00B1               	movwf	??_UTILI_deciWatt_to_centiVolt+3
 15421     08EE  0831               	movf	??_UTILI_deciWatt_to_centiVolt+3,w
 15422     08EF  00B5               	movwf	_UTILI_deciWatt_to_centiVolt$2997+3
 15423     08F0  0830               	movf	??_UTILI_deciWatt_to_centiVolt+2,w
 15424     08F1  00B4               	movwf	_UTILI_deciWatt_to_centiVolt$2997+2
 15425     08F2  082F               	movf	??_UTILI_deciWatt_to_centiVolt+1,w
 15426     08F3  00B3               	movwf	_UTILI_deciWatt_to_centiVolt$2997+1
 15427     08F4  082E               	movf	??_UTILI_deciWatt_to_centiVolt,w
 15428     08F5  00B2               	movwf	_UTILI_deciWatt_to_centiVolt$2997
 15429     08F6                     l7954:
 15430                           
 15431                           ;utili.c: 157:     sqrt = ((number / temp) + temp ) / 2;
 15432     08F6  3000               	movlw	0
 15433     08F7  00A3               	movwf	___aldiv@divisor+3
 15434     08F8  3000               	movlw	0
 15435     08F9  00A2               	movwf	___aldiv@divisor+2
 15436     08FA  3000               	movlw	0
 15437     08FB  00A1               	movwf	___aldiv@divisor+1
 15438     08FC  3002               	movlw	2
 15439     08FD  00A0               	movwf	___aldiv@divisor
 15440     08FE  0835               	movf	_UTILI_deciWatt_to_centiVolt$2997+3,w
 15441     08FF  00A7               	movwf	___aldiv@dividend+3
 15442     0900  0834               	movf	_UTILI_deciWatt_to_centiVolt$2997+2,w
 15443     0901  00A6               	movwf	___aldiv@dividend+2
 15444     0902  0833               	movf	_UTILI_deciWatt_to_centiVolt$2997+1,w
 15445     0903  00A5               	movwf	___aldiv@dividend+1
 15446     0904  0832               	movf	_UTILI_deciWatt_to_centiVolt$2997,w
 15447     0905  00A4               	movwf	___aldiv@dividend
 15448     0906  3195  25A2  3188   	fcall	___aldiv
 15449     0909  0020               	movlb	0	; select bank0
 15450     090A  0823               	movf	?___aldiv+3,w
 15451     090B  00BD               	movwf	UTILI_deciWatt_to_centiVolt@sqrt+3
 15452     090C  0822               	movf	?___aldiv+2,w
 15453     090D  00BC               	movwf	UTILI_deciWatt_to_centiVolt@sqrt+2
 15454     090E  0821               	movf	?___aldiv+1,w
 15455     090F  00BB               	movwf	UTILI_deciWatt_to_centiVolt@sqrt+1
 15456     0910  0820               	movf	?___aldiv,w
 15457     0911  00BA               	movwf	UTILI_deciWatt_to_centiVolt@sqrt
 15458     0912                     l503:	
 15459                           ;utili.c: 158:   }
 15460                           
 15461                           
 15462                           ;utili.c: 154:   while (sqrt != temp)
 15463     0912  0841               	movf	UTILI_deciWatt_to_centiVolt@temp+3,w
 15464     0913  063D               	xorwf	UTILI_deciWatt_to_centiVolt@sqrt+3,w
 15465     0914  1D03               	skipz
 15466     0915  2920               	goto	u9225
 15467     0916  0840               	movf	UTILI_deciWatt_to_centiVolt@temp+2,w
 15468     0917  063C               	xorwf	UTILI_deciWatt_to_centiVolt@sqrt+2,w
 15469     0918  1D03               	skipz
 15470     0919  2920               	goto	u9225
 15471     091A  083F               	movf	UTILI_deciWatt_to_centiVolt@temp+1,w
 15472     091B  063B               	xorwf	UTILI_deciWatt_to_centiVolt@sqrt+1,w
 15473     091C  1D03               	skipz
 15474     091D  2920               	goto	u9225
 15475     091E  083E               	movf	UTILI_deciWatt_to_centiVolt@temp,w
 15476     091F  063A               	xorwf	UTILI_deciWatt_to_centiVolt@sqrt,w
 15477     0920                     u9225:
 15478     0920  1D03               	skipz
 15479     0921  2923               	goto	u9221
 15480     0922  2924               	goto	u9220
 15481     0923                     u9221:
 15482     0923  28C6               	goto	l7950
 15483     0924                     u9220:
 15484     0924                     l7956:
 15485                           
 15486                           ;utili.c: 160:   return ((int16_t) sqrt);
 15487     0924  083B               	movf	UTILI_deciWatt_to_centiVolt@sqrt+1,w
 15488     0925  00FD               	movwf	?_UTILI_deciWatt_to_centiVolt+1
 15489     0926  083A               	movf	UTILI_deciWatt_to_centiVolt@sqrt,w
 15490     0927  00FC               	movwf	?_UTILI_deciWatt_to_centiVolt
 15491     0928                     l506:
 15492     0928  0008               	return
 15493     0929                     __end_of_UTILI_deciWatt_to_centiVolt:
 15494                           
 15495                           	psect	text54
 15496     1B2A                     __ptext54:	
 15497 ;; *************** function ___lmul *****************
 15498 ;; Defined at:
 15499 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\Umul32.c"
 15500 ;; Parameters:    Size  Location     Type
 15501 ;;  multiplier      4    0[COMMON] unsigned long 
 15502 ;;  multiplicand    4    4[COMMON] unsigned long 
 15503 ;; Auto vars:     Size  Location     Type
 15504 ;;  product         4    8[COMMON] unsigned long 
 15505 ;; Return value:  Size  Location     Type
 15506 ;;                  4    0[COMMON] unsigned long 
 15507 ;; Registers used:
 15508 ;;		wreg, status,2, status,0
 15509 ;; Tracked objects:
 15510 ;;		On entry : 0/0
 15511 ;;		On exit  : 0/0
 15512 ;;		Unchanged: 0/0
 15513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15514 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15515 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15517 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15518 ;;Total ram usage:       12 bytes
 15519 ;; Hardware stack levels used: 1
 15520 ;; Hardware stack levels required when called: 1
 15521 ;; This function calls:
 15522 ;;		Nothing
 15523 ;; This function is called by:
 15524 ;;		_UTILI_deciWatt_to_centiVolt
 15525 ;;		_UTILI_centiVolt_to_deciWatt
 15526 ;;		_UTILI_CalPWR
 15527 ;;		_UTILI_CalSWR
 15528 ;;		_MENU_CalPWR_Run
 15529 ;; This function uses a non-reentrant model
 15530 ;;
 15531                           
 15532     1B2A                     ___lmul:	
 15533                           ;psect for function ___lmul
 15534                           
 15535     1B2A                     l7538:	
 15536                           ;incstack = 0
 15537                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 15538                           
 15539     1B2A  3000               	movlw	0
 15540     1B2B  00FB               	movwf	___lmul@product+3
 15541     1B2C  3000               	movlw	0
 15542     1B2D  00FA               	movwf	___lmul@product+2
 15543     1B2E  3000               	movlw	0
 15544     1B2F  00F9               	movwf	___lmul@product+1
 15545     1B30  3000               	movlw	0
 15546     1B31  00F8               	movwf	___lmul@product
 15547     1B32                     l7540:
 15548     1B32  1C70               	btfss	___lmul@multiplier,0
 15549     1B33  2B35               	goto	u8031
 15550     1B34  2B36               	goto	u8030
 15551     1B35                     u8031:
 15552     1B35  2B3E               	goto	l7544
 15553     1B36                     u8030:
 15554     1B36                     l7542:
 15555     1B36  0874               	movf	___lmul@multiplicand,w
 15556     1B37  07F8               	addwf	___lmul@product,f
 15557     1B38  0875               	movf	___lmul@multiplicand+1,w
 15558     1B39  3DF9               	addwfc	___lmul@product+1,f
 15559     1B3A  0876               	movf	___lmul@multiplicand+2,w
 15560     1B3B  3DFA               	addwfc	___lmul@product+2,f
 15561     1B3C  0877               	movf	___lmul@multiplicand+3,w
 15562     1B3D  3DFB               	addwfc	___lmul@product+3,f
 15563     1B3E                     l7544:
 15564     1B3E  3001               	movlw	1
 15565     1B3F                     u8045:
 15566     1B3F  35F4               	lslf	___lmul@multiplicand,f
 15567     1B40  0DF5               	rlf	___lmul@multiplicand+1,f
 15568     1B41  0DF6               	rlf	___lmul@multiplicand+2,f
 15569     1B42  0DF7               	rlf	___lmul@multiplicand+3,f
 15570     1B43  0B89               	decfsz	9,f
 15571     1B44  2B3F               	goto	u8045
 15572     1B45                     l7546:
 15573     1B45  3001               	movlw	1
 15574     1B46                     u8055:
 15575     1B46  36F3               	lsrf	___lmul@multiplier+3,f
 15576     1B47  0CF2               	rrf	___lmul@multiplier+2,f
 15577     1B48  0CF1               	rrf	___lmul@multiplier+1,f
 15578     1B49  0CF0               	rrf	___lmul@multiplier,f
 15579     1B4A  0B89               	decfsz	9,f
 15580     1B4B  2B46               	goto	u8055
 15581     1B4C  0873               	movf	___lmul@multiplier+3,w
 15582     1B4D  0472               	iorwf	___lmul@multiplier+2,w
 15583     1B4E  0471               	iorwf	___lmul@multiplier+1,w
 15584     1B4F  0470               	iorwf	___lmul@multiplier,w
 15585     1B50  1D03               	skipz
 15586     1B51  2B53               	goto	u8061
 15587     1B52  2B54               	goto	u8060
 15588     1B53                     u8061:
 15589     1B53  2B32               	goto	l7540
 15590     1B54                     u8060:
 15591     1B54                     l7548:
 15592     1B54  087B               	movf	___lmul@product+3,w
 15593     1B55  00F3               	movwf	?___lmul+3
 15594     1B56  087A               	movf	___lmul@product+2,w
 15595     1B57  00F2               	movwf	?___lmul+2
 15596     1B58  0879               	movf	___lmul@product+1,w
 15597     1B59  00F1               	movwf	?___lmul+1
 15598     1B5A  0878               	movf	___lmul@product,w
 15599     1B5B  00F0               	movwf	?___lmul
 15600     1B5C                     l2192:
 15601     1B5C  0008               	return
 15602     1B5D                     __end_of___lmul:
 15603                           
 15604                           	psect	text55
 15605     11D9                     __ptext55:	
 15606 ;; *************** function _MENU_CalPWR_Update *****************
 15607 ;; Defined at:
 15608 ;;		line 821 in file "menu.c"
 15609 ;; Parameters:    Size  Location     Type
 15610 ;;		None
 15611 ;; Auto vars:     Size  Location     Type
 15612 ;;  str             2   33[BANK0 ] unsigned char [2]
 15613 ;; Return value:  Size  Location     Type
 15614 ;;                  1    wreg      void 
 15615 ;; Registers used:
 15616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15617 ;; Tracked objects:
 15618 ;;		On entry : 0/0
 15619 ;;		On exit  : 0/0
 15620 ;;		Unchanged: 0/0
 15621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15623 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15624 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15625 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15626 ;;Total ram usage:        6 bytes
 15627 ;; Hardware stack levels used: 1
 15628 ;; Hardware stack levels required when called: 1
 15629 ;; This function calls:
 15630 ;;		_DISP_PWR
 15631 ;;		_DISP_Str
 15632 ;; This function is called by:
 15633 ;;		_MENU_CalPWR_Init
 15634 ;;		_MENU_CalPWR_Run
 15635 ;; This function uses a non-reentrant model
 15636 ;;
 15637                           
 15638     11D9                     _MENU_CalPWR_Update:	
 15639                           ;psect for function _MENU_CalPWR_Update
 15640                           
 15641     11D9                     l7860:	
 15642                           ;incstack = 0
 15643                           ; Regs used in _MENU_CalPWR_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15644                           
 15645                           
 15646                           ;menu.c: 823:   char str[2] = " ";
 15647     11D9  0021               	movlb	1	; select bank1
 15648     11DA  086A               	movf	(MENU_CalPWR_Update@F3100+1)^(0+128),w
 15649     11DB  0020               	movlb	0	; select bank0
 15650     11DC  00C2               	movwf	MENU_CalPWR_Update@str+1
 15651     11DD  0021               	movlb	1	; select bank1
 15652     11DE  0869               	movf	MENU_CalPWR_Update@F3100^(0+128),w
 15653     11DF  0020               	movlb	0	; select bank0
 15654     11E0  00C1               	movwf	MENU_CalPWR_Update@str
 15655     11E1                     l7862:
 15656                           
 15657                           ;menu.c: 825:   str[0] = MENU_var.cal.step + '1';
 15658     11E1  085C               	movf	_MENU_var+1,w
 15659     11E2  3E31               	addlw	49
 15660     11E3  00C1               	movwf	MENU_CalPWR_Update@str
 15661     11E4                     l7864:
 15662                           
 15663                           ;menu.c: 826:   DISP_Str(0, 0,str_Point,0);
 15664     11E4  01F8               	clrf	DISP_Str@row
 15665     11E5  30A2               	movlw	low (_str_Point| (0+32768))
 15666     11E6  00F9               	movwf	DISP_Str@str
 15667     11E7  30A9               	movlw	high (_str_Point| (0+32768))
 15668     11E8  00FA               	movwf	DISP_Str@str+1
 15669     11E9  01FB               	clrf	DISP_Str@invert
 15670     11EA  3000               	movlw	0
 15671     11EB  318D  2547  3191   	fcall	_DISP_Str
 15672     11EE                     l7866:
 15673                           
 15674                           ;menu.c: 827:   DISP_Str(9, 0, str, 0);
 15675     11EE  01F8               	clrf	DISP_Str@row
 15676     11EF  3041               	movlw	low MENU_CalPWR_Update@str
 15677     11F0  00F9               	movwf	DISP_Str@str
 15678     11F1  3000               	movlw	high MENU_CalPWR_Update@str
 15679     11F2  00FA               	movwf	DISP_Str@str+1
 15680     11F3  01FB               	clrf	DISP_Str@invert
 15681     11F4  3009               	movlw	9
 15682     11F5  318D  2547  3191   	fcall	_DISP_Str
 15683     11F8                     l7868:
 15684                           
 15685                           ;menu.c: 828:   DISP_Str(0, 1,str_WaitForHF, 0);
 15686     11F8  01F8               	clrf	DISP_Str@row
 15687     11F9  0AF8               	incf	DISP_Str@row,f
 15688     11FA  306A               	movlw	low (_str_WaitForHF| (0+32768))
 15689     11FB  00F9               	movwf	DISP_Str@str
 15690     11FC  30A8               	movlw	high (_str_WaitForHF| (0+32768))
 15691     11FD  00FA               	movwf	DISP_Str@str+1
 15692     11FE  01FB               	clrf	DISP_Str@invert
 15693     11FF  3000               	movlw	0
 15694     1200  318D  2547  3191   	fcall	_DISP_Str
 15695     1203                     l7870:
 15696                           
 15697                           ;menu.c: 830:   DISP_Str(0, 2, str_Power, 0);
 15698     1203  3002               	movlw	2
 15699     1204  00F8               	movwf	DISP_Str@row
 15700     1205  30A8               	movlw	low (_str_Power| (0+32768))
 15701     1206  00F9               	movwf	DISP_Str@str
 15702     1207  30A9               	movlw	high (_str_Power| (0+32768))
 15703     1208  00FA               	movwf	DISP_Str@str+1
 15704     1209  01FB               	clrf	DISP_Str@invert
 15705     120A  3000               	movlw	0
 15706     120B  318D  2547  3191   	fcall	_DISP_Str
 15707     120E                     l7872:
 15708                           
 15709                           ;menu.c: 831:   DISP_PWR(6, 2, MENU_var.cal.cal_point[MENU_var.cal.step], (MENU_var.cal.
      +                          cursor == 0));
 15710     120E  3002               	movlw	2
 15711     120F  0020               	movlb	0	; select bank0
 15712     1210  00B1               	movwf	DISP_PWR@row
 15713     1211  085C               	movf	_MENU_var+1,w
 15714     1212  00BD               	movwf	??_MENU_CalPWR_Update
 15715     1213  01BE               	clrf	??_MENU_CalPWR_Update+1
 15716     1214  35BD               	lslf	??_MENU_CalPWR_Update,f
 15717     1215  0DBE               	rlf	??_MENU_CalPWR_Update+1,f
 15718     1216  305D               	movlw	low (_MENU_var+2)
 15719     1217  00BF               	movwf	??_MENU_CalPWR_Update+2
 15720     1218  3000               	movlw	high (_MENU_var+2)
 15721     1219  00C0               	movwf	??_MENU_CalPWR_Update+3
 15722     121A  083D               	movf	??_MENU_CalPWR_Update,w
 15723     121B  073F               	addwf	??_MENU_CalPWR_Update+2,w
 15724     121C  0086               	movwf	6
 15725     121D  083E               	movf	??_MENU_CalPWR_Update+1,w
 15726     121E  3D40               	addwfc	??_MENU_CalPWR_Update+3,w
 15727     121F  0087               	movwf	7
 15728     1220  3F40               	moviw [0]fsr1
 15729     1221  00B2               	movwf	DISP_PWR@deciWatt
 15730     1222  3F41               	moviw [1]fsr1
 15731     1223  00B3               	movwf	DISP_PWR@deciWatt+1
 15732     1224  085B               	movf	_MENU_var,w
 15733     1225  1903               	btfsc	3,2
 15734     1226  2A28               	goto	u8991
 15735     1227  2A2A               	goto	u8990
 15736     1228                     u8991:
 15737     1228  3001               	movlw	1
 15738     1229  2A2B               	goto	u9000
 15739     122A                     u8990:
 15740     122A  3000               	movlw	0
 15741     122B                     u9000:
 15742     122B  00B4               	movwf	DISP_PWR@invert
 15743     122C  3006               	movlw	6
 15744     122D  319E  26A5  3191   	fcall	_DISP_PWR
 15745     1230                     l7874:
 15746                           
 15747                           ;menu.c: 833:   DISP_Str(7, 3,str_Esc, (MENU_var.cal.cursor == 1));
 15748     1230  3003               	movlw	3
 15749     1231  00F8               	movwf	DISP_Str@row
 15750     1232  30E6               	movlw	low (_str_Esc| (0+32768))
 15751     1233  00F9               	movwf	DISP_Str@str
 15752     1234  30A9               	movlw	high (_str_Esc| (0+32768))
 15753     1235  00FA               	movwf	DISP_Str@str+1
 15754     1236  0020               	movlb	0	; select bank0
 15755     1237  035B               	decf	_MENU_var,w
 15756     1238  1903               	btfsc	3,2
 15757     1239  2A3B               	goto	u9011
 15758     123A  2A3D               	goto	u9010
 15759     123B                     u9011:
 15760     123B  3001               	movlw	1
 15761     123C  2A3E               	goto	u9020
 15762     123D                     u9010:
 15763     123D  3000               	movlw	0
 15764     123E                     u9020:
 15765     123E  00FB               	movwf	DISP_Str@invert
 15766     123F  3007               	movlw	7
 15767     1240  318D  2547  3191   	fcall	_DISP_Str
 15768     1243                     l1356:
 15769     1243  0008               	return
 15770     1244                     __end_of_MENU_CalPWR_Update:
 15771                           
 15772                           	psect	text56
 15773     1EA5                     __ptext56:	
 15774 ;; *************** function _DISP_PWR *****************
 15775 ;; Defined at:
 15776 ;;		line 316 in file "disp.c"
 15777 ;; Parameters:    Size  Location     Type
 15778 ;;  col             1    wreg     unsigned char 
 15779 ;;  row             1   17[BANK0 ] unsigned char 
 15780 ;;  deciWatt        2   18[BANK0 ] short 
 15781 ;;  invert          1   20[BANK0 ] unsigned char 
 15782 ;; Auto vars:     Size  Location     Type
 15783 ;;  col             1   22[BANK0 ] unsigned char 
 15784 ;;  str             5   24[BANK0 ] unsigned char [5]
 15785 ;;  low_value       1   23[BANK0 ] unsigned char 
 15786 ;; Return value:  Size  Location     Type
 15787 ;;                  1    wreg      void 
 15788 ;; Registers used:
 15789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15790 ;; Tracked objects:
 15791 ;;		On entry : 0/0
 15792 ;;		On exit  : 0/0
 15793 ;;		Unchanged: 0/0
 15794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15795 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15796 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15797 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15798 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15799 ;;Total ram usage:       12 bytes
 15800 ;; Hardware stack levels used: 1
 15801 ;; Hardware stack levels required when called: 1
 15802 ;; This function calls:
 15803 ;;		_DISP_Str
 15804 ;;		_UTILI_Int2Str
 15805 ;;		___awdiv
 15806 ;; This function is called by:
 15807 ;;		_MENU_Main_Update
 15808 ;;		_MENU_RelTest_Run
 15809 ;;		_MENU_CalPWR_Update
 15810 ;; This function uses a non-reentrant model
 15811 ;;
 15812                           
 15813     1EA5                     _DISP_PWR:	
 15814                           ;psect for function _DISP_PWR
 15815                           
 15816                           
 15817                           ;incstack = 0
 15818                           ; Regs used in _DISP_PWR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15819                           ;DISP_PWR@col stored from wreg
 15820     1EA5  0020               	movlb	0	; select bank0
 15821     1EA6  00B6               	movwf	DISP_PWR@col
 15822     1EA7                     l7664:
 15823                           
 15824                           ;disp.c: 316: void DISP_PWR(uint8_t col, uint8_t row, int16_t deciWatt, uint8_t invert);
      +                          disp.c: 317: {;disp.c: 318:   char str[5];;disp.c: 319:   uint8_t low_value =1;
 15825     1EA7  3001               	movlw	1
 15826     1EA8  00B7               	movwf	DISP_PWR@low_value
 15827     1EA9                     l7666:
 15828                           
 15829                           ;disp.c: 321:   if(deciWatt >= 100)
 15830     1EA9  0833               	movf	DISP_PWR@deciWatt+1,w
 15831     1EAA  3A80               	xorlw	128
 15832     1EAB  00B5               	movwf	??_DISP_PWR
 15833     1EAC  3080               	movlw	128
 15834     1EAD  0235               	subwf	??_DISP_PWR,w
 15835     1EAE  1D03               	skipz
 15836     1EAF  2EB2               	goto	u8475
 15837     1EB0  3064               	movlw	100
 15838     1EB1  0232               	subwf	DISP_PWR@deciWatt,w
 15839     1EB2                     u8475:
 15840     1EB2  1C03               	skipc
 15841     1EB3  2EB5               	goto	u8471
 15842     1EB4  2EB6               	goto	u8470
 15843     1EB5                     u8471:
 15844     1EB5  2EC8               	goto	l7672
 15845     1EB6                     u8470:
 15846     1EB6                     l7668:
 15847                           
 15848                           ;disp.c: 322:   {;disp.c: 323:     deciWatt = deciWatt / 10;
 15849     1EB6  300A               	movlw	10
 15850     1EB7  00F0               	movwf	___awdiv@divisor
 15851     1EB8  3000               	movlw	0
 15852     1EB9  00F1               	movwf	___awdiv@divisor+1
 15853     1EBA  0020               	movlb	0	; select bank0
 15854     1EBB  0833               	movf	DISP_PWR@deciWatt+1,w
 15855     1EBC  00F3               	movwf	___awdiv@dividend+1
 15856     1EBD  0832               	movf	DISP_PWR@deciWatt,w
 15857     1EBE  00F2               	movwf	___awdiv@dividend
 15858     1EBF  3191  2122  319E   	fcall	___awdiv
 15859     1EC2  0871               	movf	?___awdiv+1,w
 15860     1EC3  0020               	movlb	0	; select bank0
 15861     1EC4  00B3               	movwf	DISP_PWR@deciWatt+1
 15862     1EC5  0870               	movf	?___awdiv,w
 15863     1EC6  00B2               	movwf	DISP_PWR@deciWatt
 15864     1EC7                     l7670:
 15865                           
 15866                           ;disp.c: 324:     low_value=0;
 15867     1EC7  01B7               	clrf	DISP_PWR@low_value
 15868     1EC8                     l7672:
 15869                           
 15870                           ;disp.c: 326:   UTILI_Int2Str(deciWatt, str, (sizeof(str)-1));
 15871     1EC8  0020               	movlb	0	; select bank0
 15872     1EC9  0833               	movf	DISP_PWR@deciWatt+1,w
 15873     1ECA  00F9               	movwf	UTILI_Int2Str@number+1
 15874     1ECB  0832               	movf	DISP_PWR@deciWatt,w
 15875     1ECC  00F8               	movwf	UTILI_Int2Str@number
 15876     1ECD  3038               	movlw	(low (DISP_PWR@str| 0))& (0+255)
 15877     1ECE  00FA               	movwf	UTILI_Int2Str@output
 15878     1ECF  3004               	movlw	4
 15879     1ED0  00FB               	movwf	UTILI_Int2Str@size
 15880     1ED1  3194  241B  319E   	fcall	_UTILI_Int2Str
 15881     1ED4                     l7674:
 15882                           
 15883                           ;disp.c: 329:   if(low_value)
 15884     1ED4  0020               	movlb	0	; select bank0
 15885     1ED5  0837               	movf	DISP_PWR@low_value,w
 15886     1ED6  1903               	btfsc	3,2
 15887     1ED7  2ED9               	goto	u8481
 15888     1ED8  2EDA               	goto	u8480
 15889     1ED9                     u8481:
 15890     1ED9  2EE6               	goto	l748
 15891     1EDA                     u8480:
 15892     1EDA                     l7676:
 15893                           
 15894                           ;disp.c: 330:   {;disp.c: 332:     str[0] = str[1];
 15895     1EDA  0839               	movf	DISP_PWR@str+1,w
 15896     1EDB  00B8               	movwf	DISP_PWR@str
 15897     1EDC                     l7678:
 15898                           
 15899                           ;disp.c: 333:     if(str[0] == ' ') str[0] = '0';
 15900     1EDC  3020               	movlw	32
 15901     1EDD  0638               	xorwf	DISP_PWR@str,w
 15902     1EDE  1D03               	btfss	3,2
 15903     1EDF  2EE1               	goto	u8491
 15904     1EE0  2EE2               	goto	u8490
 15905     1EE1                     u8491:
 15906     1EE1  2EE4               	goto	l749
 15907     1EE2                     u8490:
 15908     1EE2                     l7680:
 15909     1EE2  3030               	movlw	48
 15910     1EE3  00B8               	movwf	DISP_PWR@str
 15911     1EE4                     l749:
 15912                           
 15913                           ;disp.c: 334:     str[1] = '.';
 15914     1EE4  302E               	movlw	46
 15915     1EE5  00B9               	movwf	DISP_PWR@str+1
 15916     1EE6                     l748:	
 15917                           ;disp.c: 335:   }
 15918                           
 15919                           
 15920                           ;disp.c: 337:   str[3] = 'W';
 15921     1EE6  3057               	movlw	87
 15922     1EE7  00BB               	movwf	DISP_PWR@str+3
 15923     1EE8                     l7682:
 15924                           
 15925                           ;disp.c: 338:   str[4] = 0;
 15926     1EE8  01BC               	clrf	DISP_PWR@str+4
 15927     1EE9                     l7684:
 15928                           
 15929                           ;disp.c: 341:   DISP_Str(col, row, str, invert);
 15930     1EE9  0831               	movf	DISP_PWR@row,w
 15931     1EEA  00F8               	movwf	DISP_Str@row
 15932     1EEB  3038               	movlw	low DISP_PWR@str
 15933     1EEC  00F9               	movwf	DISP_Str@str
 15934     1EED  3000               	movlw	high DISP_PWR@str
 15935     1EEE  00FA               	movwf	DISP_Str@str+1
 15936     1EEF  0834               	movf	DISP_PWR@invert,w
 15937     1EF0  00FB               	movwf	DISP_Str@invert
 15938     1EF1  0836               	movf	DISP_PWR@col,w
 15939     1EF2  318D  2547  319E   	fcall	_DISP_Str
 15940     1EF5                     l750:
 15941     1EF5  0008               	return
 15942     1EF6                     __end_of_DISP_PWR:
 15943                           
 15944                           	psect	text57
 15945     141B                     __ptext57:	
 15946 ;; *************** function _UTILI_Int2Str *****************
 15947 ;; Defined at:
 15948 ;;		line 86 in file "utili.c"
 15949 ;; Parameters:    Size  Location     Type
 15950 ;;  number          2    8[COMMON] short 
 15951 ;;  output          1   10[COMMON] PTR unsigned char 
 15952 ;;		 -> MENU_RelTest_Update@str(7), MENU_Sleep_Update@str(4), MENU_Main_Update@str(7), DISP_SWR@str(5), 
 15953 ;;		 -> DISP_PWR@str(5), 
 15954 ;;  size            1   11[COMMON] unsigned char 
 15955 ;; Auto vars:     Size  Location     Type
 15956 ;;  p               1    2[BANK0 ] PTR unsigned char 
 15957 ;;		 -> MENU_RelTest_Update@str(7), MENU_Sleep_Update@str(4), MENU_Main_Update@str(7), DISP_SWR@str(5), 
 15958 ;;		 -> DISP_PWR@str(5), 
 15959 ;;  pos             1    1[BANK0 ] unsigned char 
 15960 ;;  minus           1    0[BANK0 ] unsigned char 
 15961 ;; Return value:  Size  Location     Type
 15962 ;;                  1    wreg      void 
 15963 ;; Registers used:
 15964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15965 ;; Tracked objects:
 15966 ;;		On entry : 0/0
 15967 ;;		On exit  : 0/0
 15968 ;;		Unchanged: 0/0
 15969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15971 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15973 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15974 ;;Total ram usage:        9 bytes
 15975 ;; Hardware stack levels used: 1
 15976 ;; Hardware stack levels required when called: 1
 15977 ;; This function calls:
 15978 ;;		___awdiv
 15979 ;;		___awmod
 15980 ;; This function is called by:
 15981 ;;		_UTILI_GetCapValueStr
 15982 ;;		_UTILI_GetIndValueStr
 15983 ;;		_DISP_PWR
 15984 ;;		_DISP_SWR
 15985 ;;		_MENU_Sleep_Update
 15986 ;; This function uses a non-reentrant model
 15987 ;;
 15988                           
 15989     141B                     _UTILI_Int2Str:	
 15990                           ;psect for function _UTILI_Int2Str
 15991                           
 15992     141B                     l7458:	
 15993                           ;incstack = 0
 15994                           ; Regs used in _UTILI_Int2Str: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15995                           
 15996                           
 15997                           ;utili.c: 86: void UTILI_Int2Str(int16_t number, char *output, uint8_t size);utili.c: 87
      +                          : {;utili.c: 89:   char *p;;utili.c: 90:   uint8_t minus=0;
 15998     141B  0020               	movlb	0	; select bank0
 15999     141C  01A0               	clrf	UTILI_Int2Str@minus
 16000     141D                     l7460:
 16001                           
 16002                           ;utili.c: 92:   if (size <= 1) return;
 16003     141D  3002               	movlw	2
 16004     141E  027B               	subwf	UTILI_Int2Str@size,w
 16005     141F  1803               	skipnc
 16006     1420  2C22               	goto	u7911
 16007     1421  2C23               	goto	u7910
 16008     1422                     u7911:
 16009     1422  2C24               	goto	l7464
 16010     1423                     u7910:
 16011     1423  2C98               	goto	l491
 16012     1424                     l7464:
 16013                           
 16014                           ;utili.c: 94:   uint8_t pos = size - 1;
 16015     1424  087B               	movf	UTILI_Int2Str@size,w
 16016     1425  3EFF               	addlw	255
 16017     1426  00A1               	movwf	UTILI_Int2Str@pos
 16018                           
 16019                           ;utili.c: 96:   p = output + pos;
 16020     1427  087A               	movf	UTILI_Int2Str@output,w
 16021     1428  0721               	addwf	UTILI_Int2Str@pos,w
 16022     1429  00A2               	movwf	UTILI_Int2Str@p
 16023     142A                     l7466:
 16024                           
 16025                           ;utili.c: 98:   *p = 0;
 16026     142A  0822               	movf	UTILI_Int2Str@p,w
 16027     142B  0086               	movwf	6
 16028     142C  0187               	clrf	7
 16029     142D  0181               	clrf	1
 16030     142E                     l7468:
 16031                           
 16032                           ;utili.c: 100:   if (number < 0)
 16033     142E  1FF9               	btfss	UTILI_Int2Str@number+1,7
 16034     142F  2C31               	goto	u7921
 16035     1430  2C32               	goto	u7920
 16036     1431                     u7921:
 16037     1431  2C39               	goto	l7474
 16038     1432                     u7920:
 16039     1432                     l7470:
 16040                           
 16041                           ;utili.c: 101:   {;utili.c: 102:     minus =1;
 16042     1432  3001               	movlw	1
 16043     1433  00A0               	movwf	UTILI_Int2Str@minus
 16044     1434                     l7472:
 16045                           
 16046                           ;utili.c: 103:     number = number * -1;
 16047     1434  09F8               	comf	UTILI_Int2Str@number,f
 16048     1435  09F9               	comf	UTILI_Int2Str@number+1,f
 16049     1436  0AF8               	incf	UTILI_Int2Str@number,f
 16050     1437  1903               	skipnz
 16051     1438  0AF9               	incf	UTILI_Int2Str@number+1,f
 16052     1439                     l7474:
 16053                           
 16054                           ;utili.c: 107:   {;utili.c: 108:     pos--;
 16055     1439  3001               	movlw	1
 16056     143A  02A1               	subwf	UTILI_Int2Str@pos,f
 16057     143B                     l7476:
 16058                           
 16059                           ;utili.c: 109:     p--;
 16060     143B  3001               	movlw	1
 16061     143C  02A2               	subwf	UTILI_Int2Str@p,f
 16062     143D                     l7478:
 16063                           
 16064                           ;utili.c: 110:     if (number > 0)
 16065     143D  0879               	movf	UTILI_Int2Str@number+1,w
 16066     143E  3A80               	xorlw	128
 16067     143F  00FC               	movwf	??_UTILI_Int2Str
 16068     1440  3080               	movlw	128
 16069     1441  027C               	subwf	??_UTILI_Int2Str,w
 16070     1442  1D03               	skipz
 16071     1443  2C46               	goto	u7935
 16072     1444  3001               	movlw	1
 16073     1445  0278               	subwf	UTILI_Int2Str@number,w
 16074     1446                     u7935:
 16075     1446  1C03               	skipc
 16076     1447  2C49               	goto	u7931
 16077     1448  2C4A               	goto	u7930
 16078     1449                     u7931:
 16079     1449  2C6C               	goto	l7484
 16080     144A                     u7930:
 16081     144A                     l7480:
 16082                           
 16083                           ;utili.c: 111:     {;utili.c: 112:       *p = '0' + (number % 10);
 16084     144A  0020               	movlb	0	; select bank0
 16085     144B  0822               	movf	UTILI_Int2Str@p,w
 16086     144C  0086               	movwf	6
 16087     144D  0187               	clrf	7
 16088     144E  300A               	movlw	10
 16089     144F  00F0               	movwf	___awmod@divisor
 16090     1450  3000               	movlw	0
 16091     1451  00F1               	movwf	___awmod@divisor+1
 16092     1452  0879               	movf	UTILI_Int2Str@number+1,w
 16093     1453  00F3               	movwf	___awmod@dividend+1
 16094     1454  0878               	movf	UTILI_Int2Str@number,w
 16095     1455  00F2               	movwf	___awmod@dividend
 16096     1456  319E  2654  3194   	fcall	___awmod
 16097     1459  0870               	movf	?___awmod,w
 16098     145A  3E30               	addlw	48
 16099     145B  0081               	movwf	1
 16100     145C                     l7482:
 16101                           
 16102                           ;utili.c: 113:       number /= 10;
 16103     145C  300A               	movlw	10
 16104     145D  00F0               	movwf	___awdiv@divisor
 16105     145E  3000               	movlw	0
 16106     145F  00F1               	movwf	___awdiv@divisor+1
 16107     1460  0879               	movf	UTILI_Int2Str@number+1,w
 16108     1461  00F3               	movwf	___awdiv@dividend+1
 16109     1462  0878               	movf	UTILI_Int2Str@number,w
 16110     1463  00F2               	movwf	___awdiv@dividend
 16111     1464  3191  2122  3194   	fcall	___awdiv
 16112     1467  0871               	movf	?___awdiv+1,w
 16113     1468  00F9               	movwf	UTILI_Int2Str@number+1
 16114     1469  0870               	movf	?___awdiv,w
 16115     146A  00F8               	movwf	UTILI_Int2Str@number
 16116                           
 16117                           ;utili.c: 114:     } else
 16118     146B  2C92               	goto	l7496
 16119     146C                     l7484:
 16120                           
 16121                           ;utili.c: 115:     {;utili.c: 116:       if (pos == (size - 2)) *p='0';
 16122     146C  087B               	movf	UTILI_Int2Str@size,w
 16123     146D  3EFE               	addlw	254
 16124     146E  00FC               	movwf	??_UTILI_Int2Str
 16125     146F  30FF               	movlw	255
 16126     1470  1803               	skipnc
 16127     1471  3000               	movlw	0
 16128     1472  00FD               	movwf	??_UTILI_Int2Str+1
 16129     1473  0020               	movlb	0	; select bank0
 16130     1474  0821               	movf	UTILI_Int2Str@pos,w
 16131     1475  067C               	xorwf	??_UTILI_Int2Str,w
 16132     1476  047D               	iorwf	??_UTILI_Int2Str+1,w
 16133     1477  1D03               	skipz
 16134     1478  2C7A               	goto	u7941
 16135     1479  2C7B               	goto	u7940
 16136     147A                     u7941:
 16137     147A  2C81               	goto	l7488
 16138     147B                     u7940:
 16139     147B                     l7486:
 16140     147B  0822               	movf	UTILI_Int2Str@p,w
 16141     147C  0086               	movwf	6
 16142     147D  0187               	clrf	7
 16143     147E  3030               	movlw	48
 16144     147F  0081               	movwf	1
 16145     1480  2C92               	goto	l7496
 16146     1481                     l7488:
 16147                           
 16148                           ;utili.c: 118:       {;utili.c: 119:         if (minus)
 16149     1481  0820               	movf	UTILI_Int2Str@minus,w
 16150     1482  1903               	btfsc	3,2
 16151     1483  2C85               	goto	u7951
 16152     1484  2C86               	goto	u7950
 16153     1485                     u7951:
 16154     1485  2C8D               	goto	l7494
 16155     1486                     u7950:
 16156     1486                     l7490:
 16157                           
 16158                           ;utili.c: 120:         {;utili.c: 121:           *p='-';
 16159     1486  0822               	movf	UTILI_Int2Str@p,w
 16160     1487  0086               	movwf	6
 16161     1488  0187               	clrf	7
 16162     1489  302D               	movlw	45
 16163     148A  0081               	movwf	1
 16164     148B                     l7492:
 16165                           
 16166                           ;utili.c: 122:           minus=0;
 16167     148B  01A0               	clrf	UTILI_Int2Str@minus
 16168                           
 16169                           ;utili.c: 123:         } else
 16170     148C  2C92               	goto	l7496
 16171     148D                     l7494:
 16172                           
 16173                           ;utili.c: 124:         {;utili.c: 125:           *p = ' ';
 16174     148D  0822               	movf	UTILI_Int2Str@p,w
 16175     148E  0086               	movwf	6
 16176     148F  0187               	clrf	7
 16177     1490  3020               	movlw	32
 16178     1491  0081               	movwf	1
 16179     1492                     l7496:
 16180                           
 16181                           ;utili.c: 131:   } while (pos > 0);
 16182     1492  0020               	movlb	0	; select bank0
 16183     1493  0821               	movf	UTILI_Int2Str@pos,w
 16184     1494  1D03               	btfss	3,2
 16185     1495  2C97               	goto	u7961
 16186     1496  2C98               	goto	u7960
 16187     1497                     u7961:
 16188     1497  2C39               	goto	l7474
 16189     1498                     u7960:
 16190     1498                     l491:
 16191     1498  0008               	return
 16192     1499                     __end_of_UTILI_Int2Str:
 16193                           
 16194                           	psect	text58
 16195     1E54                     __ptext58:	
 16196 ;; *************** function ___awmod *****************
 16197 ;; Defined at:
 16198 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awmod.c"
 16199 ;; Parameters:    Size  Location     Type
 16200 ;;  divisor         2    0[COMMON] int 
 16201 ;;  dividend        2    2[COMMON] int 
 16202 ;; Auto vars:     Size  Location     Type
 16203 ;;  sign            1    5[COMMON] unsigned char 
 16204 ;;  counter         1    4[COMMON] unsigned char 
 16205 ;; Return value:  Size  Location     Type
 16206 ;;                  2    0[COMMON] int 
 16207 ;; Registers used:
 16208 ;;		wreg, status,2, status,0
 16209 ;; Tracked objects:
 16210 ;;		On entry : 0/0
 16211 ;;		On exit  : 0/0
 16212 ;;		Unchanged: 0/0
 16213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16217 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16218 ;;Total ram usage:        6 bytes
 16219 ;; Hardware stack levels used: 1
 16220 ;; Hardware stack levels required when called: 1
 16221 ;; This function calls:
 16222 ;;		Nothing
 16223 ;; This function is called by:
 16224 ;;		_UTILI_Int2Str
 16225 ;; This function uses a non-reentrant model
 16226 ;;
 16227                           
 16228     1E54                     ___awmod:	
 16229                           ;psect for function ___awmod
 16230                           
 16231     1E54                     l7256:	
 16232                           ;incstack = 0
 16233                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 16234                           
 16235     1E54  01F5               	clrf	___awmod@sign
 16236     1E55                     l7258:
 16237     1E55  1FF3               	btfss	___awmod@dividend+1,7
 16238     1E56  2E58               	goto	u7571
 16239     1E57  2E59               	goto	u7570
 16240     1E58                     u7571:
 16241     1E58  2E60               	goto	l7264
 16242     1E59                     u7570:
 16243     1E59                     l7260:
 16244     1E59  09F2               	comf	___awmod@dividend,f
 16245     1E5A  09F3               	comf	___awmod@dividend+1,f
 16246     1E5B  0AF2               	incf	___awmod@dividend,f
 16247     1E5C  1903               	skipnz
 16248     1E5D  0AF3               	incf	___awmod@dividend+1,f
 16249     1E5E                     l7262:
 16250     1E5E  3001               	movlw	1
 16251     1E5F  00F5               	movwf	___awmod@sign
 16252     1E60                     l7264:
 16253     1E60  1FF1               	btfss	___awmod@divisor+1,7
 16254     1E61  2E63               	goto	u7581
 16255     1E62  2E64               	goto	u7580
 16256     1E63                     u7581:
 16257     1E63  2E69               	goto	l7268
 16258     1E64                     u7580:
 16259     1E64                     l7266:
 16260     1E64  09F0               	comf	___awmod@divisor,f
 16261     1E65  09F1               	comf	___awmod@divisor+1,f
 16262     1E66  0AF0               	incf	___awmod@divisor,f
 16263     1E67  1903               	skipnz
 16264     1E68  0AF1               	incf	___awmod@divisor+1,f
 16265     1E69                     l7268:
 16266     1E69  0870               	movf	___awmod@divisor,w
 16267     1E6A  0471               	iorwf	___awmod@divisor+1,w
 16268     1E6B  1903               	btfsc	3,2
 16269     1E6C  2E6E               	goto	u7591
 16270     1E6D  2E6F               	goto	u7590
 16271     1E6E                     u7591:
 16272     1E6E  2E96               	goto	l7286
 16273     1E6F                     u7590:
 16274     1E6F                     l7270:
 16275     1E6F  3001               	movlw	1
 16276     1E70  00F4               	movwf	___awmod@counter
 16277     1E71  2E79               	goto	l7276
 16278     1E72                     l7272:
 16279     1E72  3001               	movlw	1
 16280     1E73                     u7605:
 16281     1E73  35F0               	lslf	___awmod@divisor,f
 16282     1E74  0DF1               	rlf	___awmod@divisor+1,f
 16283     1E75  0B89               	decfsz	9,f
 16284     1E76  2E73               	goto	u7605
 16285     1E77                     l7274:
 16286     1E77  3001               	movlw	1
 16287     1E78  07F4               	addwf	___awmod@counter,f
 16288     1E79                     l7276:
 16289     1E79  1FF1               	btfss	___awmod@divisor+1,7
 16290     1E7A  2E7C               	goto	u7611
 16291     1E7B  2E7D               	goto	u7610
 16292     1E7C                     u7611:
 16293     1E7C  2E72               	goto	l7272
 16294     1E7D                     u7610:
 16295     1E7D                     l7278:
 16296     1E7D  0871               	movf	___awmod@divisor+1,w
 16297     1E7E  0273               	subwf	___awmod@dividend+1,w
 16298     1E7F  1D03               	skipz
 16299     1E80  2E83               	goto	u7625
 16300     1E81  0870               	movf	___awmod@divisor,w
 16301     1E82  0272               	subwf	___awmod@dividend,w
 16302     1E83                     u7625:
 16303     1E83  1C03               	skipc
 16304     1E84  2E86               	goto	u7621
 16305     1E85  2E87               	goto	u7620
 16306     1E86                     u7621:
 16307     1E86  2E8B               	goto	l7282
 16308     1E87                     u7620:
 16309     1E87                     l7280:
 16310     1E87  0870               	movf	___awmod@divisor,w
 16311     1E88  02F2               	subwf	___awmod@dividend,f
 16312     1E89  0871               	movf	___awmod@divisor+1,w
 16313     1E8A  3BF3               	subwfb	___awmod@dividend+1,f
 16314     1E8B                     l7282:
 16315     1E8B  3001               	movlw	1
 16316     1E8C                     u7635:
 16317     1E8C  36F1               	lsrf	___awmod@divisor+1,f
 16318     1E8D  0CF0               	rrf	___awmod@divisor,f
 16319     1E8E  0B89               	decfsz	9,f
 16320     1E8F  2E8C               	goto	u7635
 16321     1E90                     l7284:
 16322     1E90  3001               	movlw	1
 16323     1E91  02F4               	subwf	___awmod@counter,f
 16324     1E92  1D03               	btfss	3,2
 16325     1E93  2E95               	goto	u7641
 16326     1E94  2E96               	goto	u7640
 16327     1E95                     u7641:
 16328     1E95  2E7D               	goto	l7278
 16329     1E96                     u7640:
 16330     1E96                     l7286:
 16331     1E96  0875               	movf	___awmod@sign,w
 16332     1E97  1903               	btfsc	3,2
 16333     1E98  2E9A               	goto	u7651
 16334     1E99  2E9B               	goto	u7650
 16335     1E9A                     u7651:
 16336     1E9A  2EA0               	goto	l7290
 16337     1E9B                     u7650:
 16338     1E9B                     l7288:
 16339     1E9B  09F2               	comf	___awmod@dividend,f
 16340     1E9C  09F3               	comf	___awmod@dividend+1,f
 16341     1E9D  0AF2               	incf	___awmod@dividend,f
 16342     1E9E  1903               	skipnz
 16343     1E9F  0AF3               	incf	___awmod@dividend+1,f
 16344     1EA0                     l7290:
 16345     1EA0  0873               	movf	___awmod@dividend+1,w
 16346     1EA1  00F1               	movwf	?___awmod+1
 16347     1EA2  0872               	movf	___awmod@dividend,w
 16348     1EA3  00F0               	movwf	?___awmod
 16349     1EA4                     l2344:
 16350     1EA4  0008               	return
 16351     1EA5                     __end_of___awmod:
 16352                           
 16353                           	psect	text59
 16354     1844                     __ptext59:	
 16355 ;; *************** function _EEPROM_Write *****************
 16356 ;; Defined at:
 16357 ;;		line 22 in file "eeprom.c"
 16358 ;; Parameters:    Size  Location     Type
 16359 ;;  addr            1    wreg     unsigned char 
 16360 ;;  ptrValue        2    3[COMMON] PTR void 
 16361 ;;		 -> global$cal_point(4), MENU_var(13), global(30), 
 16362 ;;  size            1    5[COMMON] unsigned char 
 16363 ;; Auto vars:     Size  Location     Type
 16364 ;;  addr            1    6[COMMON] unsigned char 
 16365 ;;  ptr             1    7[COMMON] PTR unsigned char 
 16366 ;;		 -> global$cal_point(4), MENU_var(13), global(30), 
 16367 ;; Return value:  Size  Location     Type
 16368 ;;                  1    wreg      void 
 16369 ;; Registers used:
 16370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16371 ;; Tracked objects:
 16372 ;;		On entry : 0/0
 16373 ;;		On exit  : 0/0
 16374 ;;		Unchanged: 0/0
 16375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16376 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16377 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16379 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16380 ;;Total ram usage:        5 bytes
 16381 ;; Hardware stack levels used: 1
 16382 ;; Hardware stack levels required when called: 1
 16383 ;; This function calls:
 16384 ;;		_eeprom_write
 16385 ;; This function is called by:
 16386 ;;		_MENU_TParam_Run
 16387 ;;		_MENU_Sleep_Run
 16388 ;;		_MENU_CalPWR_Run
 16389 ;;		_MENU_NameEdit_Run
 16390 ;;		_MENU_StartupSave_Run
 16391 ;; This function uses a non-reentrant model
 16392 ;;
 16393                           
 16394     1844                     _EEPROM_Write:	
 16395                           ;psect for function _EEPROM_Write
 16396                           
 16397                           
 16398                           ;incstack = 0
 16399                           ; Regs used in _EEPROM_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16400                           ;EEPROM_Write@addr stored from wreg
 16401     1844  00F6               	movwf	EEPROM_Write@addr
 16402     1845                     l8292:
 16403                           
 16404                           ;eeprom.c: 22: void EEPROM_Write(uint8_t addr, void *ptrValue, uint8_t size);eeprom.c: 2
      +                          3: {;eeprom.c: 24:   uint8_t *ptr = ptrValue;
 16405     1845  0873               	movf	EEPROM_Write@ptrValue,w
 16406     1846  00F7               	movwf	EEPROM_Write@ptr
 16407                           
 16408                           ;eeprom.c: 25:     while(size >0)
 16409     1847  2857               	goto	l8302
 16410     1848                     l8294:
 16411                           
 16412                           ;eeprom.c: 26:     {;eeprom.c: 27:         eeprom_write(addr, *ptr);
 16413     1848  0877               	movf	EEPROM_Write@ptr,w
 16414     1849  0086               	movwf	6
 16415     184A  0187               	clrf	7
 16416     184B  0801               	movf	1,w
 16417     184C  00F0               	movwf	eeprom_write@value
 16418     184D  0876               	movf	EEPROM_Write@addr,w
 16419     184E  3198  20EA  3198   	fcall	_eeprom_write
 16420     1851                     l8296:
 16421                           
 16422                           ;eeprom.c: 28:         size--;
 16423     1851  3001               	movlw	1
 16424     1852  02F5               	subwf	EEPROM_Write@size,f
 16425     1853                     l8298:
 16426                           
 16427                           ;eeprom.c: 29:         addr++;
 16428     1853  3001               	movlw	1
 16429     1854  07F6               	addwf	EEPROM_Write@addr,f
 16430     1855                     l8300:
 16431                           
 16432                           ;eeprom.c: 30:         ptr++;
 16433     1855  3001               	movlw	1
 16434     1856  07F7               	addwf	EEPROM_Write@ptr,f
 16435     1857                     l8302:
 16436                           
 16437                           ;eeprom.c: 25:     while(size >0)
 16438     1857  0875               	movf	EEPROM_Write@size,w
 16439     1858  1D03               	btfss	3,2
 16440     1859  285B               	goto	u9641
 16441     185A  285C               	goto	u9640
 16442     185B                     u9641:
 16443     185B  2848               	goto	l8294
 16444     185C                     u9640:
 16445     185C                     l2041:
 16446     185C  0008               	return
 16447     185D                     __end_of_EEPROM_Write:
 16448                           
 16449                           	psect	text60
 16450     07F6                     __ptext60:	
 16451 ;; *************** function _MENU_Init *****************
 16452 ;; Defined at:
 16453 ;;		line 1367 in file "menu.c"
 16454 ;; Parameters:    Size  Location     Type
 16455 ;;		None
 16456 ;; Auto vars:     Size  Location     Type
 16457 ;;		None
 16458 ;; Return value:  Size  Location     Type
 16459 ;;                  1    wreg      void 
 16460 ;; Registers used:
 16461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16462 ;; Tracked objects:
 16463 ;;		On entry : 0/0
 16464 ;;		On exit  : 0/0
 16465 ;;		Unchanged: 0/0
 16466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16471 ;;Total ram usage:        0 bytes
 16472 ;; Hardware stack levels used: 1
 16473 ;; Hardware stack levels required when called: 1
 16474 ;; This function calls:
 16475 ;;		_MENU_Main_Init
 16476 ;; This function is called by:
 16477 ;;		_main
 16478 ;;		_MENU_Bypass_Init
 16479 ;;		_MENU_Tune_Run
 16480 ;;		_MENU_TParam_Run
 16481 ;;		_MENU_Sleep_Run
 16482 ;;		_MENU_RelTest_Run
 16483 ;;		_MENU_CalPWR_Run
 16484 ;;		_MENU_Sub_Run
 16485 ;;		_MENU_Memory_Run
 16486 ;;		_MENU_NameEdit_Run
 16487 ;;		_MENU_StartupSave_Run
 16488 ;;		_MENU_About_Run
 16489 ;; This function uses a non-reentrant model
 16490 ;;
 16491                           
 16492     07F6                     _MENU_Init:	
 16493                           ;psect for function _MENU_Init
 16494                           
 16495     07F6                     l7738:	
 16496                           ;incstack = 0
 16497                           ; Regs used in _MENU_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16498                           
 16499                           
 16500                           ;menu.c: 1369:   current_menu = (menu_t*) & menuMain;
 16501     07F6  308A               	movlw	low (_menuMain| (0+32768))
 16502     07F7  0020               	movlb	0	; select bank0
 16503     07F8  00D3               	movwf	_current_menu
 16504     07F9  30A9               	movlw	high (_menuMain| (0+32768))
 16505     07FA  00D4               	movwf	_current_menu+1
 16506     07FB                     l7740:
 16507                           
 16508                           ;menu.c: 1370:   MENU_Main_Init();
 16509     07FB  319A  22F8  3187   	fcall	_MENU_Main_Init
 16510     07FE                     l1500:
 16511     07FE  0008               	return
 16512     07FF                     __end_of_MENU_Init:
 16513                           
 16514                           	psect	text61
 16515     1813                     __ptext61:	
 16516 ;; *************** function _UTILI_Get_LC_Relays *****************
 16517 ;; Defined at:
 16518 ;;		line 64 in file "utili.c"
 16519 ;; Parameters:    Size  Location     Type
 16520 ;;		None
 16521 ;; Auto vars:     Size  Location     Type
 16522 ;;  relays          2    5[COMMON] unsigned short 
 16523 ;; Return value:  Size  Location     Type
 16524 ;;                  2    0[COMMON] unsigned short 
 16525 ;; Registers used:
 16526 ;;		wreg, status,2, status,0
 16527 ;; Tracked objects:
 16528 ;;		On entry : 0/0
 16529 ;;		On exit  : 0/0
 16530 ;;		Unchanged: 0/0
 16531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16534 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16535 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16536 ;;Total ram usage:        7 bytes
 16537 ;; Hardware stack levels used: 1
 16538 ;; Hardware stack levels required when called: 1
 16539 ;; This function calls:
 16540 ;;		Nothing
 16541 ;; This function is called by:
 16542 ;;		_MENU_Main_Init
 16543 ;;		_MENU_Main_Run
 16544 ;;		_MENU_Bypass_Init
 16545 ;;		_MENU_Tune_Init
 16546 ;;		_MENU_RelTest_Init
 16547 ;;		_MENU_NameEdit_Run
 16548 ;;		_MENU_StartupSave_Run
 16549 ;; This function uses a non-reentrant model
 16550 ;;
 16551                           
 16552     1813                     _UTILI_Get_LC_Relays:	
 16553                           ;psect for function _UTILI_Get_LC_Relays
 16554                           
 16555     1813                     l7450:	
 16556                           ;incstack = 0
 16557                           ; Regs used in _UTILI_Get_LC_Relays: [wreg+status,2+status,0]
 16558                           
 16559                           
 16560                           ;utili.c: 66:   uint16_t relays = (((uint16_t)global.cap_relays) << 8) + global.ind_rela
      +                          ys;
 16561     1813  0021               	movlb	1	; select bank1
 16562     1814  0859               	movf	(_global^(0+128)+28),w
 16563     1815  00F2               	movwf	??_UTILI_Get_LC_Relays
 16564     1816  01F3               	clrf	??_UTILI_Get_LC_Relays+1
 16565     1817  0872               	movf	??_UTILI_Get_LC_Relays,w
 16566     1818  00F3               	movwf	??_UTILI_Get_LC_Relays+1
 16567     1819  01F2               	clrf	??_UTILI_Get_LC_Relays
 16568     181A  085A               	movf	(_global^(0+128)+29),w
 16569     181B  0772               	addwf	??_UTILI_Get_LC_Relays,w
 16570     181C  00F5               	movwf	UTILI_Get_LC_Relays@relays
 16571     181D  3000               	movlw	0
 16572     181E  3D73               	addwfc	??_UTILI_Get_LC_Relays+1,w
 16573     181F  00F6               	movwf	UTILI_Get_LC_Relays@relays+1
 16574                           
 16575                           ;utili.c: 68:   if(global.cap_sw)
 16576     1820  0858               	movf	(_global^(0+128)+27),w
 16577     1821  1903               	btfsc	3,2
 16578     1822  2824               	goto	u7901
 16579     1823  2825               	goto	u7900
 16580     1824                     u7901:
 16581     1824  2826               	goto	l7454
 16582     1825                     u7900:
 16583     1825                     l7452:
 16584                           
 16585                           ;utili.c: 69:   {;utili.c: 70:     relays |= 0x8000;
 16586     1825  17F6               	bsf	UTILI_Get_LC_Relays@relays+1,7
 16587     1826                     l7454:
 16588                           
 16589                           ;utili.c: 72:   return(relays);
 16590     1826  0876               	movf	UTILI_Get_LC_Relays@relays+1,w
 16591     1827  00F1               	movwf	?_UTILI_Get_LC_Relays+1
 16592     1828  0875               	movf	UTILI_Get_LC_Relays@relays,w
 16593     1829  00F0               	movwf	?_UTILI_Get_LC_Relays
 16594     182A                     l487:
 16595     182A  0008               	return
 16596     182B                     __end_of_UTILI_Get_LC_Relays:
 16597                           
 16598                           	psect	text62
 16599     0D47                     __ptext62:	
 16600 ;; *************** function _DISP_Str *****************
 16601 ;; Defined at:
 16602 ;;		line 215 in file "disp.c"
 16603 ;; Parameters:    Size  Location     Type
 16604 ;;  col             1    wreg     unsigned char 
 16605 ;;  row             1    8[COMMON] unsigned char 
 16606 ;;  str             2    9[COMMON] PTR const unsigned char 
 16607 ;;		 -> MENU_var$tunemem(10), str_DG4SN(6), str_Firmware(9), str_YetAnother(9), 
 16608 ;;		 -> str_N7DCC(6), str_by(3), str_designed(9), str_Hardware(9), 
 16609 ;;		 -> MENU_StartupSave_Init@str_index(3), MENU_NameEdit_Init@str_index(3), MENU_var$tunemem$relays$str_name(8), MENU_v
      +ar$tunemem$relays(2), 
 16610 ;;		 -> MENU_Memory_Update@memory$str_name(8), MENU_Memory_Update@memory(11), MENU_Memory_Update@str_index(3), str_Ok(3)
      +, 
 16611 ;;		 -> str_Power(6), str_Point(6), MENU_CalPWR_Update@str(2), str_L_C(5), 
 16612 ;;		 -> str_C_L(5), MENU_RelTest_Update@str(7), str_Delay(6), str_Sleep(6), 
 16613 ;;		 -> MENU_Sleep_Update@str(4), str_Stop(5), str_Start(6), str_Auto(5), 
 16614 ;;		 -> str_Esc(4), str_Save(5), str_Off(4), str_On(4), 
 16615 ;;		 -> str__Tune_(9), STR_1(11), str_sleeping(1), MENU_var(13), 
 16616 ;;		 -> str_SWR(4), str_PWR(4), str_L_(3), MENU_Main_Update@str(7), 
 16617 ;;		 -> str_C_(3), str_Bypass(9), str_MENU_Cal(11), str_MENU_RelTest(11), 
 16618 ;;		 -> str_MENU_Sleep(11), str_MENU_TunePar(11), str_MENU_About(11), str_MENU_Load(11), 
 16619 ;;		 -> str_MENU_Save(11), str_MENU_Reset(11), str_MENU_Bypass(11), str_MENU_Setup(11), 
 16620 ;;		 -> NULL(0), DISP_SWR@str(5), DISP_PWR@str(5), DISP_Char@str(2), 
 16621 ;;		 -> str_Version(6), str_YAF(10), str_ATU100EXT(8), str_Ready(11), 
 16622 ;;		 -> str_PWR_low(11), str_Break(11), str_Running(11), str_WaitForHF(11), 
 16623 ;;		 -> str_SpaceLine(11), 
 16624 ;;  invert          1   11[COMMON] unsigned char 
 16625 ;; Auto vars:     Size  Location     Type
 16626 ;;  col             1    4[BANK0 ] unsigned char 
 16627 ;;  h               1   11[BANK0 ] unsigned char 
 16628 ;;  h               1   10[BANK0 ] unsigned char 
 16629 ;;  len             1    9[BANK0 ] unsigned char 
 16630 ;;  p               2   12[BANK0 ] PTR const unsigned char 
 16631 ;;		 -> MENU_var$tunemem(10), str_DG4SN(6), str_Firmware(9), str_YetAnother(9), 
 16632 ;;		 -> str_N7DCC(6), str_by(3), str_designed(9), str_Hardware(9), 
 16633 ;;		 -> MENU_StartupSave_Init@str_index(3), MENU_NameEdit_Init@str_index(3), MENU_var$tunemem$relays$str_name(8), MENU_v
      +ar$tunemem$relays(2), 
 16634 ;;		 -> MENU_Memory_Update@memory$str_name(8), MENU_Memory_Update@memory(11), MENU_Memory_Update@str_index(3), str_Ok(3)
      +, 
 16635 ;;		 -> str_Power(6), str_Point(6), MENU_CalPWR_Update@str(2), str_L_C(5), 
 16636 ;;		 -> str_C_L(5), MENU_RelTest_Update@str(7), str_Delay(6), str_Sleep(6), 
 16637 ;;		 -> MENU_Sleep_Update@str(4), str_Stop(5), str_Start(6), str_Auto(5), 
 16638 ;;		 -> str_Esc(4), str_Save(5), str_Off(4), str_On(4), 
 16639 ;;		 -> str__Tune_(9), STR_1(11), str_sleeping(1), MENU_var(13), 
 16640 ;;		 -> str_SWR(4), str_PWR(4), str_L_(3), MENU_Main_Update@str(7), 
 16641 ;;		 -> str_C_(3), str_Bypass(9), str_MENU_Cal(11), str_MENU_RelTest(11), 
 16642 ;;		 -> str_MENU_Sleep(11), str_MENU_TunePar(11), str_MENU_About(11), str_MENU_Load(11), 
 16643 ;;		 -> str_MENU_Save(11), str_MENU_Reset(11), str_MENU_Bypass(11), str_MENU_Setup(11), 
 16644 ;;		 -> NULL(0), DISP_SWR@str(5), DISP_PWR@str(5), DISP_Char@str(2), 
 16645 ;;		 -> str_Version(6), str_YAF(10), str_ATU100EXT(8), str_Ready(11), 
 16646 ;;		 -> str_PWR_low(11), str_Break(11), str_Running(11), str_WaitForHF(11), 
 16647 ;;		 -> str_SpaceLine(11), 
 16648 ;;  fpos            2    6[BANK0 ] unsigned short 
 16649 ;;  x               1   16[BANK0 ] struct .
 16650 ;;  y               1   15[BANK0 ] struct .
 16651 ;;  empty           1   14[BANK0 ] unsigned char 
 16652 ;;  start           1    8[BANK0 ] unsigned char 
 16653 ;;  page            1    5[BANK0 ] unsigned char 
 16654 ;; Return value:  Size  Location     Type
 16655 ;;                  1    wreg      void 
 16656 ;; Registers used:
 16657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16658 ;; Tracked objects:
 16659 ;;		On entry : 0/0
 16660 ;;		On exit  : 0/0
 16661 ;;		Unchanged: 0/0
 16662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16664 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16665 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16666 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16667 ;;Total ram usage:       21 bytes
 16668 ;; Hardware stack levels used: 1
 16669 ;; Hardware stack levels required when called: 1
 16670 ;; This function calls:
 16671 ;;		_DISP_DataAddress
 16672 ;;		_I2C_Stop
 16673 ;;		_I2C_Write
 16674 ;;		___awdiv
 16675 ;;		___bmul
 16676 ;;		___wmul
 16677 ;; This function is called by:
 16678 ;;		_main
 16679 ;;		_DISP_Char
 16680 ;;		_DISP_PWR
 16681 ;;		_DISP_SWR
 16682 ;;		_MENU_Main_Update
 16683 ;;		_MENU_Main_Init
 16684 ;;		_MENU_Main_Run
 16685 ;;		_MENU_Reset_Init
 16686 ;;		_MENU_Tune_Update
 16687 ;;		_MENU_Tune_Init
 16688 ;;		_MENU_TParam_Update
 16689 ;;		_MENU_TParam_Init
 16690 ;;		_MENU_Sleep_Update
 16691 ;;		_MENU_Sleep_Init
 16692 ;;		_MENU_RelTest_Update
 16693 ;;		_MENU_CalPWR_Update
 16694 ;;		_MENU_CalPWR_Run
 16695 ;;		_MENU_Sub_Update
 16696 ;;		_MENU_Memory_Update
 16697 ;;		_MENU_MemoryLoad_Init
 16698 ;;		_MENU_MemorySave_Init
 16699 ;;		_MENU_NameEdit_Update
 16700 ;;		_MENU_NameEdit_Init
 16701 ;;		_MENU_StartupSave_Update
 16702 ;;		_MENU_StartupSave_Init
 16703 ;;		_MENU_About_Init
 16704 ;;		_MENU_About_Run
 16705 ;; This function uses a non-reentrant model
 16706 ;;
 16707                           
 16708     0D47                     _DISP_Str:	
 16709                           ;psect for function _DISP_Str
 16710                           
 16711                           
 16712                           ;incstack = 0
 16713                           ; Regs used in _DISP_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16714                           ;DISP_Str@col stored from wreg
 16715     0D47  0020               	movlb	0	; select bank0
 16716     0D48  00A4               	movwf	DISP_Str@col
 16717     0D49                     l7294:
 16718                           
 16719                           ;disp.c: 215: void DISP_Str(uint8_t col, uint8_t row, const char *str, uint8_t invert);d
      +                          isp.c: 216: {;disp.c: 217:   const char *p;;disp.c: 218:   bitfield_t x, y;;disp.c: 219:
      +                             uint8_t page;;disp.c: 220:   uint8_t start;;disp.c: 221:   uint8_t empty;;disp.c: 222
      +                          :   uint16_t fpos;;disp.c: 224:   if (invert) empty = 0xff;
 16720     0D49  087B               	movf	DISP_Str@invert,w
 16721     0D4A  1903               	btfsc	3,2
 16722     0D4B  2D4D               	goto	u7661
 16723     0D4C  2D4E               	goto	u7660
 16724     0D4D                     u7661:
 16725     0D4D  2D51               	goto	l7298
 16726     0D4E                     u7660:
 16727     0D4E                     l7296:
 16728     0D4E  30FF               	movlw	255
 16729     0D4F  00AE               	movwf	DISP_Str@empty
 16730     0D50  2D52               	goto	l7300
 16731     0D51                     l7298:
 16732     0D51  01AE               	clrf	DISP_Str@empty
 16733     0D52                     l7300:
 16734                           
 16735                           ;disp.c: 228:   page = row * 2;
 16736     0D52  3578               	lslf	DISP_Str@row,w
 16737     0D53  00A5               	movwf	DISP_Str@page
 16738     0D54                     l7302:
 16739                           
 16740                           ;disp.c: 230:   if (col == 0x80)
 16741     0D54  3080               	movlw	128
 16742     0D55  0624               	xorwf	DISP_Str@col,w
 16743     0D56  1D03               	btfss	3,2
 16744     0D57  2D59               	goto	u7671
 16745     0D58  2D5A               	goto	u7670
 16746     0D59                     u7671:
 16747     0D59  2D8A               	goto	l7316
 16748     0D5A                     u7670:
 16749     0D5A                     l7304:
 16750                           
 16751                           ;disp.c: 231:   {;disp.c: 232:     uint8_t len = 0;
 16752     0D5A  01A9               	clrf	DISP_Str@len
 16753     0D5B                     l7306:
 16754                           
 16755                           ;disp.c: 234:     p = str;
 16756     0D5B  087A               	movf	DISP_Str@str+1,w
 16757     0D5C  00AD               	movwf	DISP_Str@p+1
 16758     0D5D  0879               	movf	DISP_Str@str,w
 16759     0D5E  00AC               	movwf	DISP_Str@p
 16760                           
 16761                           ;disp.c: 235:     while (*p != 0)
 16762     0D5F  2D66               	goto	l7312
 16763     0D60                     l7308:
 16764                           
 16765                           ;disp.c: 236:     {;disp.c: 237:       len++;
 16766     0D60  3001               	movlw	1
 16767     0D61  07A9               	addwf	DISP_Str@len,f
 16768     0D62                     l7310:
 16769                           
 16770                           ;disp.c: 238:       p++;
 16771     0D62  3001               	movlw	1
 16772     0D63  07AC               	addwf	DISP_Str@p,f
 16773     0D64  3000               	movlw	0
 16774     0D65  3DAD               	addwfc	DISP_Str@p+1,f
 16775     0D66                     l7312:
 16776                           
 16777                           ;disp.c: 235:     while (*p != 0)
 16778     0D66  082C               	movf	DISP_Str@p,w
 16779     0D67  0084               	movwf	4
 16780     0D68  082D               	movf	DISP_Str@p+1,w
 16781     0D69  0085               	movwf	5
 16782     0D6A  0012               	moviw fsr0++
 16783     0D6B  1D03               	btfss	3,2
 16784     0D6C  2D6E               	goto	u7681
 16785     0D6D  2D6F               	goto	u7680
 16786     0D6E                     u7681:
 16787     0D6E  2D60               	goto	l7308
 16788     0D6F                     u7680:
 16789     0D6F                     l7314:
 16790                           
 16791                           ;disp.c: 242:     len = len * (2 * (5+1));
 16792     0D6F  300C               	movlw	12
 16793     0D70  00F0               	movwf	___bmul@multiplicand
 16794     0D71  0829               	movf	DISP_Str@len,w
 16795     0D72  31A7  2745  318D   	fcall	___bmul
 16796     0D75  0020               	movlb	0	; select bank0
 16797     0D76  00A9               	movwf	DISP_Str@len
 16798                           
 16799                           ;disp.c: 243:     start = (128 - len) / 2;
 16800     0D77  3002               	movlw	2
 16801     0D78  00F0               	movwf	___awdiv@divisor
 16802     0D79  3000               	movlw	0
 16803     0D7A  00F1               	movwf	___awdiv@divisor+1
 16804     0D7B  3080               	movlw	128
 16805     0D7C  00A0               	movwf	??_DISP_Str
 16806     0D7D  0829               	movf	DISP_Str@len,w
 16807     0D7E  0220               	subwf	??_DISP_Str,w
 16808     0D7F  00F2               	movwf	___awdiv@dividend
 16809     0D80  01F3               	clrf	___awdiv@dividend+1
 16810     0D81  1C03               	skipc
 16811     0D82  03F3               	decf	___awdiv@dividend+1,f
 16812     0D83  3191  2122  318D   	fcall	___awdiv
 16813     0D86  0870               	movf	?___awdiv,w
 16814     0D87  0020               	movlb	0	; select bank0
 16815     0D88  00A8               	movwf	DISP_Str@start
 16816                           
 16817                           ;disp.c: 245:   }
 16818     0D89  2D92               	goto	l733
 16819     0D8A                     l7316:
 16820                           
 16821                           ;disp.c: 247:   {;disp.c: 248:     start = col * (2 * (5+1));
 16822     0D8A  300C               	movlw	12
 16823     0D8B  00F0               	movwf	___bmul@multiplicand
 16824     0D8C  0824               	movf	DISP_Str@col,w
 16825     0D8D  31A7  2745  318D   	fcall	___bmul
 16826     0D90  0020               	movlb	0	; select bank0
 16827     0D91  00A8               	movwf	DISP_Str@start
 16828     0D92                     l733:	
 16829                           ;disp.c: 249:   }
 16830                           
 16831                           
 16832                           ;disp.c: 252:   DISP_DataAddress(page, start);
 16833     0D92  0828               	movf	DISP_Str@start,w
 16834     0D93  00F2               	movwf	DISP_DataAddress@start
 16835     0D94  0825               	movf	DISP_Str@page,w
 16836     0D95  319A  2297  318D   	fcall	_DISP_DataAddress
 16837     0D98                     l7318:
 16838                           
 16839                           ;disp.c: 254:   p = str;
 16840     0D98  087A               	movf	DISP_Str@str+1,w
 16841     0D99  0020               	movlb	0	; select bank0
 16842     0D9A  00AD               	movwf	DISP_Str@p+1
 16843     0D9B  0879               	movf	DISP_Str@str,w
 16844     0D9C  00AC               	movwf	DISP_Str@p
 16845                           
 16846                           ;disp.c: 255:   while (*p != 0)
 16847     0D9D  2E0F               	goto	l7360
 16848     0D9E                     l7320:
 16849                           
 16850                           ;disp.c: 256:   {;disp.c: 257:     fpos = (*p - 32) * 5;
 16851     0D9E  082C               	movf	DISP_Str@p,w
 16852     0D9F  0084               	movwf	4
 16853     0DA0  082D               	movf	DISP_Str@p+1,w
 16854     0DA1  0085               	movwf	5
 16855     0DA2  0800               	movf	0,w	;code access
 16856     0DA3  3EE0               	addlw	224
 16857     0DA4  00F0               	movwf	___wmul@multiplier
 16858     0DA5  30FF               	movlw	255
 16859     0DA6  1803               	skipnc
 16860     0DA7  3000               	movlw	0
 16861     0DA8  00F1               	movwf	___wmul@multiplier+1
 16862     0DA9  3005               	movlw	5
 16863     0DAA  00F2               	movwf	___wmul@multiplicand
 16864     0DAB  3000               	movlw	0
 16865     0DAC  00F3               	movwf	___wmul@multiplicand+1
 16866     0DAD  3199  2108  318D   	fcall	___wmul
 16867     0DB0  0871               	movf	?___wmul+1,w
 16868     0DB1  0020               	movlb	0	; select bank0
 16869     0DB2  00A7               	movwf	DISP_Str@fpos+1
 16870     0DB3  0870               	movf	?___wmul,w
 16871     0DB4  00A6               	movwf	DISP_Str@fpos
 16872     0DB5                     l7322:
 16873                           
 16874                           ;disp.c: 258:     for (uint8_t h = 0; h < 5; h++)
 16875     0DB5  01AA               	clrf	DISP_Str@h
 16876     0DB6                     l7328:
 16877                           
 16878                           ;disp.c: 259:     {;disp.c: 260:       x.byte = font5x8[fpos + h];
 16879     0DB6  307F               	movlw	low (_font5x8| (0+32768))
 16880     0DB7  00A0               	movwf	??_DISP_Str
 16881     0DB8  3083               	movlw	high (_font5x8| (0+32768))
 16882     0DB9  00A1               	movwf	??_DISP_Str+1
 16883     0DBA  082A               	movf	DISP_Str@h,w
 16884     0DBB  0720               	addwf	??_DISP_Str,w
 16885     0DBC  00A2               	movwf	??_DISP_Str+2
 16886     0DBD  3000               	movlw	0
 16887     0DBE  3D21               	addwfc	??_DISP_Str+1,w
 16888     0DBF  00A3               	movwf	??_DISP_Str+3
 16889     0DC0  0822               	movf	??_DISP_Str+2,w
 16890     0DC1  0726               	addwf	DISP_Str@fpos,w
 16891     0DC2  0084               	movwf	4
 16892     0DC3  0823               	movf	??_DISP_Str+3,w
 16893     0DC4  3D27               	addwfc	DISP_Str@fpos+1,w
 16894     0DC5  0085               	movwf	5
 16895     0DC6  0800               	movf	0,w	;code access
 16896     0DC7  00B0               	movwf	DISP_Str@x
 16897     0DC8                     l7330:
 16898                           
 16899                           ;disp.c: 262:       y.bits.B7 = x.bits.B3;
 16900     0DC8  13AF               	bcf	DISP_Str@y,7
 16901     0DC9  1DB0               	btfss	DISP_Str@x,3
 16902     0DCA  2DCC               	goto	u7695
 16903     0DCB  17AF               	bsf	DISP_Str@y,7
 16904     0DCC                     u7695:
 16905     0DCC                     l7332:
 16906                           
 16907                           ;disp.c: 263:       y.bits.B6 = x.bits.B2;
 16908     0DCC  0020               	movlb	0	; select bank0
 16909     0DCD  132F               	bcf	DISP_Str@y,6
 16910     0DCE  1D30               	btfss	DISP_Str@x,2
 16911     0DCF  2DD1               	goto	u7705
 16912     0DD0  172F               	bsf	DISP_Str@y,6
 16913     0DD1                     u7705:
 16914     0DD1                     l7334:
 16915                           
 16916                           ;disp.c: 264:       y.bits.B5 = x.bits.B2;
 16917     0DD1  0020               	movlb	0	; select bank0
 16918     0DD2  12AF               	bcf	DISP_Str@y,5
 16919     0DD3  1D30               	btfss	DISP_Str@x,2
 16920     0DD4  2DD6               	goto	u7715
 16921     0DD5  16AF               	bsf	DISP_Str@y,5
 16922     0DD6                     u7715:
 16923     0DD6                     l7336:
 16924                           
 16925                           ;disp.c: 265:       y.bits.B4 = x.bits.B1;
 16926     0DD6  0020               	movlb	0	; select bank0
 16927     0DD7  122F               	bcf	DISP_Str@y,4
 16928     0DD8  1CB0               	btfss	DISP_Str@x,1
 16929     0DD9  2DDB               	goto	u7725
 16930     0DDA  162F               	bsf	DISP_Str@y,4
 16931     0DDB                     u7725:
 16932     0DDB                     l7338:
 16933                           
 16934                           ;disp.c: 266:       y.bits.B3 = x.bits.B1;
 16935     0DDB  0020               	movlb	0	; select bank0
 16936     0DDC  11AF               	bcf	DISP_Str@y,3
 16937     0DDD  1CB0               	btfss	DISP_Str@x,1
 16938     0DDE  2DE0               	goto	u7735
 16939     0DDF  15AF               	bsf	DISP_Str@y,3
 16940     0DE0                     u7735:
 16941     0DE0                     l7340:
 16942                           
 16943                           ;disp.c: 267:       y.bits.B2 = x.bits.B0;
 16944     0DE0  0020               	movlb	0	; select bank0
 16945     0DE1  112F               	bcf	DISP_Str@y,2
 16946     0DE2  1C30               	btfss	DISP_Str@x,0
 16947     0DE3  2DE5               	goto	u7745
 16948     0DE4  152F               	bsf	DISP_Str@y,2
 16949     0DE5                     u7745:
 16950     0DE5                     l7342:
 16951                           
 16952                           ;disp.c: 268:       y.bits.B1 = x.bits.B0;
 16953     0DE5  0020               	movlb	0	; select bank0
 16954     0DE6  10AF               	bcf	DISP_Str@y,1
 16955     0DE7  1C30               	btfss	DISP_Str@x,0
 16956     0DE8  2DEA               	goto	u7755
 16957     0DE9  14AF               	bsf	DISP_Str@y,1
 16958     0DEA                     u7755:
 16959     0DEA                     l7344:
 16960                           
 16961                           ;disp.c: 269:       y.bits.B0 = 0;
 16962     0DEA  0020               	movlb	0	; select bank0
 16963     0DEB  102F               	bcf	DISP_Str@y,0
 16964     0DEC                     l7346:
 16965                           
 16966                           ;disp.c: 271:       y.byte = y.byte ^ empty;
 16967     0DEC  082F               	movf	DISP_Str@y,w
 16968     0DED  062E               	xorwf	DISP_Str@empty,w
 16969     0DEE  00AF               	movwf	DISP_Str@y
 16970     0DEF                     l7348:
 16971                           
 16972                           ;disp.c: 272:       I2C_Write(y.byte);
 16973     0DEF  082F               	movf	DISP_Str@y,w
 16974     0DF0  319C  249B  318D   	fcall	_I2C_Write
 16975     0DF3                     l7350:
 16976                           
 16977                           ;disp.c: 273:       I2C_Write(y.byte);
 16978     0DF3  0020               	movlb	0	; select bank0
 16979     0DF4  082F               	movf	DISP_Str@y,w
 16980     0DF5  319C  249B  318D   	fcall	_I2C_Write
 16981     0DF8                     l7352:
 16982                           
 16983                           ;disp.c: 274:     }
 16984     0DF8  3001               	movlw	1
 16985     0DF9  0020               	movlb	0	; select bank0
 16986     0DFA  07AA               	addwf	DISP_Str@h,f
 16987     0DFB                     l7354:
 16988     0DFB  3005               	movlw	5
 16989     0DFC  022A               	subwf	DISP_Str@h,w
 16990     0DFD  1C03               	skipc
 16991     0DFE  2E00               	goto	u7761
 16992     0DFF  2E01               	goto	u7760
 16993     0E00                     u7761:
 16994     0E00  2DB6               	goto	l7328
 16995     0E01                     u7760:
 16996     0E01                     l7356:
 16997                           
 16998                           ;disp.c: 275:     I2C_Write(empty);
 16999     0E01  082E               	movf	DISP_Str@empty,w
 17000     0E02  319C  249B  318D   	fcall	_I2C_Write
 17001                           
 17002                           ;disp.c: 276:     I2C_Write(empty);
 17003     0E05  0020               	movlb	0	; select bank0
 17004     0E06  082E               	movf	DISP_Str@empty,w
 17005     0E07  319C  249B  318D   	fcall	_I2C_Write
 17006     0E0A                     l7358:
 17007                           
 17008                           ;disp.c: 277:     p++;
 17009     0E0A  3001               	movlw	1
 17010     0E0B  0020               	movlb	0	; select bank0
 17011     0E0C  07AC               	addwf	DISP_Str@p,f
 17012     0E0D  3000               	movlw	0
 17013     0E0E  3DAD               	addwfc	DISP_Str@p+1,f
 17014     0E0F                     l7360:
 17015                           
 17016                           ;disp.c: 255:   while (*p != 0)
 17017     0E0F  082C               	movf	DISP_Str@p,w
 17018     0E10  0084               	movwf	4
 17019     0E11  082D               	movf	DISP_Str@p+1,w
 17020     0E12  0085               	movwf	5
 17021     0E13  0012               	moviw fsr0++
 17022     0E14  1D03               	btfss	3,2
 17023     0E15  2E17               	goto	u7771
 17024     0E16  2E18               	goto	u7770
 17025     0E17                     u7771:
 17026     0E17  2D9E               	goto	l7320
 17027     0E18                     u7770:
 17028     0E18                     l7362:
 17029                           
 17030                           ;disp.c: 282:   DISP_DataAddress(page + 1, start);
 17031     0E18  0828               	movf	DISP_Str@start,w
 17032     0E19  00F2               	movwf	DISP_DataAddress@start
 17033     0E1A  0825               	movf	DISP_Str@page,w
 17034     0E1B  3E01               	addlw	1
 17035     0E1C  319A  2297  318D   	fcall	_DISP_DataAddress
 17036     0E1F                     l7364:
 17037                           
 17038                           ;disp.c: 283:   p = str;
 17039     0E1F  087A               	movf	DISP_Str@str+1,w
 17040     0E20  0020               	movlb	0	; select bank0
 17041     0E21  00AD               	movwf	DISP_Str@p+1
 17042     0E22  0879               	movf	DISP_Str@str,w
 17043     0E23  00AC               	movwf	DISP_Str@p
 17044                           
 17045                           ;disp.c: 284:   while (*p != 0)
 17046     0E24  2E96               	goto	l7406
 17047     0E25                     l7366:
 17048                           
 17049                           ;disp.c: 285:   {;disp.c: 286:     fpos = (*p - 32) * 5;
 17050     0E25  082C               	movf	DISP_Str@p,w
 17051     0E26  0084               	movwf	4
 17052     0E27  082D               	movf	DISP_Str@p+1,w
 17053     0E28  0085               	movwf	5
 17054     0E29  0800               	movf	0,w	;code access
 17055     0E2A  3EE0               	addlw	224
 17056     0E2B  00F0               	movwf	___wmul@multiplier
 17057     0E2C  30FF               	movlw	255
 17058     0E2D  1803               	skipnc
 17059     0E2E  3000               	movlw	0
 17060     0E2F  00F1               	movwf	___wmul@multiplier+1
 17061     0E30  3005               	movlw	5
 17062     0E31  00F2               	movwf	___wmul@multiplicand
 17063     0E32  3000               	movlw	0
 17064     0E33  00F3               	movwf	___wmul@multiplicand+1
 17065     0E34  3199  2108  318D   	fcall	___wmul
 17066     0E37  0871               	movf	?___wmul+1,w
 17067     0E38  0020               	movlb	0	; select bank0
 17068     0E39  00A7               	movwf	DISP_Str@fpos+1
 17069     0E3A  0870               	movf	?___wmul,w
 17070     0E3B  00A6               	movwf	DISP_Str@fpos
 17071     0E3C                     l7368:
 17072                           
 17073                           ;disp.c: 287:     for (uint8_t h = 0; h < 5; h++)
 17074     0E3C  01AB               	clrf	DISP_Str@h_1074
 17075     0E3D                     l7374:
 17076                           
 17077                           ;disp.c: 288:     {;disp.c: 289:       x.byte = font5x8[fpos + h];
 17078     0E3D  307F               	movlw	low (_font5x8| (0+32768))
 17079     0E3E  00A0               	movwf	??_DISP_Str
 17080     0E3F  3083               	movlw	high (_font5x8| (0+32768))
 17081     0E40  00A1               	movwf	??_DISP_Str+1
 17082     0E41  082B               	movf	DISP_Str@h_1074,w
 17083     0E42  0720               	addwf	??_DISP_Str,w
 17084     0E43  00A2               	movwf	??_DISP_Str+2
 17085     0E44  3000               	movlw	0
 17086     0E45  3D21               	addwfc	??_DISP_Str+1,w
 17087     0E46  00A3               	movwf	??_DISP_Str+3
 17088     0E47  0822               	movf	??_DISP_Str+2,w
 17089     0E48  0726               	addwf	DISP_Str@fpos,w
 17090     0E49  0084               	movwf	4
 17091     0E4A  0823               	movf	??_DISP_Str+3,w
 17092     0E4B  3D27               	addwfc	DISP_Str@fpos+1,w
 17093     0E4C  0085               	movwf	5
 17094     0E4D  0800               	movf	0,w	;code access
 17095     0E4E  00B0               	movwf	DISP_Str@x
 17096     0E4F                     l7376:
 17097                           
 17098                           ;disp.c: 290:       y.bits.B7 = 0;
 17099     0E4F  13AF               	bcf	DISP_Str@y,7
 17100     0E50                     l7378:
 17101                           
 17102                           ;disp.c: 291:       y.bits.B6 = x.bits.B6;
 17103     0E50  132F               	bcf	DISP_Str@y,6
 17104     0E51  1F30               	btfss	DISP_Str@x,6
 17105     0E52  2E54               	goto	u7785
 17106     0E53  172F               	bsf	DISP_Str@y,6
 17107     0E54                     u7785:
 17108     0E54                     l7380:
 17109                           
 17110                           ;disp.c: 292:       y.bits.B5 = x.bits.B6;
 17111     0E54  0020               	movlb	0	; select bank0
 17112     0E55  12AF               	bcf	DISP_Str@y,5
 17113     0E56  1F30               	btfss	DISP_Str@x,6
 17114     0E57  2E59               	goto	u7795
 17115     0E58  16AF               	bsf	DISP_Str@y,5
 17116     0E59                     u7795:
 17117     0E59                     l7382:
 17118                           
 17119                           ;disp.c: 293:       y.bits.B4 = x.bits.B5;
 17120     0E59  0020               	movlb	0	; select bank0
 17121     0E5A  122F               	bcf	DISP_Str@y,4
 17122     0E5B  1EB0               	btfss	DISP_Str@x,5
 17123     0E5C  2E5E               	goto	u7805
 17124     0E5D  162F               	bsf	DISP_Str@y,4
 17125     0E5E                     u7805:
 17126     0E5E                     l7384:
 17127                           
 17128                           ;disp.c: 294:       y.bits.B3 = x.bits.B5;
 17129     0E5E  0020               	movlb	0	; select bank0
 17130     0E5F  11AF               	bcf	DISP_Str@y,3
 17131     0E60  1EB0               	btfss	DISP_Str@x,5
 17132     0E61  2E63               	goto	u7815
 17133     0E62  15AF               	bsf	DISP_Str@y,3
 17134     0E63                     u7815:
 17135     0E63                     l7386:
 17136                           
 17137                           ;disp.c: 295:       y.bits.B2 = x.bits.B4;
 17138     0E63  0020               	movlb	0	; select bank0
 17139     0E64  112F               	bcf	DISP_Str@y,2
 17140     0E65  1E30               	btfss	DISP_Str@x,4
 17141     0E66  2E68               	goto	u7825
 17142     0E67  152F               	bsf	DISP_Str@y,2
 17143     0E68                     u7825:
 17144     0E68                     l7388:
 17145                           
 17146                           ;disp.c: 296:       y.bits.B1 = x.bits.B4;
 17147     0E68  0020               	movlb	0	; select bank0
 17148     0E69  10AF               	bcf	DISP_Str@y,1
 17149     0E6A  1E30               	btfss	DISP_Str@x,4
 17150     0E6B  2E6D               	goto	u7835
 17151     0E6C  14AF               	bsf	DISP_Str@y,1
 17152     0E6D                     u7835:
 17153     0E6D                     l7390:
 17154                           
 17155                           ;disp.c: 297:       y.bits.B0 = x.bits.B3;
 17156     0E6D  0020               	movlb	0	; select bank0
 17157     0E6E  102F               	bcf	DISP_Str@y,0
 17158     0E6F  1DB0               	btfss	DISP_Str@x,3
 17159     0E70  2E72               	goto	u7845
 17160     0E71  142F               	bsf	DISP_Str@y,0
 17161     0E72                     u7845:
 17162     0E72                     l7392:
 17163                           
 17164                           ;disp.c: 299:       y.byte = y.byte ^ empty;
 17165     0E72  0020               	movlb	0	; select bank0
 17166     0E73  082F               	movf	DISP_Str@y,w
 17167     0E74  062E               	xorwf	DISP_Str@empty,w
 17168     0E75  00AF               	movwf	DISP_Str@y
 17169     0E76                     l7394:
 17170                           
 17171                           ;disp.c: 300:       I2C_Write(y.byte);
 17172     0E76  082F               	movf	DISP_Str@y,w
 17173     0E77  319C  249B  318D   	fcall	_I2C_Write
 17174     0E7A                     l7396:
 17175                           
 17176                           ;disp.c: 301:       I2C_Write(y.byte);
 17177     0E7A  0020               	movlb	0	; select bank0
 17178     0E7B  082F               	movf	DISP_Str@y,w
 17179     0E7C  319C  249B  318D   	fcall	_I2C_Write
 17180     0E7F                     l7398:
 17181                           
 17182                           ;disp.c: 303:     }
 17183     0E7F  3001               	movlw	1
 17184     0E80  0020               	movlb	0	; select bank0
 17185     0E81  07AB               	addwf	DISP_Str@h_1074,f
 17186     0E82                     l7400:
 17187     0E82  3005               	movlw	5
 17188     0E83  022B               	subwf	DISP_Str@h_1074,w
 17189     0E84  1C03               	skipc
 17190     0E85  2E87               	goto	u7851
 17191     0E86  2E88               	goto	u7850
 17192     0E87                     u7851:
 17193     0E87  2E3D               	goto	l7374
 17194     0E88                     u7850:
 17195     0E88                     l7402:
 17196                           
 17197                           ;disp.c: 304:     I2C_Write(empty);
 17198     0E88  082E               	movf	DISP_Str@empty,w
 17199     0E89  319C  249B  318D   	fcall	_I2C_Write
 17200                           
 17201                           ;disp.c: 305:     I2C_Write(empty);
 17202     0E8C  0020               	movlb	0	; select bank0
 17203     0E8D  082E               	movf	DISP_Str@empty,w
 17204     0E8E  319C  249B  318D   	fcall	_I2C_Write
 17205     0E91                     l7404:
 17206                           
 17207                           ;disp.c: 306:     p++;
 17208     0E91  3001               	movlw	1
 17209     0E92  0020               	movlb	0	; select bank0
 17210     0E93  07AC               	addwf	DISP_Str@p,f
 17211     0E94  3000               	movlw	0
 17212     0E95  3DAD               	addwfc	DISP_Str@p+1,f
 17213     0E96                     l7406:
 17214                           
 17215                           ;disp.c: 284:   while (*p != 0)
 17216     0E96  082C               	movf	DISP_Str@p,w
 17217     0E97  0084               	movwf	4
 17218     0E98  082D               	movf	DISP_Str@p+1,w
 17219     0E99  0085               	movwf	5
 17220     0E9A  0012               	moviw fsr0++
 17221     0E9B  1D03               	btfss	3,2
 17222     0E9C  2E9E               	goto	u7861
 17223     0E9D  2E9F               	goto	u7860
 17224     0E9E                     u7861:
 17225     0E9E  2E25               	goto	l7366
 17226     0E9F                     u7860:
 17227     0E9F                     l7408:
 17228                           
 17229                           ;disp.c: 309:   I2C_Stop();
 17230     0E9F  31A7  2732  318D   	fcall	_I2C_Stop
 17231     0EA2                     l744:
 17232     0EA2  0008               	return
 17233     0EA3                     __end_of_DISP_Str:
 17234                           
 17235                           	psect	text63
 17236     1908                     __ptext63:	
 17237 ;; *************** function ___wmul *****************
 17238 ;; Defined at:
 17239 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\Umul16.c"
 17240 ;; Parameters:    Size  Location     Type
 17241 ;;  multiplier      2    0[COMMON] unsigned int 
 17242 ;;  multiplicand    2    2[COMMON] unsigned int 
 17243 ;; Auto vars:     Size  Location     Type
 17244 ;;  product         2    4[COMMON] unsigned int 
 17245 ;; Return value:  Size  Location     Type
 17246 ;;                  2    0[COMMON] unsigned int 
 17247 ;; Registers used:
 17248 ;;		wreg, status,2, status,0
 17249 ;; Tracked objects:
 17250 ;;		On entry : 0/0
 17251 ;;		On exit  : 0/0
 17252 ;;		Unchanged: 0/0
 17253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17257 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17258 ;;Total ram usage:        6 bytes
 17259 ;; Hardware stack levels used: 1
 17260 ;; Hardware stack levels required when called: 1
 17261 ;; This function calls:
 17262 ;;		Nothing
 17263 ;; This function is called by:
 17264 ;;		_DISP_Str
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268     1908                     ___wmul:	
 17269                           ;psect for function ___wmul
 17270                           
 17271     1908                     l7184:	
 17272                           ;incstack = 0
 17273                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 17274                           
 17275     1908  01F4               	clrf	___wmul@product
 17276     1909  01F5               	clrf	___wmul@product+1
 17277     190A                     l7186:
 17278     190A  1C70               	btfss	___wmul@multiplier,0
 17279     190B  290D               	goto	u7411
 17280     190C  290E               	goto	u7410
 17281     190D                     u7411:
 17282     190D  2912               	goto	l2178
 17283     190E                     u7410:
 17284     190E                     l7188:
 17285     190E  0872               	movf	___wmul@multiplicand,w
 17286     190F  07F4               	addwf	___wmul@product,f
 17287     1910  0873               	movf	___wmul@multiplicand+1,w
 17288     1911  3DF5               	addwfc	___wmul@product+1,f
 17289     1912                     l2178:
 17290     1912  3001               	movlw	1
 17291     1913                     u7425:
 17292     1913  35F2               	lslf	___wmul@multiplicand,f
 17293     1914  0DF3               	rlf	___wmul@multiplicand+1,f
 17294     1915  0B89               	decfsz	9,f
 17295     1916  2913               	goto	u7425
 17296     1917                     l7190:
 17297     1917  3001               	movlw	1
 17298     1918                     u7435:
 17299     1918  36F1               	lsrf	___wmul@multiplier+1,f
 17300     1919  0CF0               	rrf	___wmul@multiplier,f
 17301     191A  0B89               	decfsz	9,f
 17302     191B  2918               	goto	u7435
 17303     191C                     l7192:
 17304     191C  0870               	movf	___wmul@multiplier,w
 17305     191D  0471               	iorwf	___wmul@multiplier+1,w
 17306     191E  1D03               	btfss	3,2
 17307     191F  2921               	goto	u7441
 17308     1920  2922               	goto	u7440
 17309     1921                     u7441:
 17310     1921  290A               	goto	l7186
 17311     1922                     u7440:
 17312     1922                     l7194:
 17313     1922  0875               	movf	___wmul@product+1,w
 17314     1923  00F1               	movwf	?___wmul+1
 17315     1924  0874               	movf	___wmul@product,w
 17316     1925  00F0               	movwf	?___wmul
 17317     1926                     l2180:
 17318     1926  0008               	return
 17319     1927                     __end_of___wmul:
 17320                           
 17321                           	psect	text64
 17322     2745                     __ptext64:	
 17323 ;; *************** function ___bmul *****************
 17324 ;; Defined at:
 17325 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\Umul8.c"
 17326 ;; Parameters:    Size  Location     Type
 17327 ;;  multiplier      1    wreg     unsigned char 
 17328 ;;  multiplicand    1    0[COMMON] unsigned char 
 17329 ;; Auto vars:     Size  Location     Type
 17330 ;;  multiplier      1    2[COMMON] unsigned char 
 17331 ;;  product         1    1[COMMON] unsigned char 
 17332 ;; Return value:  Size  Location     Type
 17333 ;;                  1    wreg      unsigned char 
 17334 ;; Registers used:
 17335 ;;		wreg, status,2, status,0
 17336 ;; Tracked objects:
 17337 ;;		On entry : 0/0
 17338 ;;		On exit  : 0/0
 17339 ;;		Unchanged: 0/0
 17340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17341 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17342 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17344 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17345 ;;Total ram usage:        3 bytes
 17346 ;; Hardware stack levels used: 1
 17347 ;; Hardware stack levels required when called: 1
 17348 ;; This function calls:
 17349 ;;		Nothing
 17350 ;; This function is called by:
 17351 ;;		_DISP_Str
 17352 ;;		_MENU_Memory_Update
 17353 ;;		_MENU_Memory_Run
 17354 ;;		_MENU_NameEdit_Init
 17355 ;;		_MENU_NameEdit_Run
 17356 ;; This function uses a non-reentrant model
 17357 ;;
 17358                           
 17359     2745                     ___bmul:	
 17360                           ;psect for function ___bmul
 17361                           
 17362                           
 17363                           ;incstack = 0
 17364                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 17365                           ;___bmul@multiplier stored from wreg
 17366     2745  00F2               	movwf	___bmul@multiplier
 17367     2746                     l7198:
 17368     2746  01F1               	clrf	___bmul@product
 17369     2747                     l7200:
 17370     2747  1C72               	btfss	___bmul@multiplier,0
 17371     2748  2F4A               	goto	u7451
 17372     2749  2F4B               	goto	u7450
 17373     274A                     u7451:
 17374     274A  2F4D               	goto	l7204
 17375     274B                     u7450:
 17376     274B                     l7202:
 17377     274B  0870               	movf	___bmul@multiplicand,w
 17378     274C  07F1               	addwf	___bmul@product,f
 17379     274D                     l7204:
 17380     274D  1003               	clrc
 17381     274E  0DF0               	rlf	___bmul@multiplicand,f
 17382     274F                     l7206:
 17383     274F  1003               	clrc
 17384     2750  0CF2               	rrf	___bmul@multiplier,f
 17385     2751  0872               	movf	___bmul@multiplier,w
 17386     2752  1D03               	btfss	3,2
 17387     2753  2F55               	goto	u7461
 17388     2754  2F56               	goto	u7460
 17389     2755                     u7461:
 17390     2755  2F47               	goto	l7200
 17391     2756                     u7460:
 17392     2756                     l7208:
 17393     2756  0871               	movf	___bmul@product,w
 17394     2757                     l2204:
 17395     2757  0008               	return
 17396     2758                     __end_of___bmul:
 17397                           
 17398                           	psect	text65
 17399     1122                     __ptext65:	
 17400 ;; *************** function ___awdiv *****************
 17401 ;; Defined at:
 17402 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awdiv.c"
 17403 ;; Parameters:    Size  Location     Type
 17404 ;;  divisor         2    0[COMMON] int 
 17405 ;;  dividend        2    2[COMMON] int 
 17406 ;; Auto vars:     Size  Location     Type
 17407 ;;  quotient        2    6[COMMON] int 
 17408 ;;  sign            1    5[COMMON] unsigned char 
 17409 ;;  counter         1    4[COMMON] unsigned char 
 17410 ;; Return value:  Size  Location     Type
 17411 ;;                  2    0[COMMON] int 
 17412 ;; Registers used:
 17413 ;;		wreg, status,2, status,0
 17414 ;; Tracked objects:
 17415 ;;		On entry : 0/0
 17416 ;;		On exit  : 0/0
 17417 ;;		Unchanged: 0/0
 17418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17420 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17422 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17423 ;;Total ram usage:        8 bytes
 17424 ;; Hardware stack levels used: 1
 17425 ;; Hardware stack levels required when called: 1
 17426 ;; This function calls:
 17427 ;;		Nothing
 17428 ;; This function is called by:
 17429 ;;		_UTILI_Int2Str
 17430 ;;		_DISP_Str
 17431 ;;		_DISP_PWR
 17432 ;;		_TUNE_Run
 17433 ;; This function uses a non-reentrant model
 17434 ;;
 17435                           
 17436     1122                     ___awdiv:	
 17437                           ;psect for function ___awdiv
 17438                           
 17439     1122                     l7212:	
 17440                           ;incstack = 0
 17441                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 17442                           
 17443     1122  01F5               	clrf	___awdiv@sign
 17444     1123                     l7214:
 17445     1123  1FF1               	btfss	___awdiv@divisor+1,7
 17446     1124  2926               	goto	u7471
 17447     1125  2927               	goto	u7470
 17448     1126                     u7471:
 17449     1126  292E               	goto	l7220
 17450     1127                     u7470:
 17451     1127                     l7216:
 17452     1127  09F0               	comf	___awdiv@divisor,f
 17453     1128  09F1               	comf	___awdiv@divisor+1,f
 17454     1129  0AF0               	incf	___awdiv@divisor,f
 17455     112A  1903               	skipnz
 17456     112B  0AF1               	incf	___awdiv@divisor+1,f
 17457     112C                     l7218:
 17458     112C  3001               	movlw	1
 17459     112D  00F5               	movwf	___awdiv@sign
 17460     112E                     l7220:
 17461     112E  1FF3               	btfss	___awdiv@dividend+1,7
 17462     112F  2931               	goto	u7481
 17463     1130  2932               	goto	u7480
 17464     1131                     u7481:
 17465     1131  2939               	goto	l7226
 17466     1132                     u7480:
 17467     1132                     l7222:
 17468     1132  09F2               	comf	___awdiv@dividend,f
 17469     1133  09F3               	comf	___awdiv@dividend+1,f
 17470     1134  0AF2               	incf	___awdiv@dividend,f
 17471     1135  1903               	skipnz
 17472     1136  0AF3               	incf	___awdiv@dividend+1,f
 17473     1137                     l7224:
 17474     1137  3001               	movlw	1
 17475     1138  06F5               	xorwf	___awdiv@sign,f
 17476     1139                     l7226:
 17477     1139  01F6               	clrf	___awdiv@quotient
 17478     113A  01F7               	clrf	___awdiv@quotient+1
 17479     113B                     l7228:
 17480     113B  0870               	movf	___awdiv@divisor,w
 17481     113C  0471               	iorwf	___awdiv@divisor+1,w
 17482     113D  1903               	btfsc	3,2
 17483     113E  2940               	goto	u7491
 17484     113F  2941               	goto	u7490
 17485     1140                     u7491:
 17486     1140  296E               	goto	l7248
 17487     1141                     u7490:
 17488     1141                     l7230:
 17489     1141  3001               	movlw	1
 17490     1142  00F4               	movwf	___awdiv@counter
 17491     1143  294B               	goto	l7236
 17492     1144                     l7232:
 17493     1144  3001               	movlw	1
 17494     1145                     u7505:
 17495     1145  35F0               	lslf	___awdiv@divisor,f
 17496     1146  0DF1               	rlf	___awdiv@divisor+1,f
 17497     1147  0B89               	decfsz	9,f
 17498     1148  2945               	goto	u7505
 17499     1149                     l7234:
 17500     1149  3001               	movlw	1
 17501     114A  07F4               	addwf	___awdiv@counter,f
 17502     114B                     l7236:
 17503     114B  1FF1               	btfss	___awdiv@divisor+1,7
 17504     114C  294E               	goto	u7511
 17505     114D  294F               	goto	u7510
 17506     114E                     u7511:
 17507     114E  2944               	goto	l7232
 17508     114F                     u7510:
 17509     114F                     l7238:
 17510     114F  3001               	movlw	1
 17511     1150                     u7525:
 17512     1150  35F6               	lslf	___awdiv@quotient,f
 17513     1151  0DF7               	rlf	___awdiv@quotient+1,f
 17514     1152  0B89               	decfsz	9,f
 17515     1153  2950               	goto	u7525
 17516     1154  0871               	movf	___awdiv@divisor+1,w
 17517     1155  0273               	subwf	___awdiv@dividend+1,w
 17518     1156  1D03               	skipz
 17519     1157  295A               	goto	u7535
 17520     1158  0870               	movf	___awdiv@divisor,w
 17521     1159  0272               	subwf	___awdiv@dividend,w
 17522     115A                     u7535:
 17523     115A  1C03               	skipc
 17524     115B  295D               	goto	u7531
 17525     115C  295E               	goto	u7530
 17526     115D                     u7531:
 17527     115D  2963               	goto	l7244
 17528     115E                     u7530:
 17529     115E                     l7240:
 17530     115E  0870               	movf	___awdiv@divisor,w
 17531     115F  02F2               	subwf	___awdiv@dividend,f
 17532     1160  0871               	movf	___awdiv@divisor+1,w
 17533     1161  3BF3               	subwfb	___awdiv@dividend+1,f
 17534     1162                     l7242:
 17535     1162  1476               	bsf	___awdiv@quotient,0
 17536     1163                     l7244:
 17537     1163  3001               	movlw	1
 17538     1164                     u7545:
 17539     1164  36F1               	lsrf	___awdiv@divisor+1,f
 17540     1165  0CF0               	rrf	___awdiv@divisor,f
 17541     1166  0B89               	decfsz	9,f
 17542     1167  2964               	goto	u7545
 17543     1168                     l7246:
 17544     1168  3001               	movlw	1
 17545     1169  02F4               	subwf	___awdiv@counter,f
 17546     116A  1D03               	btfss	3,2
 17547     116B  296D               	goto	u7551
 17548     116C  296E               	goto	u7550
 17549     116D                     u7551:
 17550     116D  294F               	goto	l7238
 17551     116E                     u7550:
 17552     116E                     l7248:
 17553     116E  0875               	movf	___awdiv@sign,w
 17554     116F  1903               	btfsc	3,2
 17555     1170  2972               	goto	u7561
 17556     1171  2973               	goto	u7560
 17557     1172                     u7561:
 17558     1172  2978               	goto	l7252
 17559     1173                     u7560:
 17560     1173                     l7250:
 17561     1173  09F6               	comf	___awdiv@quotient,f
 17562     1174  09F7               	comf	___awdiv@quotient+1,f
 17563     1175  0AF6               	incf	___awdiv@quotient,f
 17564     1176  1903               	skipnz
 17565     1177  0AF7               	incf	___awdiv@quotient+1,f
 17566     1178                     l7252:
 17567     1178  0877               	movf	___awdiv@quotient+1,w
 17568     1179  00F1               	movwf	?___awdiv+1
 17569     117A  0876               	movf	___awdiv@quotient,w
 17570     117B  00F0               	movwf	?___awdiv
 17571     117C                     l2331:
 17572     117C  0008               	return
 17573     117D                     __end_of___awdiv:
 17574                           
 17575                           	psect	text66
 17576     26BE                     __ptext66:	
 17577 ;; *************** function _BUTTON_Reset *****************
 17578 ;; Defined at:
 17579 ;;		line 26 in file "button.c"
 17580 ;; Parameters:    Size  Location     Type
 17581 ;;		None
 17582 ;; Auto vars:     Size  Location     Type
 17583 ;;		None
 17584 ;; Return value:  Size  Location     Type
 17585 ;;                  1    wreg      void 
 17586 ;; Registers used:
 17587 ;;		status,2
 17588 ;; Tracked objects:
 17589 ;;		On entry : 0/0
 17590 ;;		On exit  : 0/0
 17591 ;;		Unchanged: 0/0
 17592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17597 ;;Total ram usage:        0 bytes
 17598 ;; Hardware stack levels used: 1
 17599 ;; Hardware stack levels required when called: 1
 17600 ;; This function calls:
 17601 ;;		Nothing
 17602 ;; This function is called by:
 17603 ;;		_MENU_Main_Init
 17604 ;;		_MENU_Tune_Init
 17605 ;;		_MENU_TParam_Init
 17606 ;;		_MENU_Sleep_Init
 17607 ;;		_MENU_RelTest_Init
 17608 ;;		_MENU_CalPWR_Init
 17609 ;;		_MENU_SubSetup_Init
 17610 ;;		_MENU_SubTop_Init
 17611 ;;		_MENU_Memory_Init
 17612 ;;		_MENU_NameEdit_Init
 17613 ;;		_MENU_StartupSave_Init
 17614 ;;		_MENU_About_Init
 17615 ;; This function uses a non-reentrant model
 17616 ;;
 17617                           
 17618     26BE                     _BUTTON_Reset:	
 17619                           ;psect for function _BUTTON_Reset
 17620                           
 17621     26BE                     l7534:	
 17622                           ;incstack = 0
 17623                           ; Regs used in _BUTTON_Reset: [status,2]
 17624                           
 17625                           
 17626                           ;button.c: 28:   BUTTON_count=255;
 17627     26BE  30FF               	movlw	255
 17628     26BF  0020               	movlb	0	; select bank0
 17629     26C0  00D9               	movwf	_BUTTON_count
 17630     26C1                     l7536:
 17631                           
 17632                           ;button.c: 29:   BUTTON_was_long_pressed =0;
 17633     26C1  0021               	movlb	1	; select bank1
 17634     26C2  01B8               	clrf	_BUTTON_was_long_pressed^(0+128)
 17635     26C3                     l900:
 17636     26C3  0008               	return
 17637     26C4                     __end_of_BUTTON_Reset:
 17638                           
 17639                           	psect	text67
 17640     1BC5                     __ptext67:	
 17641 ;; *************** function _MAIN_Init *****************
 17642 ;; Defined at:
 17643 ;;		line 38 in file "main.c"
 17644 ;; Parameters:    Size  Location     Type
 17645 ;;		None
 17646 ;; Auto vars:     Size  Location     Type
 17647 ;;		None
 17648 ;; Return value:  Size  Location     Type
 17649 ;;                  1    wreg      void 
 17650 ;; Registers used:
 17651 ;;		wreg, status,2, status,0
 17652 ;; Tracked objects:
 17653 ;;		On entry : 0/0
 17654 ;;		On exit  : 0/0
 17655 ;;		Unchanged: 0/0
 17656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17661 ;;Total ram usage:        0 bytes
 17662 ;; Hardware stack levels used: 1
 17663 ;; Hardware stack levels required when called: 1
 17664 ;; This function calls:
 17665 ;;		Nothing
 17666 ;; This function is called by:
 17667 ;;		_main
 17668 ;; This function uses a non-reentrant model
 17669 ;;
 17670                           
 17671     1BC5                     _MAIN_Init:	
 17672                           ;psect for function _MAIN_Init
 17673                           
 17674     1BC5                     l9088:	
 17675                           ;incstack = 0
 17676                           ; Regs used in _MAIN_Init: [wreg+status,2+status,0]
 17677                           
 17678                           
 17679                           ;main.c: 44:   OSCCON = 0b01111010;
 17680     1BC5  307A               	movlw	122
 17681     1BC6  0021               	movlb	1	; select bank1
 17682     1BC7  0099               	movwf	25	;volatile
 17683     1BC8                     l9090:
 17684                           
 17685                           ;main.c: 47:   LATA = 0;
 17686     1BC8  0022               	movlb	2	; select bank2
 17687     1BC9  018C               	clrf	12	;volatile
 17688                           
 17689                           ;main.c: 48:   LATB = 0;
 17690     1BCA  018D               	clrf	13	;volatile
 17691                           
 17692                           ;main.c: 49:   LATC = 0;
 17693     1BCB  018E               	clrf	14	;volatile
 17694     1BCC                     l9092:
 17695                           
 17696                           ;main.c: 59:  T2CONbits.T2CKPS = 2;
 17697     1BCC  0020               	movlb	0	; select bank0
 17698     1BCD  081C               	movf	28,w	;volatile
 17699     1BCE  39FC               	andlw	-4
 17700     1BCF  3802               	iorlw	2
 17701     1BD0  009C               	movwf	28	;volatile
 17702     1BD1                     l9094:
 17703                           
 17704                           ;main.c: 60:  T2CONbits.T2OUTPS = 0;
 17705     1BD1  3087               	movlw	-121
 17706     1BD2  059C               	andwf	28,f	;volatile
 17707     1BD3                     l9096:
 17708                           
 17709                           ;main.c: 61:  PR2 = 250;
 17710     1BD3  30FA               	movlw	250
 17711     1BD4  009B               	movwf	27	;volatile
 17712     1BD5                     l9098:
 17713                           
 17714                           ;main.c: 63:  PIE1bits.TMR2IE = 1;
 17715     1BD5  0021               	movlb	1	; select bank1
 17716     1BD6  1491               	bsf	17,1	;volatile
 17717     1BD7                     l9100:
 17718                           
 17719                           ;main.c: 64:  INTCONbits.PEIE = 1;
 17720     1BD7  170B               	bsf	11,6	;volatile
 17721     1BD8                     l9102:
 17722                           
 17723                           ;main.c: 66:  T2CONbits.TMR2ON = 1;
 17724     1BD8  0020               	movlb	0	; select bank0
 17725     1BD9  151C               	bsf	28,2	;volatile
 17726     1BDA                     l9104:
 17727                           
 17728                           ;main.c: 67:  INTCONbits.GIE = 1;
 17729     1BDA  178B               	bsf	11,7	;volatile
 17730     1BDB                     l9106:
 17731                           
 17732                           ;main.c: 82:   ANSELBbits.ANSELB = 0;
 17733     1BDB  30C0               	movlw	-64
 17734     1BDC  0023               	movlb	3	; select bank3
 17735     1BDD  058D               	andwf	13,f	;volatile
 17736     1BDE                     l9108:
 17737                           
 17738                           ;main.c: 84:   CM1CON0bits.C1ON = 0;
 17739     1BDE  0022               	movlb	2	; select bank2
 17740     1BDF  1391               	bcf	17,7	;volatile
 17741     1BE0                     l9110:
 17742                           
 17743                           ;main.c: 85:   CM2CON0bits.C2ON = 0;
 17744     1BE0  1393               	bcf	19,7	;volatile
 17745     1BE1                     l9112:
 17746                           
 17747                           ;main.c: 104:   TRISCbits.TRISC7 = 0;
 17748     1BE1  0021               	movlb	1	; select bank1
 17749     1BE2  138E               	bcf	14,7	;volatile
 17750     1BE3                     l9114:
 17751                           
 17752                           ;main.c: 105:   TRISCbits.TRISC3 = 0;
 17753     1BE3  118E               	bcf	14,3	;volatile
 17754     1BE4                     l9116:
 17755                           
 17756                           ;main.c: 106:   TRISCbits.TRISC6 = 0;
 17757     1BE4  130E               	bcf	14,6	;volatile
 17758     1BE5                     l9118:
 17759                           
 17760                           ;main.c: 107:   TRISCbits.TRISC2 = 0;
 17761     1BE5  110E               	bcf	14,2	;volatile
 17762     1BE6                     l9120:
 17763                           
 17764                           ;main.c: 108:   TRISCbits.TRISC5 = 0;
 17765     1BE6  128E               	bcf	14,5	;volatile
 17766     1BE7                     l9122:
 17767                           
 17768                           ;main.c: 109:   TRISCbits.TRISC1 = 0;
 17769     1BE7  108E               	bcf	14,1	;volatile
 17770     1BE8                     l9124:
 17771                           
 17772                           ;main.c: 110:   TRISCbits.TRISC4 = 0;
 17773     1BE8  120E               	bcf	14,4	;volatile
 17774     1BE9                     l9126:
 17775                           
 17776                           ;main.c: 111:   TRISCbits.TRISC0 = 0;
 17777     1BE9  100E               	bcf	14,0	;volatile
 17778     1BEA                     l9128:
 17779                           
 17780                           ;main.c: 113:   TRISBbits.TRISB3 = 0;
 17781     1BEA  118D               	bcf	13,3	;volatile
 17782     1BEB                     l9130:
 17783                           
 17784                           ;main.c: 114:   TRISAbits.TRISA2 = 0;
 17785     1BEB  110C               	bcf	12,2	;volatile
 17786     1BEC                     l9132:
 17787                           
 17788                           ;main.c: 115:   TRISBbits.TRISB4 = 0;
 17789     1BEC  120D               	bcf	13,4	;volatile
 17790     1BED                     l9134:
 17791                           
 17792                           ;main.c: 116:   TRISAbits.TRISA3 = 0;
 17793     1BED  118C               	bcf	12,3	;volatile
 17794     1BEE                     l9136:
 17795                           
 17796                           ;main.c: 117:   TRISBbits.TRISB5 = 0;
 17797     1BEE  128D               	bcf	13,5	;volatile
 17798     1BEF                     l9138:
 17799                           
 17800                           ;main.c: 118:   TRISAbits.TRISA5 = 0;
 17801     1BEF  128C               	bcf	12,5	;volatile
 17802     1BF0                     l9140:
 17803                           
 17804                           ;main.c: 119:   TRISAbits.TRISA4 = 0;
 17805     1BF0  120C               	bcf	12,4	;volatile
 17806     1BF1                     l9142:
 17807                           
 17808                           ;main.c: 121:   global.ind_relays =0;
 17809     1BF1  01DA               	clrf	(_global^(0+128)+29)
 17810     1BF2                     l9144:
 17811                           
 17812                           ;main.c: 122:   global.cap_relays =0;
 17813     1BF2  01D9               	clrf	(_global^(0+128)+28)
 17814     1BF3                     l9146:
 17815                           
 17816                           ;main.c: 123:   global.cap_sw =0;
 17817     1BF3  01D8               	clrf	(_global^(0+128)+27)
 17818     1BF4                     l9148:
 17819                           
 17820                           ;main.c: 126:   global.tune_stop_swr = 100;
 17821     1BF4  3064               	movlw	100
 17822     1BF5  00C1               	movwf	(_global^(0+128)+4)
 17823     1BF6  3000               	movlw	0
 17824     1BF7  00C2               	movwf	(_global^(0+128)+5)
 17825     1BF8                     l9150:
 17826                           
 17827                           ;main.c: 130:   OPTION_REGbits.nWPUEN = 0;
 17828     1BF8  1395               	bcf	21,7	;volatile
 17829     1BF9                     l191:
 17830     1BF9  0008               	return
 17831     1BFA                     __end_of_MAIN_Init:
 17832                           
 17833                           	psect	text68
 17834     19E1                     __ptext68:	
 17835 ;; *************** function _EEPROM_InitDefault *****************
 17836 ;; Defined at:
 17837 ;;		line 44 in file "eeprom_init.c"
 17838 ;; Parameters:    Size  Location     Type
 17839 ;;		None
 17840 ;; Auto vars:     Size  Location     Type
 17841 ;;  i               2    3[COMMON] unsigned short 
 17842 ;; Return value:  Size  Location     Type
 17843 ;;                  1    wreg      void 
 17844 ;; Registers used:
 17845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17846 ;; Tracked objects:
 17847 ;;		On entry : 0/0
 17848 ;;		On exit  : 0/0
 17849 ;;		Unchanged: 0/0
 17850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17855 ;;Total ram usage:        2 bytes
 17856 ;; Hardware stack levels used: 1
 17857 ;; Hardware stack levels required when called: 2
 17858 ;; This function calls:
 17859 ;;		_eeprom_read
 17860 ;;		_eeprom_write
 17861 ;; This function is called by:
 17862 ;;		_main
 17863 ;; This function uses a non-reentrant model
 17864 ;;
 17865                           
 17866     19E1                     _EEPROM_InitDefault:	
 17867                           ;psect for function _EEPROM_InitDefault
 17868                           
 17869     19E1                     l9152:	
 17870                           ;incstack = 0
 17871                           ; Regs used in _EEPROM_InitDefault: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17872                           
 17873                           
 17874                           ;eeprom_init.c: 47:     if (eeprom_read(0xFF) == 0xF3)
 17875     19E1  30FF               	movlw	255
 17876     19E2  31A6  26D0  3199   	fcall	_eeprom_read
 17877     19E5  3AF3               	xorlw	243
 17878     19E6  1D03               	skipz
 17879     19E7  29E9               	goto	u10881
 17880     19E8  29EA               	goto	u10880
 17881     19E9                     u10881:
 17882     19E9  29EB               	goto	l9156
 17883     19EA                     u10880:
 17884     19EA  2A0D               	goto	l2069
 17885     19EB                     l9156:
 17886                           
 17887                           ;eeprom_init.c: 51:     for (uint16_t i = 0; i < 0xFF; i++) {
 17888     19EB  01F3               	clrf	EEPROM_InitDefault@i
 17889     19EC  01F4               	clrf	EEPROM_InitDefault@i+1
 17890     19ED                     l9162:
 17891                           
 17892                           ;eeprom_init.c: 52:         eeprom_write(i, eeprom_init_data[i]);
 17893     19ED  3000               	movlw	low _eeprom_init_data
 17894     19EE  0773               	addwf	EEPROM_InitDefault@i,w
 17895     19EF  0084               	movwf	4
 17896     19F0  3010               	movlw	high _eeprom_init_data
 17897     19F1  3D74               	addwfc	EEPROM_InitDefault@i+1,w
 17898     19F2  3880               	iorlw	128
 17899     19F3  0085               	movwf	5
 17900     19F4  0800               	movf	0,w	;code access
 17901     19F5  00F0               	movwf	eeprom_write@value
 17902     19F6  0873               	movf	EEPROM_InitDefault@i,w
 17903     19F7  3198  20EA  3199   	fcall	_eeprom_write
 17904     19FA                     l9164:
 17905                           
 17906                           ;eeprom_init.c: 53:     }
 17907     19FA  3001               	movlw	1
 17908     19FB  07F3               	addwf	EEPROM_InitDefault@i,f
 17909     19FC  3000               	movlw	0
 17910     19FD  3DF4               	addwfc	EEPROM_InitDefault@i+1,f
 17911     19FE                     l9166:
 17912     19FE  3000               	movlw	0
 17913     19FF  0274               	subwf	EEPROM_InitDefault@i+1,w
 17914     1A00  30FF               	movlw	255
 17915     1A01  1903               	skipnz
 17916     1A02  0273               	subwf	EEPROM_InitDefault@i,w
 17917     1A03  1C03               	skipc
 17918     1A04  2A06               	goto	u10891
 17919     1A05  2A07               	goto	u10890
 17920     1A06                     u10891:
 17921     1A06  29ED               	goto	l9162
 17922     1A07                     u10890:
 17923     1A07                     l9168:
 17924                           
 17925                           ;eeprom_init.c: 55:     eeprom_write(0xFF, 0xF3);
 17926     1A07  30F3               	movlw	243
 17927     1A08  00F0               	movwf	eeprom_write@value
 17928     1A09  30FF               	movlw	255
 17929     1A0A  3198  20EA  3199   	fcall	_eeprom_write
 17930     1A0D                     l2069:
 17931     1A0D  0008               	return
 17932     1A0E                     __end_of_EEPROM_InitDefault:
 17933                           
 17934                           	psect	text69
 17935     18EA                     __ptext69:	
 17936 ;; *************** function _eeprom_write *****************
 17937 ;; Defined at:
 17938 ;;		line 59 in file "eeprom_init.c"
 17939 ;; Parameters:    Size  Location     Type
 17940 ;;  addr            1    wreg     unsigned char 
 17941 ;;  value           1    0[COMMON] unsigned char 
 17942 ;; Auto vars:     Size  Location     Type
 17943 ;;  addr            1    1[COMMON] unsigned char 
 17944 ;;  gie_state       1    2[COMMON] unsigned char 
 17945 ;; Return value:  Size  Location     Type
 17946 ;;                  1    wreg      void 
 17947 ;; Registers used:
 17948 ;;		wreg, status,2, status,0
 17949 ;; Tracked objects:
 17950 ;;		On entry : 0/0
 17951 ;;		On exit  : 0/0
 17952 ;;		Unchanged: 0/0
 17953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17954 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17957 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17958 ;;Total ram usage:        3 bytes
 17959 ;; Hardware stack levels used: 1
 17960 ;; Hardware stack levels required when called: 1
 17961 ;; This function calls:
 17962 ;;		Nothing
 17963 ;; This function is called by:
 17964 ;;		_MENU_Reset_Init
 17965 ;;		_EEPROM_Write
 17966 ;;		_EEPROM_InitDefault
 17967 ;; This function uses a non-reentrant model
 17968 ;;
 17969                           
 17970     18EA                     _eeprom_write:	
 17971                           ;psect for function _eeprom_write
 17972                           
 17973                           
 17974                           ;incstack = 0
 17975                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
 17976                           ;eeprom_write@addr stored from wreg
 17977     18EA  00F1               	movwf	eeprom_write@addr
 17978     18EB                     l7778:
 17979                           
 17980                           ;eeprom_init.c: 59: void eeprom_write(uint8_t addr, uint8_t value);eeprom_init.c: 60: {;
      +                          eeprom_init.c: 61:     EEADRL = addr;
 17981     18EB  0871               	movf	eeprom_write@addr,w
 17982     18EC  0023               	movlb	3	; select bank3
 17983     18ED  0091               	movwf	17	;volatile
 17984                           
 17985                           ;eeprom_init.c: 62:     EEDATL = value;
 17986     18EE  0870               	movf	eeprom_write@value,w
 17987     18EF  0093               	movwf	19	;volatile
 17988     18F0                     l7780:
 17989                           
 17990                           ;eeprom_init.c: 63:     EECON1bits.EEPGD = 0;
 17991     18F0  1395               	bcf	21,7	;volsfr
 17992     18F1                     l7782:
 17993                           
 17994                           ;eeprom_init.c: 64:     EECON1bits.CFGS = 0;
 17995     18F1  1315               	bcf	21,6	;volsfr
 17996     18F2                     l7784:
 17997                           
 17998                           ;eeprom_init.c: 65:     EECON1bits.WREN = 1;
 17999     18F2  1515               	bsf	21,2	;volsfr
 18000     18F3                     l7786:
 18001                           
 18002                           ;eeprom_init.c: 68:     uint8_t gie_state = INTCONbits.GIE;
 18003     18F3  0D0B               	rlf	11,w	;volatile
 18004     18F4  0D0B               	rlf	11,w	;volatile
 18005     18F5  3901               	andlw	1
 18006     18F6  00F2               	movwf	eeprom_write@gie_state
 18007     18F7                     l7788:
 18008                           
 18009                           ;eeprom_init.c: 69:     INTCONbits.GIE = 0;
 18010     18F7  138B               	bcf	11,7	;volatile
 18011     18F8                     l7790:
 18012                           
 18013                           ;eeprom_init.c: 70:     EECON2 = 0x55;
 18014     18F8  3055               	movlw	85
 18015     18F9  0096               	movwf	22	;volsfr
 18016     18FA                     l7792:
 18017                           
 18018                           ;eeprom_init.c: 71:     EECON2 = 0xAA;
 18019     18FA  30AA               	movlw	170
 18020     18FB  0096               	movwf	22	;volsfr
 18021     18FC                     l7794:
 18022                           
 18023                           ;eeprom_init.c: 72:     EECON1bits.WR = 1;
 18024     18FC  1495               	bsf	21,1	;volsfr
 18025     18FD                     l2074:	
 18026                           ;eeprom_init.c: 73:     while (EECON1bits.WR);
 18027                           
 18028     18FD  1895               	btfsc	21,1	;volsfr
 18029     18FE  2900               	goto	u8621
 18030     18FF  2901               	goto	u8620
 18031     1900                     u8621:
 18032     1900  28FD               	goto	l2074
 18033     1901                     u8620:
 18034     1901                     l2076:
 18035                           
 18036                           ;eeprom_init.c: 74:     EECON1bits.WREN = 0;
 18037     1901  1115               	bcf	21,2	;volsfr
 18038     1902                     l7796:
 18039                           
 18040                           ;eeprom_init.c: 75:     INTCONbits.GIE = gie_state;
 18041     1902  0C72               	rrf	eeprom_write@gie_state,w
 18042     1903  1C03               	skipc
 18043     1904  138B               	bcf	11,7	;volatile
 18044     1905  1803               	skipnc
 18045     1906  178B               	bsf	11,7	;volatile
 18046     1907                     l2077:
 18047     1907  0008               	return
 18048     1908                     __end_of_eeprom_write:
 18049                           
 18050                           	psect	text70
 18051     1FA5                     __ptext70:	
 18052 ;; *************** function _EEPROM_Init *****************
 18053 ;; Defined at:
 18054 ;;		line 8 in file "eeprom.c"
 18055 ;; Parameters:    Size  Location     Type
 18056 ;;		None
 18057 ;; Auto vars:     Size  Location     Type
 18058 ;;		None
 18059 ;; Return value:  Size  Location     Type
 18060 ;;                  1    wreg      void 
 18061 ;; Registers used:
 18062 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18063 ;; Tracked objects:
 18064 ;;		On entry : 0/0
 18065 ;;		On exit  : 0/0
 18066 ;;		Unchanged: 0/0
 18067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18072 ;;Total ram usage:        0 bytes
 18073 ;; Hardware stack levels used: 1
 18074 ;; Hardware stack levels required when called: 3
 18075 ;; This function calls:
 18076 ;;		_EEPROM_Read
 18077 ;; This function is called by:
 18078 ;;		_main
 18079 ;; This function uses a non-reentrant model
 18080 ;;
 18081                           
 18082     1FA5                     _EEPROM_Init:	
 18083                           ;psect for function _EEPROM_Init
 18084                           
 18085     1FA5                     l9170:	
 18086                           ;incstack = 0
 18087                           ; Regs used in _EEPROM_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18088                           
 18089                           
 18090                           ;eeprom.c: 10:   EEPROM_Read((uint8_t)&ee_tune_stop_swr, &global.tune_stop_swr, sizeof(g
      +                          lobal.tune_stop_swr));
 18091     1FA5  30C1               	movlw	low (_global+4)
 18092     1FA6  00F3               	movwf	EEPROM_Read@ptrValue
 18093     1FA7  3000               	movlw	high (_global+4)
 18094     1FA8  00F4               	movwf	EEPROM_Read@ptrValue+1
 18095     1FA9  3002               	movlw	2
 18096     1FAA  00F5               	movwf	EEPROM_Read@size
 18097     1FAB  3070               	movlw	(low _ee_tune_stop_swr)& (0+255)
 18098     1FAC  3198  2093  319F   	fcall	_EEPROM_Read
 18099                           
 18100                           ;eeprom.c: 11:   EEPROM_Read((uint8_t)&ee_tune_auto_swr, &global.tune_auto_swr, sizeof(g
      +                          lobal.tune_auto_swr));
 18101     1FAF  30C3               	movlw	low (_global+6)
 18102     1FB0  00F3               	movwf	EEPROM_Read@ptrValue
 18103     1FB1  3000               	movlw	high (_global+6)
 18104     1FB2  00F4               	movwf	EEPROM_Read@ptrValue+1
 18105     1FB3  3002               	movlw	2
 18106     1FB4  00F5               	movwf	EEPROM_Read@size
 18107     1FB5  306E               	movlw	(low _ee_tune_auto_swr)& (0+255)
 18108     1FB6  3198  2093  319F   	fcall	_EEPROM_Read
 18109                           
 18110                           ;eeprom.c: 12:   EEPROM_Read((uint8_t)&ee_tune_auto_enable, &global.tune_auto_enable, si
      +                          zeof(global.tune_auto_enable));
 18111     1FB9  30C5               	movlw	low (_global+8)
 18112     1FBA  00F3               	movwf	EEPROM_Read@ptrValue
 18113     1FBB  3000               	movlw	high (_global+8)
 18114     1FBC  00F4               	movwf	EEPROM_Read@ptrValue+1
 18115     1FBD  01F5               	clrf	EEPROM_Read@size
 18116     1FBE  0AF5               	incf	EEPROM_Read@size,f
 18117     1FBF  3073               	movlw	(low _ee_tune_auto_enable)& (0+255)
 18118     1FC0  3198  2093  319F   	fcall	_EEPROM_Read
 18119                           
 18120                           ;eeprom.c: 13:   EEPROM_Read((uint8_t)&ee_sleep_delay_sec, &global.sleep_delay_sec, size
      +                          of(global.sleep_delay_sec));
 18121     1FC3  30C7               	movlw	low (_global+10)
 18122     1FC4  00F3               	movwf	EEPROM_Read@ptrValue
 18123     1FC5  3000               	movlw	high (_global+10)
 18124     1FC6  00F4               	movwf	EEPROM_Read@ptrValue+1
 18125     1FC7  3002               	movlw	2
 18126     1FC8  00F5               	movwf	EEPROM_Read@size
 18127     1FC9  306C               	movlw	(low _ee_sleep_delay_sec)& (0+255)
 18128     1FCA  3198  2093  319F   	fcall	_EEPROM_Read
 18129                           
 18130                           ;eeprom.c: 14:   EEPROM_Read((uint8_t)&ee_sleep_enable, &global.sleep_enable, sizeof(glo
      +                          bal.sleep_enable));
 18131     1FCD  30C6               	movlw	low (_global+9)
 18132     1FCE  00F3               	movwf	EEPROM_Read@ptrValue
 18133     1FCF  3000               	movlw	high (_global+9)
 18134     1FD0  00F4               	movwf	EEPROM_Read@ptrValue+1
 18135     1FD1  01F5               	clrf	EEPROM_Read@size
 18136     1FD2  0AF5               	incf	EEPROM_Read@size,f
 18137     1FD3  3072               	movlw	(low _ee_sleep_enable)& (0+255)
 18138     1FD4  3198  2093  319F   	fcall	_EEPROM_Read
 18139                           
 18140                           ;eeprom.c: 15:   EEPROM_Read((uint8_t)&ee_cal_point_0, &global.cal_point[0], sizeof(glob
      +                          al.cal_point[0]));
 18141     1FD7  30CC               	movlw	low (_global+15)
 18142     1FD8  00F3               	movwf	EEPROM_Read@ptrValue
 18143     1FD9  3000               	movlw	high (_global+15)
 18144     1FDA  00F4               	movwf	EEPROM_Read@ptrValue+1
 18145     1FDB  3002               	movlw	2
 18146     1FDC  00F5               	movwf	EEPROM_Read@size
 18147     1FDD  306A               	movlw	(low _ee_cal_point_0)& (0+255)
 18148     1FDE  3198  2093  319F   	fcall	_EEPROM_Read
 18149                           
 18150                           ;eeprom.c: 16:   EEPROM_Read((uint8_t)&ee_cal_point_1, &global.cal_point[1], sizeof(glob
      +                          al.cal_point[1]));
 18151     1FE1  30CE               	movlw	low (_global+17)
 18152     1FE2  00F3               	movwf	EEPROM_Read@ptrValue
 18153     1FE3  3000               	movlw	high (_global+17)
 18154     1FE4  00F4               	movwf	EEPROM_Read@ptrValue+1
 18155     1FE5  3002               	movlw	2
 18156     1FE6  00F5               	movwf	EEPROM_Read@size
 18157     1FE7  3068               	movlw	(low _ee_cal_point_1)& (0+255)
 18158     1FE8  3198  2093  319F   	fcall	_EEPROM_Read
 18159                           
 18160                           ;eeprom.c: 17:   EEPROM_Read((uint8_t)&ee_cal_offset, &global.cal_offset, sizeof(global.
      +                          cal_offset));
 18161     1FEB  30D0               	movlw	low (_global+19)
 18162     1FEC  00F3               	movwf	EEPROM_Read@ptrValue
 18163     1FED  3000               	movlw	high (_global+19)
 18164     1FEE  00F4               	movwf	EEPROM_Read@ptrValue+1
 18165     1FEF  3002               	movlw	2
 18166     1FF0  00F5               	movwf	EEPROM_Read@size
 18167     1FF1  3066               	movlw	(low _ee_cal_offset)& (0+255)
 18168     1FF2  3198  2093  319F   	fcall	_EEPROM_Read
 18169                           
 18170                           ;eeprom.c: 18:   EEPROM_Read((uint8_t)&ee_cal_gain, &global.cal_gain, sizeof(global.cal_
      +                          gain));
 18171     1FF5  30D2               	movlw	low (_global+21)
 18172     1FF6  00F3               	movwf	EEPROM_Read@ptrValue
 18173     1FF7  3000               	movlw	high (_global+21)
 18174     1FF8  00F4               	movwf	EEPROM_Read@ptrValue+1
 18175     1FF9  3002               	movlw	2
 18176     1FFA  00F5               	movwf	EEPROM_Read@size
 18177     1FFB  3064               	movlw	(low _ee_cal_gain)& (0+255)
 18178     1FFC  3198  2093  319F   	fcall	_EEPROM_Read
 18179     1FFF                     l2035:
 18180     1FFF  0008               	return
 18181     2000                     __end_of_EEPROM_Init:
 18182                           
 18183                           	psect	text71
 18184     1893                     __ptext71:	
 18185 ;; *************** function _EEPROM_Read *****************
 18186 ;; Defined at:
 18187 ;;		line 35 in file "eeprom.c"
 18188 ;; Parameters:    Size  Location     Type
 18189 ;;  addr            1    wreg     unsigned char 
 18190 ;;  ptrValue        2    3[COMMON] PTR void 
 18191 ;;		 -> MENU_Memory_Run@tunemem(10), MENU_Memory_Update@memory(11), global$cal_point(4), MENU_var(13), 
 18192 ;;		 -> main@tunemem(10), global(30), 
 18193 ;;  size            1    5[COMMON] unsigned char 
 18194 ;; Auto vars:     Size  Location     Type
 18195 ;;  addr            1    6[COMMON] unsigned char 
 18196 ;;  ptr             2    7[COMMON] PTR unsigned char 
 18197 ;;		 -> MENU_Memory_Run@tunemem(10), MENU_Memory_Update@memory(11), global$cal_point(4), MENU_var(13), 
 18198 ;;		 -> main@tunemem(10), global(30), 
 18199 ;; Return value:  Size  Location     Type
 18200 ;;                  1    wreg      void 
 18201 ;; Registers used:
 18202 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18203 ;; Tracked objects:
 18204 ;;		On entry : 0/0
 18205 ;;		On exit  : 0/0
 18206 ;;		Unchanged: 0/0
 18207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18208 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18209 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18211 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18212 ;;Total ram usage:        6 bytes
 18213 ;; Hardware stack levels used: 1
 18214 ;; Hardware stack levels required when called: 1
 18215 ;; This function calls:
 18216 ;;		_eeprom_read
 18217 ;; This function is called by:
 18218 ;;		_main
 18219 ;;		_MENU_Memory_Update
 18220 ;;		_MENU_Memory_Run
 18221 ;;		_MENU_NameEdit_Init
 18222 ;;		_MENU_StartupSave_Init
 18223 ;;		_EEPROM_Init
 18224 ;; This function uses a non-reentrant model
 18225 ;;
 18226                           
 18227     1893                     _EEPROM_Read:	
 18228                           ;psect for function _EEPROM_Read
 18229                           
 18230                           
 18231                           ;incstack = 0
 18232                           ; Regs used in _EEPROM_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18233                           ;EEPROM_Read@addr stored from wreg
 18234     1893  00F6               	movwf	EEPROM_Read@addr
 18235     1894                     l7438:
 18236                           
 18237                           ;eeprom.c: 35: void EEPROM_Read(uint8_t addr, void *ptrValue, uint8_t size);eeprom.c: 36
      +                          : {;eeprom.c: 37:   uint8_t *ptr = ptrValue;
 18238     1894  0874               	movf	EEPROM_Read@ptrValue+1,w
 18239     1895  00F8               	movwf	EEPROM_Read@ptr+1
 18240     1896  0873               	movf	EEPROM_Read@ptrValue,w
 18241     1897  00F7               	movwf	EEPROM_Read@ptr
 18242                           
 18243                           ;eeprom.c: 38:     while(size >0)
 18244     1898  28AA               	goto	l7448
 18245     1899                     l7440:
 18246                           
 18247                           ;eeprom.c: 39:     {;eeprom.c: 40:         *ptr = eeprom_read(addr);
 18248     1899  0877               	movf	EEPROM_Read@ptr,w
 18249     189A  0086               	movwf	6
 18250     189B  0878               	movf	EEPROM_Read@ptr+1,w
 18251     189C  0087               	movwf	7
 18252     189D  0876               	movf	EEPROM_Read@addr,w
 18253     189E  31A6  26D0  3198   	fcall	_eeprom_read
 18254     18A1  0081               	movwf	1
 18255     18A2                     l7442:
 18256                           
 18257                           ;eeprom.c: 41:         size--;
 18258     18A2  3001               	movlw	1
 18259     18A3  02F5               	subwf	EEPROM_Read@size,f
 18260     18A4                     l7444:
 18261                           
 18262                           ;eeprom.c: 42:         addr++;
 18263     18A4  3001               	movlw	1
 18264     18A5  07F6               	addwf	EEPROM_Read@addr,f
 18265     18A6                     l7446:
 18266                           
 18267                           ;eeprom.c: 43:         ptr++;
 18268     18A6  3001               	movlw	1
 18269     18A7  07F7               	addwf	EEPROM_Read@ptr,f
 18270     18A8  3000               	movlw	0
 18271     18A9  3DF8               	addwfc	EEPROM_Read@ptr+1,f
 18272     18AA                     l7448:
 18273                           
 18274                           ;eeprom.c: 38:     while(size >0)
 18275     18AA  0875               	movf	EEPROM_Read@size,w
 18276     18AB  1D03               	btfss	3,2
 18277     18AC  28AE               	goto	u7891
 18278     18AD  28AF               	goto	u7890
 18279     18AE                     u7891:
 18280     18AE  2899               	goto	l7440
 18281     18AF                     u7890:
 18282     18AF                     l2047:
 18283     18AF  0008               	return
 18284     18B0                     __end_of_EEPROM_Read:
 18285                           
 18286                           	psect	text72
 18287     26D0                     __ptext72:	
 18288 ;; *************** function _eeprom_read *****************
 18289 ;; Defined at:
 18290 ;;		line 78 in file "eeprom_init.c"
 18291 ;; Parameters:    Size  Location     Type
 18292 ;;  addr            1    wreg     unsigned char 
 18293 ;; Auto vars:     Size  Location     Type
 18294 ;;  addr            1    0[COMMON] unsigned char 
 18295 ;; Return value:  Size  Location     Type
 18296 ;;                  1    wreg      unsigned char 
 18297 ;; Registers used:
 18298 ;;		wreg
 18299 ;; Tracked objects:
 18300 ;;		On entry : 0/0
 18301 ;;		On exit  : 0/0
 18302 ;;		Unchanged: 0/0
 18303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18308 ;;Total ram usage:        1 bytes
 18309 ;; Hardware stack levels used: 1
 18310 ;; Hardware stack levels required when called: 1
 18311 ;; This function calls:
 18312 ;;		Nothing
 18313 ;; This function is called by:
 18314 ;;		_EEPROM_Read
 18315 ;;		_EEPROM_InitDefault
 18316 ;; This function uses a non-reentrant model
 18317 ;;
 18318                           
 18319     26D0                     _eeprom_read:	
 18320                           ;psect for function _eeprom_read
 18321                           
 18322                           
 18323                           ;incstack = 0
 18324                           ; Regs used in _eeprom_read: [wreg]
 18325                           ;eeprom_read@addr stored from wreg
 18326     26D0  00F0               	movwf	eeprom_read@addr
 18327     26D1                     l7172:
 18328                           
 18329                           ;eeprom_init.c: 78: uint8_t eeprom_read(uint8_t addr);eeprom_init.c: 79: {;eeprom_init.c
      +                          : 80:     EEADRL = addr;
 18330     26D1  0870               	movf	eeprom_read@addr,w
 18331     26D2  0023               	movlb	3	; select bank3
 18332     26D3  0091               	movwf	17	;volatile
 18333     26D4                     l7174:
 18334                           
 18335                           ;eeprom_init.c: 81:     EECON1bits.EEPGD = 0;
 18336     26D4  1395               	bcf	21,7	;volsfr
 18337     26D5                     l7176:
 18338                           
 18339                           ;eeprom_init.c: 82:     EECON1bits.CFGS = 0;
 18340     26D5  1315               	bcf	21,6	;volsfr
 18341     26D6                     l7178:
 18342                           
 18343                           ;eeprom_init.c: 83:     EECON1bits.RD = 1;
 18344     26D6  1415               	bsf	21,0	;volsfr
 18345     26D7                     l7180:
 18346                           
 18347                           ;eeprom_init.c: 84:     __nop();
 18348     26D7  0000               	nop
 18349                           
 18350                           ;eeprom_init.c: 85:     return EEDATL;
 18351     26D8  0023               	movlb	3	; select bank3
 18352     26D9  0813               	movf	19,w	;volatile
 18353     26DA                     l2080:
 18354     26DA  0008               	return
 18355     26DB                     __end_of_eeprom_read:
 18356                           
 18357                           	psect	text73
 18358     175E                     __ptext73:	
 18359 ;; *************** function _DISP_Init *****************
 18360 ;; Defined at:
 18361 ;;		line 123 in file "disp.c"
 18362 ;; Parameters:    Size  Location     Type
 18363 ;;  i2_addr         1    wreg     unsigned char 
 18364 ;;  rotate          1    7[COMMON] unsigned char 
 18365 ;; Auto vars:     Size  Location     Type
 18366 ;;  i2_addr         1    8[COMMON] unsigned char 
 18367 ;; Return value:  Size  Location     Type
 18368 ;;                  1    wreg      void 
 18369 ;; Registers used:
 18370 ;;		wreg, status,2, status,0, pclath, cstack
 18371 ;; Tracked objects:
 18372 ;;		On entry : 0/0
 18373 ;;		On exit  : 0/0
 18374 ;;		Unchanged: 0/0
 18375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18376 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18380 ;;Total ram usage:        2 bytes
 18381 ;; Hardware stack levels used: 1
 18382 ;; Hardware stack levels required when called: 2
 18383 ;; This function calls:
 18384 ;;		_DISP_Clr
 18385 ;;		_I2C_Start
 18386 ;;		_I2C_Stop
 18387 ;;		_I2C_Write
 18388 ;; This function is called by:
 18389 ;;		_main
 18390 ;; This function uses a non-reentrant model
 18391 ;;
 18392                           
 18393     175E                     _DISP_Init:	
 18394                           ;psect for function _DISP_Init
 18395                           
 18396                           
 18397                           ;incstack = 0
 18398                           ; Regs used in _DISP_Init: [wreg+status,2+status,0+pclath+cstack]
 18399                           ;DISP_Init@i2_addr stored from wreg
 18400     175E  00F8               	movwf	DISP_Init@i2_addr
 18401     175F                     l9188:
 18402                           
 18403                           ;disp.c: 123: void DISP_Init(uint8_t i2_addr, uint8_t rotate);disp.c: 124: {;disp.c: 125
      +                          :   DISP_i2_addr = i2_addr;
 18404     175F  0878               	movf	DISP_Init@i2_addr,w
 18405     1760  0020               	movlb	0	; select bank0
 18406     1761  00DA               	movwf	_DISP_i2_addr
 18407                           
 18408                           ;disp.c: 126:   DISP_rotate = rotate;
 18409     1762  0877               	movf	DISP_Init@rotate,w
 18410     1763  0021               	movlb	1	; select bank1
 18411     1764  00B9               	movwf	_DISP_rotate^(0+128)
 18412     1765                     l9190:
 18413                           
 18414                           ;disp.c: 128:   TRISBbits.TRISB6 = 1;
 18415     1765  170D               	bsf	13,6	;volatile
 18416     1766                     l9192:
 18417                           
 18418                           ;disp.c: 129:   TRISBbits.TRISB7 = 1;
 18419     1766  178D               	bsf	13,7	;volatile
 18420     1767                     l9194:
 18421                           
 18422                           ;disp.c: 130:   LATBbits.LATB6 = 0;
 18423     1767  0022               	movlb	2	; select bank2
 18424     1768  130D               	bcf	13,6	;volatile
 18425     1769                     l9196:
 18426                           
 18427                           ;disp.c: 131:   LATBbits.LATB7 = 0;
 18428     1769  138D               	bcf	13,7	;volatile
 18429                           
 18430                           ;disp.c: 137:   _delay((unsigned long)(20));
 18431     176A  3006               	movlw	6
 18432     176B                     u11077:
 18433     176B  0B89               	decfsz	9,f
 18434     176C  2F6B               	goto	u11077
 18435     176D  3200               	nop2
 18436     176E                     l9198:
 18437                           
 18438                           ;disp.c: 139:   I2C_Start();
 18439     176E  3198  202B  3197   	fcall	_I2C_Start
 18440     1771                     l9200:
 18441                           
 18442                           ;disp.c: 140:   I2C_Write(DISP_i2_addr);
 18443     1771  0020               	movlb	0	; select bank0
 18444     1772  085A               	movf	_DISP_i2_addr,w
 18445     1773  319C  249B  3197   	fcall	_I2C_Write
 18446     1776                     l9202:
 18447                           
 18448                           ;disp.c: 141:   I2C_Write(0);
 18449     1776  3000               	movlw	0
 18450     1777  319C  249B  3197   	fcall	_I2C_Write
 18451     177A                     l9204:
 18452                           
 18453                           ;disp.c: 142:   I2C_Write(0xAE);
 18454     177A  30AE               	movlw	174
 18455     177B  319C  249B  3197   	fcall	_I2C_Write
 18456     177E                     l9206:
 18457                           
 18458                           ;disp.c: 145:   I2C_Write(0xD5);
 18459     177E  30D5               	movlw	213
 18460     177F  319C  249B  3197   	fcall	_I2C_Write
 18461     1782                     l9208:
 18462                           
 18463                           ;disp.c: 146:   I2C_Write(0x80);
 18464     1782  3080               	movlw	128
 18465     1783  319C  249B  3197   	fcall	_I2C_Write
 18466     1786                     l9210:
 18467                           
 18468                           ;disp.c: 148:   I2C_Write(0xA8);
 18469     1786  30A8               	movlw	168
 18470     1787  319C  249B  3197   	fcall	_I2C_Write
 18471     178A                     l9212:
 18472                           
 18473                           ;disp.c: 149:   I2C_Write(63);
 18474     178A  303F               	movlw	63
 18475     178B  319C  249B  3197   	fcall	_I2C_Write
 18476     178E                     l9214:
 18477                           
 18478                           ;disp.c: 151:   I2C_Write(0xD3);
 18479     178E  30D3               	movlw	211
 18480     178F  319C  249B  3197   	fcall	_I2C_Write
 18481     1792                     l9216:
 18482                           
 18483                           ;disp.c: 152:   I2C_Write(0);
 18484     1792  3000               	movlw	0
 18485     1793  319C  249B  3197   	fcall	_I2C_Write
 18486     1796                     l9218:
 18487                           
 18488                           ;disp.c: 154:   I2C_Write(0x40);
 18489     1796  3040               	movlw	64
 18490     1797  319C  249B  3197   	fcall	_I2C_Write
 18491     179A                     l9220:
 18492                           
 18493                           ;disp.c: 156:   I2C_Write(0x8D);
 18494     179A  308D               	movlw	141
 18495     179B  319C  249B  3197   	fcall	_I2C_Write
 18496     179E                     l9222:
 18497                           
 18498                           ;disp.c: 157:   I2C_Write(0x14);
 18499     179E  3014               	movlw	20
 18500     179F  319C  249B  3197   	fcall	_I2C_Write
 18501     17A2                     l9224:
 18502                           
 18503                           ;disp.c: 159:   I2C_Write(0x81);
 18504     17A2  3081               	movlw	129
 18505     17A3  319C  249B  3197   	fcall	_I2C_Write
 18506     17A6                     l9226:
 18507                           
 18508                           ;disp.c: 160:   I2C_Write(255);
 18509     17A6  30FF               	movlw	255
 18510     17A7  319C  249B  3197   	fcall	_I2C_Write
 18511     17AA                     l9228:
 18512                           
 18513                           ;disp.c: 162:   I2C_Write(0xD9);
 18514     17AA  30D9               	movlw	217
 18515     17AB  319C  249B  3197   	fcall	_I2C_Write
 18516     17AE                     l9230:
 18517                           
 18518                           ;disp.c: 163:   I2C_Write(0xf1);
 18519     17AE  30F1               	movlw	241
 18520     17AF  319C  249B  3197   	fcall	_I2C_Write
 18521     17B2                     l9232:
 18522                           
 18523                           ;disp.c: 165:   I2C_Write(0x20);
 18524     17B2  3020               	movlw	32
 18525     17B3  319C  249B  3197   	fcall	_I2C_Write
 18526     17B6                     l9234:
 18527                           
 18528                           ;disp.c: 166:   I2C_Write(0x02);
 18529     17B6  3002               	movlw	2
 18530     17B7  319C  249B  3197   	fcall	_I2C_Write
 18531     17BA                     l9236:
 18532                           
 18533                           ;disp.c: 168:   I2C_Write(0x21);
 18534     17BA  3021               	movlw	33
 18535     17BB  319C  249B  3197   	fcall	_I2C_Write
 18536     17BE                     l9238:
 18537                           
 18538                           ;disp.c: 169:   I2C_Write(0);
 18539     17BE  3000               	movlw	0
 18540     17BF  319C  249B  3197   	fcall	_I2C_Write
 18541     17C2                     l9240:
 18542                           
 18543                           ;disp.c: 170:   I2C_Write(127);
 18544     17C2  307F               	movlw	127
 18545     17C3  319C  249B  3197   	fcall	_I2C_Write
 18546     17C6                     l9242:
 18547                           
 18548                           ;disp.c: 172:   I2C_Write(0x2E);
 18549     17C6  302E               	movlw	46
 18550     17C7  319C  249B  3197   	fcall	_I2C_Write
 18551     17CA                     l9244:
 18552                           
 18553                           ;disp.c: 177:   if (DISP_rotate == 1)
 18554     17CA  0021               	movlb	1	; select bank1
 18555     17CB  0339               	decf	_DISP_rotate^(0+128),w
 18556     17CC  1D03               	btfss	3,2
 18557     17CD  2FCF               	goto	u10911
 18558     17CE  2FD0               	goto	u10910
 18559     17CF                     u10911:
 18560     17CF  2FD9               	goto	l9248
 18561     17D0                     u10910:
 18562     17D0                     l9246:
 18563                           
 18564                           ;disp.c: 178:   {;disp.c: 179:     I2C_Write(0xA0);
 18565     17D0  30A0               	movlw	160
 18566     17D1  319C  249B  3197   	fcall	_I2C_Write
 18567                           
 18568                           ;disp.c: 181:     I2C_Write(0xC0);
 18569     17D4  30C0               	movlw	192
 18570     17D5  319C  249B  3197   	fcall	_I2C_Write
 18571                           
 18572                           ;disp.c: 182:   }
 18573     17D8  2FE1               	goto	l720
 18574     17D9                     l9248:
 18575                           
 18576                           ;disp.c: 184:   {;disp.c: 185:     I2C_Write(0xA1);
 18577     17D9  30A1               	movlw	161
 18578     17DA  319C  249B  3197   	fcall	_I2C_Write
 18579                           
 18580                           ;disp.c: 187:     I2C_Write(0xC8);
 18581     17DD  30C8               	movlw	200
 18582     17DE  319C  249B  3197   	fcall	_I2C_Write
 18583     17E1                     l720:	
 18584                           ;disp.c: 188:   }
 18585                           
 18586                           
 18587                           ;disp.c: 190:   I2C_Write(0xDA);
 18588     17E1  30DA               	movlw	218
 18589     17E2  319C  249B  3197   	fcall	_I2C_Write
 18590                           
 18591                           ;disp.c: 191:   I2C_Write(0x12);
 18592     17E5  3012               	movlw	18
 18593     17E6  319C  249B  3197   	fcall	_I2C_Write
 18594                           
 18595                           ;disp.c: 193:   I2C_Write(0xDB);
 18596     17E9  30DB               	movlw	219
 18597     17EA  319C  249B  3197   	fcall	_I2C_Write
 18598                           
 18599                           ;disp.c: 194:   I2C_Write(0x40);
 18600     17ED  3040               	movlw	64
 18601     17EE  319C  249B  3197   	fcall	_I2C_Write
 18602                           
 18603                           ;disp.c: 196:   I2C_Write(0xA4);
 18604     17F1  30A4               	movlw	164
 18605     17F2  319C  249B  3197   	fcall	_I2C_Write
 18606                           
 18607                           ;disp.c: 198:   I2C_Write(0xA6);
 18608     17F5  30A6               	movlw	166
 18609     17F6  319C  249B  3197   	fcall	_I2C_Write
 18610                           
 18611                           ;disp.c: 200:   I2C_Stop();
 18612     17F9  31A7  2732  3197   	fcall	_I2C_Stop
 18613                           
 18614                           ;disp.c: 202:   DISP_Clr();
 18615     17FC  3199  2146  3197   	fcall	_DISP_Clr
 18616     17FF                     l721:
 18617     17FF  0008               	return
 18618     1800                     __end_of_DISP_Init:
 18619                           
 18620                           	psect	text74
 18621     1946                     __ptext74:	
 18622 ;; *************** function _DISP_Clr *****************
 18623 ;; Defined at:
 18624 ;;		line 95 in file "disp.c"
 18625 ;; Parameters:    Size  Location     Type
 18626 ;;		None
 18627 ;; Auto vars:     Size  Location     Type
 18628 ;;  i               1    5[COMMON] unsigned char 
 18629 ;;  page            1    6[COMMON] unsigned char 
 18630 ;; Return value:  Size  Location     Type
 18631 ;;                  1    wreg      void 
 18632 ;; Registers used:
 18633 ;;		wreg, status,2, status,0, pclath, cstack
 18634 ;; Tracked objects:
 18635 ;;		On entry : 0/0
 18636 ;;		On exit  : 0/0
 18637 ;;		Unchanged: 0/0
 18638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18643 ;;Total ram usage:        2 bytes
 18644 ;; Hardware stack levels used: 1
 18645 ;; Hardware stack levels required when called: 1
 18646 ;; This function calls:
 18647 ;;		_DISP_DataAddress
 18648 ;;		_DISP_Off
 18649 ;;		_DISP_On
 18650 ;;		_I2C_Stop
 18651 ;;		_I2C_Write
 18652 ;; This function is called by:
 18653 ;;		_main
 18654 ;;		_DISP_Init
 18655 ;;		_MENU_Main_Init
 18656 ;;		_MENU_Main_Run
 18657 ;;		_MENU_Reset_Init
 18658 ;;		_MENU_Tune_Init
 18659 ;;		_MENU_TParam_Init
 18660 ;;		_MENU_Sleep_Init
 18661 ;;		_MENU_RelTest_Init
 18662 ;;		_MENU_CalPWR_Init
 18663 ;;		_MENU_CalPWR_Run
 18664 ;;		_MENU_SubSetup_Init
 18665 ;;		_MENU_SubTop_Init
 18666 ;;		_MENU_MemoryLoad_Init
 18667 ;;		_MENU_MemorySave_Init
 18668 ;;		_MENU_NameEdit_Init
 18669 ;;		_MENU_StartupSave_Init
 18670 ;;		_MENU_About_Init
 18671 ;;		_MENU_About_Run
 18672 ;; This function uses a non-reentrant model
 18673 ;;
 18674                           
 18675     1946                     _DISP_Clr:	
 18676                           ;psect for function _DISP_Clr
 18677                           
 18678     1946                     l7410:	
 18679                           ;incstack = 0
 18680                           ; Regs used in _DISP_Clr: [wreg+status,2+status,0+pclath+cstack]
 18681                           
 18682                           
 18683                           ;disp.c: 97:   DISP_Off();
 18684     1946  31A6  26B4  3199   	fcall	_DISP_Off
 18685     1949                     l7412:
 18686                           
 18687                           ;disp.c: 99:   for (uint8_t page = 0; page <= 7; page++)
 18688     1949  01F6               	clrf	DISP_Clr@page
 18689     194A                     l7418:
 18690                           
 18691                           ;disp.c: 100:   {;disp.c: 102:     DISP_DataAddress(page, 0);
 18692     194A  01F2               	clrf	DISP_DataAddress@start
 18693     194B  0876               	movf	DISP_Clr@page,w
 18694     194C  319A  2297  3199   	fcall	_DISP_DataAddress
 18695     194F                     l7420:
 18696                           
 18697                           ;disp.c: 103:     for (uint8_t i = 0; i < 128; i++)
 18698     194F  01F5               	clrf	DISP_Clr@i
 18699     1950                     l7426:
 18700                           
 18701                           ;disp.c: 104:     {;disp.c: 105:       I2C_Write(0x00);
 18702     1950  3000               	movlw	0
 18703     1951  319C  249B  3199   	fcall	_I2C_Write
 18704     1954                     l7428:
 18705                           
 18706                           ;disp.c: 106:     }
 18707     1954  3001               	movlw	1
 18708     1955  07F5               	addwf	DISP_Clr@i,f
 18709     1956                     l7430:
 18710     1956  3080               	movlw	128
 18711     1957  0275               	subwf	DISP_Clr@i,w
 18712     1958  1C03               	skipc
 18713     1959  295B               	goto	u7871
 18714     195A  295C               	goto	u7870
 18715     195B                     u7871:
 18716     195B  2950               	goto	l7426
 18717     195C                     u7870:
 18718     195C                     l7432:
 18719                           
 18720                           ;disp.c: 107:   }
 18721     195C  3001               	movlw	1
 18722     195D  07F6               	addwf	DISP_Clr@page,f
 18723     195E                     l7434:
 18724     195E  3008               	movlw	8
 18725     195F  0276               	subwf	DISP_Clr@page,w
 18726     1960  1C03               	skipc
 18727     1961  2963               	goto	u7881
 18728     1962  2964               	goto	u7880
 18729     1963                     u7881:
 18730     1963  294A               	goto	l7418
 18731     1964                     u7880:
 18732     1964                     l7436:
 18733                           
 18734                           ;disp.c: 108:   I2C_Stop();
 18735     1964  31A7  2732  3199   	fcall	_I2C_Stop
 18736                           
 18737                           ;disp.c: 110:   DISP_On();
 18738     1967  31A6  26B9  3199   	fcall	_DISP_On
 18739     196A                     l710:
 18740     196A  0008               	return
 18741     196B                     __end_of_DISP_Clr:
 18742                           
 18743                           	psect	text75
 18744     26B9                     __ptext75:	
 18745 ;; *************** function _DISP_On *****************
 18746 ;; Defined at:
 18747 ;;		line 113 in file "disp.c"
 18748 ;; Parameters:    Size  Location     Type
 18749 ;;		None
 18750 ;; Auto vars:     Size  Location     Type
 18751 ;;		None
 18752 ;; Return value:  Size  Location     Type
 18753 ;;                  1    wreg      void 
 18754 ;; Registers used:
 18755 ;;		wreg, status,2, status,0, pclath, cstack
 18756 ;; Tracked objects:
 18757 ;;		On entry : 0/0
 18758 ;;		On exit  : 0/0
 18759 ;;		Unchanged: 0/0
 18760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18765 ;;Total ram usage:        0 bytes
 18766 ;; Hardware stack levels used: 1
 18767 ;; Hardware stack levels required when called: 2
 18768 ;; This function calls:
 18769 ;;		_DISP_Command
 18770 ;; This function is called by:
 18771 ;;		_DISP_Clr
 18772 ;; This function uses a non-reentrant model
 18773 ;;
 18774                           
 18775     26B9                     _DISP_On:	
 18776                           ;psect for function _DISP_On
 18777                           
 18778     26B9                     l7170:	
 18779                           ;incstack = 0
 18780                           ; Regs used in _DISP_On: [wreg+status,2+status,0+pclath+cstack]
 18781                           
 18782                           
 18783                           ;disp.c: 115:   DISP_Command(0xAF);
 18784     26B9  30AF               	movlw	175
 18785     26BA  31A7  2780  31A6   	fcall	_DISP_Command
 18786     26BD                     l713:
 18787     26BD  0008               	return
 18788     26BE                     __end_of_DISP_On:
 18789                           
 18790                           	psect	text76
 18791     26B4                     __ptext76:	
 18792 ;; *************** function _DISP_Off *****************
 18793 ;; Defined at:
 18794 ;;		line 118 in file "disp.c"
 18795 ;; Parameters:    Size  Location     Type
 18796 ;;		None
 18797 ;; Auto vars:     Size  Location     Type
 18798 ;;		None
 18799 ;; Return value:  Size  Location     Type
 18800 ;;                  1    wreg      void 
 18801 ;; Registers used:
 18802 ;;		wreg, status,2, status,0, pclath, cstack
 18803 ;; Tracked objects:
 18804 ;;		On entry : 0/0
 18805 ;;		On exit  : 0/0
 18806 ;;		Unchanged: 0/0
 18807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18812 ;;Total ram usage:        0 bytes
 18813 ;; Hardware stack levels used: 1
 18814 ;; Hardware stack levels required when called: 3
 18815 ;; This function calls:
 18816 ;;		_DISP_Command
 18817 ;; This function is called by:
 18818 ;;		_DISP_Clr
 18819 ;; This function uses a non-reentrant model
 18820 ;;
 18821                           
 18822     26B4                     _DISP_Off:	
 18823                           ;psect for function _DISP_Off
 18824                           
 18825     26B4                     l7168:	
 18826                           ;incstack = 0
 18827                           ; Regs used in _DISP_Off: [wreg+status,2+status,0+pclath+cstack]
 18828                           
 18829                           
 18830                           ;disp.c: 120:   DISP_Command(0xAE);
 18831     26B4  30AE               	movlw	174
 18832     26B5  31A7  2780  31A6   	fcall	_DISP_Command
 18833     26B8                     l716:
 18834     26B8  0008               	return
 18835     26B9                     __end_of_DISP_Off:
 18836                           
 18837                           	psect	text77
 18838     2780                     __ptext77:	
 18839 ;; *************** function _DISP_Command *****************
 18840 ;; Defined at:
 18841 ;;		line 71 in file "disp.c"
 18842 ;; Parameters:    Size  Location     Type
 18843 ;;  command         1    wreg     unsigned char 
 18844 ;; Auto vars:     Size  Location     Type
 18845 ;;  command         1    2[COMMON] unsigned char 
 18846 ;; Return value:  Size  Location     Type
 18847 ;;                  1    wreg      void 
 18848 ;; Registers used:
 18849 ;;		wreg, status,2, status,0, pclath, cstack
 18850 ;; Tracked objects:
 18851 ;;		On entry : 0/0
 18852 ;;		On exit  : 0/0
 18853 ;;		Unchanged: 0/0
 18854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18859 ;;Total ram usage:        1 bytes
 18860 ;; Hardware stack levels used: 1
 18861 ;; Hardware stack levels required when called: 1
 18862 ;; This function calls:
 18863 ;;		_I2C_Start
 18864 ;;		_I2C_Stop
 18865 ;;		_I2C_Write
 18866 ;; This function is called by:
 18867 ;;		_DISP_On
 18868 ;;		_DISP_Off
 18869 ;; This function uses a non-reentrant model
 18870 ;;
 18871                           
 18872     2780                     _DISP_Command:	
 18873                           ;psect for function _DISP_Command
 18874                           
 18875                           
 18876                           ;incstack = 0
 18877                           ; Regs used in _DISP_Command: [wreg+status,2+status,0+pclath+cstack]
 18878                           ;DISP_Command@command stored from wreg
 18879     2780  00F2               	movwf	DISP_Command@command
 18880     2781                     l7164:
 18881                           
 18882                           ;disp.c: 71: void DISP_Command(uint8_t command);disp.c: 72: {;disp.c: 73:   I2C_Start();
 18883     2781  3198  202B  31A7   	fcall	_I2C_Start
 18884                           
 18885                           ;disp.c: 74:   I2C_Write(DISP_i2_addr);
 18886     2784  0020               	movlb	0	; select bank0
 18887     2785  085A               	movf	_DISP_i2_addr,w
 18888     2786  319C  249B  31A7   	fcall	_I2C_Write
 18889                           
 18890                           ;disp.c: 75:   I2C_Write(128);
 18891     2789  3080               	movlw	128
 18892     278A  319C  249B  31A7   	fcall	_I2C_Write
 18893                           
 18894                           ;disp.c: 76:   I2C_Write(command);
 18895     278D  0872               	movf	DISP_Command@command,w
 18896     278E  319C  249B  31A7   	fcall	_I2C_Write
 18897                           
 18898                           ;disp.c: 77:   I2C_Stop();
 18899     2791  31A7  2732  31A7   	fcall	_I2C_Stop
 18900     2794                     l700:
 18901     2794  0008               	return
 18902     2795                     __end_of_DISP_Command:
 18903                           
 18904                           	psect	text78
 18905     2732                     __ptext78:	
 18906 ;; *************** function _I2C_Stop *****************
 18907 ;; Defined at:
 18908 ;;		line 30 in file "disp.c"
 18909 ;; Parameters:    Size  Location     Type
 18910 ;;		None
 18911 ;; Auto vars:     Size  Location     Type
 18912 ;;		None
 18913 ;; Return value:  Size  Location     Type
 18914 ;;                  1    wreg      void 
 18915 ;; Registers used:
 18916 ;;		wreg
 18917 ;; Tracked objects:
 18918 ;;		On entry : 0/0
 18919 ;;		On exit  : 0/0
 18920 ;;		Unchanged: 0/0
 18921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18926 ;;Total ram usage:        0 bytes
 18927 ;; Hardware stack levels used: 1
 18928 ;; Hardware stack levels required when called: 1
 18929 ;; This function calls:
 18930 ;;		Nothing
 18931 ;; This function is called by:
 18932 ;;		_DISP_Command
 18933 ;;		_DISP_Clr
 18934 ;;		_DISP_Init
 18935 ;;		_DISP_Str
 18936 ;; This function uses a non-reentrant model
 18937 ;;
 18938                           
 18939     2732                     _I2C_Stop:	
 18940                           ;psect for function _I2C_Stop
 18941                           
 18942     2732                     l7132:	
 18943                           ;incstack = 0
 18944                           ; Regs used in _I2C_Stop: [wreg]
 18945                           
 18946                           
 18947                           ;disp.c: 32:   TRISBbits.TRISB7 = 0;
 18948     2732  0021               	movlb	1	; select bank1
 18949     2733  138D               	bcf	13,7	;volatile
 18950     2734                     l7134:
 18951                           
 18952                           ;disp.c: 33:   _delay((unsigned long)(20));
 18953     2734  3006               	movlw	6
 18954     2735                     u11087:
 18955     2735  0B89               	decfsz	9,f
 18956     2736  2F35               	goto	u11087
 18957     2737  3200               	nop2
 18958     2738                     l7136:
 18959                           
 18960                           ;disp.c: 34:   TRISBbits.TRISB6 = 1;
 18961     2738  0021               	movlb	1	; select bank1
 18962     2739  170D               	bsf	13,6	;volatile
 18963                           
 18964                           ;disp.c: 35:   _delay((unsigned long)(20));
 18965     273A  3006               	movlw	6
 18966     273B                     u11097:
 18967     273B  0B89               	decfsz	9,f
 18968     273C  2F3B               	goto	u11097
 18969     273D  3200               	nop2
 18970     273E                     l7138:
 18971                           
 18972                           ;disp.c: 36:   TRISBbits.TRISB7 = 1;
 18973     273E  0021               	movlb	1	; select bank1
 18974     273F  178D               	bsf	13,7	;volatile
 18975                           
 18976                           ;disp.c: 37:   _delay((unsigned long)(20));
 18977     2740  3006               	movlw	6
 18978     2741                     u11107:
 18979     2741  0B89               	decfsz	9,f
 18980     2742  2F41               	goto	u11107
 18981     2743  3200               	nop2
 18982     2744                     l690:
 18983     2744  0008               	return
 18984     2745                     __end_of_I2C_Stop:
 18985                           
 18986                           	psect	text79
 18987     1A97                     __ptext79:	
 18988 ;; *************** function _DISP_DataAddress *****************
 18989 ;; Defined at:
 18990 ;;		line 80 in file "disp.c"
 18991 ;; Parameters:    Size  Location     Type
 18992 ;;  page            1    wreg     unsigned char 
 18993 ;;  start           1    2[COMMON] unsigned char 
 18994 ;; Auto vars:     Size  Location     Type
 18995 ;;  page            1    4[COMMON] unsigned char 
 18996 ;; Return value:  Size  Location     Type
 18997 ;;                  1    wreg      void 
 18998 ;; Registers used:
 18999 ;;		wreg, status,2, status,0, pclath, cstack
 19000 ;; Tracked objects:
 19001 ;;		On entry : 0/0
 19002 ;;		On exit  : 0/0
 19003 ;;		Unchanged: 0/0
 19004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19005 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19008 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19009 ;;Total ram usage:        3 bytes
 19010 ;; Hardware stack levels used: 1
 19011 ;; Hardware stack levels required when called: 1
 19012 ;; This function calls:
 19013 ;;		_I2C_Start
 19014 ;;		_I2C_Write
 19015 ;; This function is called by:
 19016 ;;		_DISP_Clr
 19017 ;;		_DISP_Str
 19018 ;; This function uses a non-reentrant model
 19019 ;;
 19020                           
 19021     1A97                     _DISP_DataAddress:	
 19022                           ;psect for function _DISP_DataAddress
 19023                           
 19024                           
 19025                           ;incstack = 0
 19026                           ; Regs used in _DISP_DataAddress: [wreg+status,2+status,0+pclath+cstack]
 19027                           ;DISP_DataAddress@page stored from wreg
 19028     1A97  00F4               	movwf	DISP_DataAddress@page
 19029     1A98                     l7166:
 19030                           
 19031                           ;disp.c: 80: void DISP_DataAddress(uint8_t page, uint8_t start);disp.c: 81: {;disp.c: 82
      +                          :   I2C_Start();
 19032     1A98  3198  202B  319A   	fcall	_I2C_Start
 19033                           
 19034                           ;disp.c: 83:   I2C_Write(DISP_i2_addr);
 19035     1A9B  0020               	movlb	0	; select bank0
 19036     1A9C  085A               	movf	_DISP_i2_addr,w
 19037     1A9D  319C  249B  319A   	fcall	_I2C_Write
 19038                           
 19039                           ;disp.c: 84:   I2C_Write(0);
 19040     1AA0  3000               	movlw	0
 19041     1AA1  319C  249B  319A   	fcall	_I2C_Write
 19042                           
 19043                           ;disp.c: 85:   I2C_Write(0xB0 + page);
 19044     1AA4  0874               	movf	DISP_DataAddress@page,w
 19045     1AA5  3EB0               	addlw	176
 19046     1AA6  319C  249B  319A   	fcall	_I2C_Write
 19047                           
 19048                           ;disp.c: 86:   I2C_Write(start & 0x0f);
 19049     1AA9  0872               	movf	DISP_DataAddress@start,w
 19050     1AAA  390F               	andlw	15
 19051     1AAB  319C  249B  319A   	fcall	_I2C_Write
 19052                           
 19053                           ;disp.c: 87:   I2C_Write(0x10 + (start >> 4));
 19054     1AAE  0872               	movf	DISP_DataAddress@start,w
 19055     1AAF  00F3               	movwf	??_DISP_DataAddress
 19056     1AB0  3004               	movlw	4
 19057     1AB1                     u7405:
 19058     1AB1  36F3               	lsrf	??_DISP_DataAddress,f
 19059     1AB2  0B89               	decfsz	9,f
 19060     1AB3  2AB1               	goto	u7405
 19061     1AB4  0873               	movf	??_DISP_DataAddress,w
 19062     1AB5  3E10               	addlw	16
 19063     1AB6  319C  249B  319A   	fcall	_I2C_Write
 19064                           
 19065                           ;disp.c: 89:   I2C_Start();
 19066     1AB9  3198  202B  319A   	fcall	_I2C_Start
 19067                           
 19068                           ;disp.c: 90:   I2C_Write(DISP_i2_addr);
 19069     1ABC  0020               	movlb	0	; select bank0
 19070     1ABD  085A               	movf	_DISP_i2_addr,w
 19071     1ABE  319C  249B  319A   	fcall	_I2C_Write
 19072                           
 19073                           ;disp.c: 91:   I2C_Write(64);
 19074     1AC1  3040               	movlw	64
 19075     1AC2  319C  249B  319A   	fcall	_I2C_Write
 19076     1AC5                     l703:
 19077     1AC5  0008               	return
 19078     1AC6                     __end_of_DISP_DataAddress:
 19079                           
 19080                           	psect	text80
 19081     1C9B                     __ptext80:	
 19082 ;; *************** function _I2C_Write *****************
 19083 ;; Defined at:
 19084 ;;		line 41 in file "disp.c"
 19085 ;; Parameters:    Size  Location     Type
 19086 ;;  value           1    wreg     unsigned char 
 19087 ;; Auto vars:     Size  Location     Type
 19088 ;;  value           1    0[COMMON] unsigned char 
 19089 ;;  i               1    1[COMMON] unsigned char 
 19090 ;; Return value:  Size  Location     Type
 19091 ;;                  1    wreg      void 
 19092 ;; Registers used:
 19093 ;;		wreg, status,2, status,0
 19094 ;; Tracked objects:
 19095 ;;		On entry : 0/0
 19096 ;;		On exit  : 0/0
 19097 ;;		Unchanged: 0/0
 19098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19102 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19103 ;;Total ram usage:        2 bytes
 19104 ;; Hardware stack levels used: 1
 19105 ;; Hardware stack levels required when called: 1
 19106 ;; This function calls:
 19107 ;;		Nothing
 19108 ;; This function is called by:
 19109 ;;		_DISP_Command
 19110 ;;		_DISP_DataAddress
 19111 ;;		_DISP_Clr
 19112 ;;		_DISP_Init
 19113 ;;		_DISP_Str
 19114 ;; This function uses a non-reentrant model
 19115 ;;
 19116                           
 19117     1C9B                     _I2C_Write:	
 19118                           ;psect for function _I2C_Write
 19119                           
 19120                           
 19121                           ;incstack = 0
 19122                           ; Regs used in _I2C_Write: [wreg+status,2+status,0]
 19123                           ;I2C_Write@value stored from wreg
 19124     1C9B  00F0               	movwf	I2C_Write@value
 19125     1C9C                     l7140:
 19126                           
 19127                           ;disp.c: 41: void I2C_Write(uint8_t value);disp.c: 42: {;disp.c: 43:   for (uint8_t i = 
      +                          0; i <= 7; i++)
 19128     1C9C  01F1               	clrf	I2C_Write@i
 19129     1C9D                     l693:
 19130                           
 19131                           ;disp.c: 44:   {;disp.c: 45:     if ((value & 0x80) == 0)
 19132     1C9D  1BF0               	btfsc	I2C_Write@value,7
 19133     1C9E  2CA0               	goto	u7381
 19134     1C9F  2CA1               	goto	u7380
 19135     1CA0                     u7381:
 19136     1CA0  2CA4               	goto	l695
 19137     1CA1                     u7380:
 19138     1CA1                     l7146:
 19139                           
 19140                           ;disp.c: 46:     {;disp.c: 47:       TRISBbits.TRISB7 = 0;
 19141     1CA1  0021               	movlb	1	; select bank1
 19142     1CA2  138D               	bcf	13,7	;volatile
 19143                           
 19144                           ;disp.c: 48:     }
 19145     1CA3  2CA6               	goto	l7148
 19146     1CA4                     l695:	
 19147                           ;disp.c: 49:     else
 19148                           
 19149                           
 19150                           ;disp.c: 50:     {;disp.c: 51:       TRISBbits.TRISB7 = 1;
 19151     1CA4  0021               	movlb	1	; select bank1
 19152     1CA5  178D               	bsf	13,7	;volatile
 19153     1CA6                     l7148:
 19154                           
 19155                           ;disp.c: 54:     _delay((unsigned long)(20));
 19156     1CA6  3006               	movlw	6
 19157     1CA7                     u11117:
 19158     1CA7  0B89               	decfsz	9,f
 19159     1CA8  2CA7               	goto	u11117
 19160     1CA9  3200               	nop2
 19161     1CAA                     l7150:
 19162                           
 19163                           ;disp.c: 56:     TRISBbits.TRISB6 = 1;
 19164     1CAA  0021               	movlb	1	; select bank1
 19165     1CAB  170D               	bsf	13,6	;volatile
 19166                           
 19167                           ;disp.c: 57:     _delay((unsigned long)(20));
 19168     1CAC  3006               	movlw	6
 19169     1CAD                     u11127:
 19170     1CAD  0B89               	decfsz	9,f
 19171     1CAE  2CAD               	goto	u11127
 19172     1CAF  3200               	nop2
 19173     1CB0                     l7152:
 19174                           
 19175                           ;disp.c: 58:     TRISBbits.TRISB6 = 0;
 19176     1CB0  0021               	movlb	1	; select bank1
 19177     1CB1  130D               	bcf	13,6	;volatile
 19178                           
 19179                           ;disp.c: 59:     _delay((unsigned long)(20));
 19180     1CB2  3006               	movlw	6
 19181     1CB3                     u11137:
 19182     1CB3  0B89               	decfsz	9,f
 19183     1CB4  2CB3               	goto	u11137
 19184     1CB5  3200               	nop2
 19185     1CB6                     l7154:
 19186                           
 19187                           ;disp.c: 60:     value = (uint8_t) (value << 1);
 19188     1CB6  3570               	lslf	I2C_Write@value,w
 19189     1CB7  00F0               	movwf	I2C_Write@value
 19190     1CB8                     l7156:
 19191                           
 19192                           ;disp.c: 61:   }
 19193     1CB8  3001               	movlw	1
 19194     1CB9  07F1               	addwf	I2C_Write@i,f
 19195     1CBA  3008               	movlw	8
 19196     1CBB  0271               	subwf	I2C_Write@i,w
 19197     1CBC  1C03               	skipc
 19198     1CBD  2CBF               	goto	u7391
 19199     1CBE  2CC0               	goto	u7390
 19200     1CBF                     u7391:
 19201     1CBF  2C9D               	goto	l693
 19202     1CC0                     u7390:
 19203     1CC0                     l694:
 19204                           
 19205                           ;disp.c: 63:   TRISBbits.TRISB7 = 1;
 19206     1CC0  0021               	movlb	1	; select bank1
 19207     1CC1  178D               	bsf	13,7	;volatile
 19208     1CC2                     l7158:
 19209                           
 19210                           ;disp.c: 64:   _delay((unsigned long)(20));
 19211     1CC2  3006               	movlw	6
 19212     1CC3                     u11147:
 19213     1CC3  0B89               	decfsz	9,f
 19214     1CC4  2CC3               	goto	u11147
 19215     1CC5  3200               	nop2
 19216     1CC6                     l7160:
 19217                           
 19218                           ;disp.c: 65:   TRISBbits.TRISB6 = 1;
 19219     1CC6  0021               	movlb	1	; select bank1
 19220     1CC7  170D               	bsf	13,6	;volatile
 19221                           
 19222                           ;disp.c: 66:   _delay((unsigned long)(20));
 19223     1CC8  3006               	movlw	6
 19224     1CC9                     u11157:
 19225     1CC9  0B89               	decfsz	9,f
 19226     1CCA  2CC9               	goto	u11157
 19227     1CCB  3200               	nop2
 19228     1CCC                     l7162:
 19229                           
 19230                           ;disp.c: 67:   TRISBbits.TRISB6 = 0;
 19231     1CCC  0021               	movlb	1	; select bank1
 19232     1CCD  130D               	bcf	13,6	;volatile
 19233                           
 19234                           ;disp.c: 68:   _delay((unsigned long)(20));
 19235     1CCE  3006               	movlw	6
 19236     1CCF                     u11167:
 19237     1CCF  0B89               	decfsz	9,f
 19238     1CD0  2CCF               	goto	u11167
 19239     1CD1  3200               	nop2
 19240     1CD2                     l697:
 19241     1CD2  0008               	return
 19242     1CD3                     __end_of_I2C_Write:
 19243                           
 19244                           	psect	text81
 19245     182B                     __ptext81:	
 19246 ;; *************** function _I2C_Start *****************
 19247 ;; Defined at:
 19248 ;;		line 18 in file "disp.c"
 19249 ;; Parameters:    Size  Location     Type
 19250 ;;		None
 19251 ;; Auto vars:     Size  Location     Type
 19252 ;;		None
 19253 ;; Return value:  Size  Location     Type
 19254 ;;                  1    wreg      void 
 19255 ;; Registers used:
 19256 ;;		wreg
 19257 ;; Tracked objects:
 19258 ;;		On entry : 0/0
 19259 ;;		On exit  : 0/0
 19260 ;;		Unchanged: 0/0
 19261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19266 ;;Total ram usage:        0 bytes
 19267 ;; Hardware stack levels used: 1
 19268 ;; Hardware stack levels required when called: 1
 19269 ;; This function calls:
 19270 ;;		Nothing
 19271 ;; This function is called by:
 19272 ;;		_DISP_Command
 19273 ;;		_DISP_DataAddress
 19274 ;;		_DISP_Init
 19275 ;; This function uses a non-reentrant model
 19276 ;;
 19277                           
 19278     182B                     _I2C_Start:	
 19279                           ;psect for function _I2C_Start
 19280                           
 19281     182B                     l7122:	
 19282                           ;incstack = 0
 19283                           ; Regs used in _I2C_Start: [wreg]
 19284                           
 19285                           
 19286                           ;disp.c: 20:   TRISBbits.TRISB6 = 1;
 19287     182B  0021               	movlb	1	; select bank1
 19288     182C  170D               	bsf	13,6	;volatile
 19289     182D                     l7124:
 19290                           
 19291                           ;disp.c: 21:   _delay((unsigned long)(20));
 19292     182D  3006               	movlw	6
 19293     182E                     u11177:
 19294     182E  0B89               	decfsz	9,f
 19295     182F  282E               	goto	u11177
 19296     1830  3200               	nop2
 19297     1831                     l7126:
 19298                           
 19299                           ;disp.c: 22:   TRISBbits.TRISB7 = 1;
 19300     1831  0021               	movlb	1	; select bank1
 19301     1832  178D               	bsf	13,7	;volatile
 19302                           
 19303                           ;disp.c: 23:   _delay((unsigned long)(20));
 19304     1833  3006               	movlw	6
 19305     1834                     u11187:
 19306     1834  0B89               	decfsz	9,f
 19307     1835  2834               	goto	u11187
 19308     1836  3200               	nop2
 19309     1837                     l7128:
 19310                           
 19311                           ;disp.c: 24:   TRISBbits.TRISB7 = 0;
 19312     1837  0021               	movlb	1	; select bank1
 19313     1838  138D               	bcf	13,7	;volatile
 19314                           
 19315                           ;disp.c: 25:   _delay((unsigned long)(20));
 19316     1839  3006               	movlw	6
 19317     183A                     u11197:
 19318     183A  0B89               	decfsz	9,f
 19319     183B  283A               	goto	u11197
 19320     183C  3200               	nop2
 19321     183D                     l7130:
 19322                           
 19323                           ;disp.c: 26:   TRISBbits.TRISB6 = 0;
 19324     183D  0021               	movlb	1	; select bank1
 19325     183E  130D               	bcf	13,6	;volatile
 19326                           
 19327                           ;disp.c: 27:   _delay((unsigned long)(20));
 19328     183F  3006               	movlw	6
 19329     1840                     u11207:
 19330     1840  0B89               	decfsz	9,f
 19331     1841  2840               	goto	u11207
 19332     1842  3200               	nop2
 19333     1843                     l687:
 19334     1843  0008               	return
 19335     1844                     __end_of_I2C_Start:
 19336                           
 19337                           	psect	text82
 19338     1EF6                     __ptext82:	
 19339 ;; *************** function _BUTTON_Run *****************
 19340 ;; Defined at:
 19341 ;;		line 32 in file "button.c"
 19342 ;; Parameters:    Size  Location     Type
 19343 ;;		None
 19344 ;; Auto vars:     Size  Location     Type
 19345 ;;		None
 19346 ;; Return value:  Size  Location     Type
 19347 ;;                  1    wreg      void 
 19348 ;; Registers used:
 19349 ;;		wreg, status,2, status,0
 19350 ;; Tracked objects:
 19351 ;;		On entry : 0/0
 19352 ;;		On exit  : 0/0
 19353 ;;		Unchanged: 0/0
 19354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19359 ;;Total ram usage:        0 bytes
 19360 ;; Hardware stack levels used: 1
 19361 ;; Hardware stack levels required when called: 1
 19362 ;; This function calls:
 19363 ;;		Nothing
 19364 ;; This function is called by:
 19365 ;;		_main
 19366 ;; This function uses a non-reentrant model
 19367 ;;
 19368                           
 19369     1EF6                     _BUTTON_Run:	
 19370                           ;psect for function _BUTTON_Run
 19371                           
 19372     1EF6                     l9272:	
 19373                           ;incstack = 0
 19374                           ; Regs used in _BUTTON_Run: [wreg+status,2+status,0]
 19375                           
 19376                           
 19377                           ;button.c: 51: if (PORTBbits.RB0 == 0)
 19378     1EF6  0020               	movlb	0	; select bank0
 19379     1EF7  180D               	btfsc	13,0	;volatile
 19380     1EF8  2EFA               	goto	u10931
 19381     1EF9  2EFB               	goto	u10930
 19382     1EFA                     u10931:
 19383     1EFA  2F0D               	goto	l9280
 19384     1EFB                     u10930:
 19385     1EFB                     l9274:
 19386                           
 19387                           ;button.c: 52: {;button.c: 53:   if(BUTTON_count < 250)
 19388     1EFB  30FA               	movlw	250
 19389     1EFC  0259               	subwf	_BUTTON_count,w
 19390     1EFD  1803               	skipnc
 19391     1EFE  2F00               	goto	u10941
 19392     1EFF  2F01               	goto	u10940
 19393     1F00                     u10941:
 19394     1F00  2F03               	goto	l904
 19395     1F01                     u10940:
 19396     1F01                     l9276:
 19397                           
 19398                           ;button.c: 54:   {;button.c: 55:     BUTTON_count++;
 19399     1F01  3001               	movlw	1
 19400     1F02  07D9               	addwf	_BUTTON_count,f
 19401     1F03                     l904:	
 19402                           ;button.c: 56:   }
 19403                           
 19404                           
 19405                           ;button.c: 58:   if(BUTTON_count == 80)
 19406     1F03  3050               	movlw	80
 19407     1F04  0659               	xorwf	_BUTTON_count,w
 19408     1F05  1D03               	btfss	3,2
 19409     1F06  2F08               	goto	u10951
 19410     1F07  2F09               	goto	u10950
 19411     1F08                     u10951:
 19412     1F08  2F26               	goto	l9290
 19413     1F09                     u10950:
 19414     1F09                     l9278:
 19415                           
 19416                           ;button.c: 59:   {;button.c: 60:     BUTTON_was_long_pressed =1;
 19417     1F09  3001               	movlw	1
 19418     1F0A  0021               	movlb	1	; select bank1
 19419     1F0B  00B8               	movwf	_BUTTON_was_long_pressed^(0+128)
 19420     1F0C  2F26               	goto	l9290
 19421     1F0D                     l9280:
 19422                           
 19423                           ;button.c: 65: {;button.c: 66:   if((!BUTTON_was_long_pressed) && (BUTTON_count > 0) && 
      +                          (BUTTON_count <= 250))
 19424     1F0D  0021               	movlb	1	; select bank1
 19425     1F0E  0838               	movf	_BUTTON_was_long_pressed^(0+128),w
 19426     1F0F  1D03               	btfss	3,2
 19427     1F10  2F12               	goto	u10961
 19428     1F11  2F13               	goto	u10960
 19429     1F12                     u10961:
 19430     1F12  2F22               	goto	l9288
 19431     1F13                     u10960:
 19432     1F13                     l9282:
 19433     1F13  0020               	movlb	0	; select bank0
 19434     1F14  0859               	movf	_BUTTON_count,w
 19435     1F15  1903               	btfsc	3,2
 19436     1F16  2F18               	goto	u10971
 19437     1F17  2F19               	goto	u10970
 19438     1F18                     u10971:
 19439     1F18  2F22               	goto	l9288
 19440     1F19                     u10970:
 19441     1F19                     l9284:
 19442     1F19  30FB               	movlw	251
 19443     1F1A  0259               	subwf	_BUTTON_count,w
 19444     1F1B  1803               	skipnc
 19445     1F1C  2F1E               	goto	u10981
 19446     1F1D  2F1F               	goto	u10980
 19447     1F1E                     u10981:
 19448     1F1E  2F22               	goto	l9288
 19449     1F1F                     u10980:
 19450     1F1F                     l9286:
 19451                           
 19452                           ;button.c: 67:   {;button.c: 68:     BUTTON_count = 251;
 19453     1F1F  30FB               	movlw	251
 19454     1F20  00D9               	movwf	_BUTTON_count
 19455                           
 19456                           ;button.c: 69:   }
 19457     1F21  2F24               	goto	l908
 19458     1F22                     l9288:
 19459                           
 19460                           ;button.c: 71:   {;button.c: 72:     BUTTON_count =0;
 19461     1F22  0020               	movlb	0	; select bank0
 19462     1F23  01D9               	clrf	_BUTTON_count
 19463     1F24                     l908:	
 19464                           ;button.c: 73:   }
 19465                           
 19466                           
 19467                           ;button.c: 75:   BUTTON_was_long_pressed =0;
 19468     1F24  0021               	movlb	1	; select bank1
 19469     1F25  01B8               	clrf	_BUTTON_was_long_pressed^(0+128)
 19470     1F26                     l9290:
 19471                           
 19472                           ;button.c: 133:   if (PORTBbits.RB1 == 0)
 19473     1F26  0020               	movlb	0	; select bank0
 19474     1F27  188D               	btfsc	13,1	;volatile
 19475     1F28  2F2A               	goto	u10991
 19476     1F29  2F2B               	goto	u10990
 19477     1F2A                     u10991:
 19478     1F2A  2F37               	goto	l9298
 19479     1F2B                     u10990:
 19480     1F2B                     l9292:
 19481                           
 19482                           ;button.c: 134:   {;button.c: 135:     BUTTON_Auto_count++;
 19483     1F2B  3001               	movlw	1
 19484     1F2C  0021               	movlb	1	; select bank1
 19485     1F2D  07B7               	addwf	_BUTTON_Auto_count^(0+128),f
 19486     1F2E                     l9294:
 19487                           
 19488                           ;button.c: 136:     if(BUTTON_Auto_count >= 20)
 19489     1F2E  3014               	movlw	20
 19490     1F2F  0237               	subwf	_BUTTON_Auto_count^(0+128),w
 19491     1F30  1C03               	skipc
 19492     1F31  2F33               	goto	u11001
 19493     1F32  2F34               	goto	u11000
 19494     1F33                     u11001:
 19495     1F33  2F39               	goto	l9300
 19496     1F34                     u11000:
 19497     1F34                     l9296:
 19498                           
 19499                           ;button.c: 137:     {;button.c: 138:       BUTTON_Auto_count=1;
 19500     1F34  3001               	movlw	1
 19501     1F35  00B7               	movwf	_BUTTON_Auto_count^(0+128)
 19502     1F36  2F39               	goto	l9300
 19503     1F37                     l9298:
 19504                           
 19505                           ;button.c: 142:   {;button.c: 143:     BUTTON_Auto_count =0;
 19506     1F37  0021               	movlb	1	; select bank1
 19507     1F38  01B7               	clrf	_BUTTON_Auto_count^(0+128)
 19508     1F39                     l9300:
 19509                           
 19510                           ;button.c: 147:   if (PORTBbits.RB2 == 0)
 19511     1F39  0020               	movlb	0	; select bank0
 19512     1F3A  190D               	btfsc	13,2	;volatile
 19513     1F3B  2F3D               	goto	u11011
 19514     1F3C  2F3E               	goto	u11010
 19515     1F3D                     u11011:
 19516     1F3D  2F4A               	goto	l9308
 19517     1F3E                     u11010:
 19518     1F3E                     l9302:
 19519                           
 19520                           ;button.c: 148:   {;button.c: 149:     BUTTON_Bypass_count++;
 19521     1F3E  3001               	movlw	1
 19522     1F3F  0021               	movlb	1	; select bank1
 19523     1F40  07B6               	addwf	_BUTTON_Bypass_count^(0+128),f
 19524     1F41                     l9304:
 19525                           
 19526                           ;button.c: 150:     if(BUTTON_Bypass_count >= 20)
 19527     1F41  3014               	movlw	20
 19528     1F42  0236               	subwf	_BUTTON_Bypass_count^(0+128),w
 19529     1F43  1C03               	skipc
 19530     1F44  2F46               	goto	u11021
 19531     1F45  2F47               	goto	u11020
 19532     1F46                     u11021:
 19533     1F46  2F4C               	goto	l915
 19534     1F47                     u11020:
 19535     1F47                     l9306:
 19536                           
 19537                           ;button.c: 151:     {;button.c: 152:       BUTTON_Bypass_count=1;
 19538     1F47  3001               	movlw	1
 19539     1F48  00B6               	movwf	_BUTTON_Bypass_count^(0+128)
 19540     1F49  2F4C               	goto	l915
 19541     1F4A                     l9308:
 19542                           
 19543                           ;button.c: 156:   {;button.c: 157:     BUTTON_Bypass_count =0;
 19544     1F4A  0021               	movlb	1	; select bank1
 19545     1F4B  01B6               	clrf	_BUTTON_Bypass_count^(0+128)
 19546     1F4C                     l915:
 19547     1F4C  0008               	return
 19548     1F4D                     __end_of_BUTTON_Run:
 19549                           
 19550                           	psect	text83
 19551     26F3                     __ptext83:	
 19552 ;; *************** function _BUTTON_Init *****************
 19553 ;; Defined at:
 19554 ;;		line 11 in file "button.c"
 19555 ;; Parameters:    Size  Location     Type
 19556 ;;		None
 19557 ;; Auto vars:     Size  Location     Type
 19558 ;;		None
 19559 ;; Return value:  Size  Location     Type
 19560 ;;                  1    wreg      void 
 19561 ;; Registers used:
 19562 ;;		None
 19563 ;; Tracked objects:
 19564 ;;		On entry : 0/0
 19565 ;;		On exit  : 0/0
 19566 ;;		Unchanged: 0/0
 19567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19572 ;;Total ram usage:        0 bytes
 19573 ;; Hardware stack levels used: 1
 19574 ;; Hardware stack levels required when called: 1
 19575 ;; This function calls:
 19576 ;;		Nothing
 19577 ;; This function is called by:
 19578 ;;		_main
 19579 ;; This function uses a non-reentrant model
 19580 ;;
 19581                           
 19582     26F3                     _BUTTON_Init:	
 19583                           ;psect for function _BUTTON_Init
 19584                           
 19585     26F3                     l9172:	
 19586                           ;incstack = 0
 19587                           ; Regs used in _BUTTON_Init: []
 19588                           
 19589                           
 19590                           ;button.c: 13:   TRISBbits.TRISB0 = 1;
 19591     26F3  0021               	movlb	1	; select bank1
 19592     26F4  140D               	bsf	13,0	;volatile
 19593                           
 19594                           ;button.c: 14:   WPUBbits.WPUB0 = 1;
 19595     26F5  0024               	movlb	4	; select bank4
 19596     26F6  140D               	bsf	13,0	;volatile
 19597                           
 19598                           ;button.c: 16:   TRISBbits.TRISB1 = 1;
 19599     26F7  0021               	movlb	1	; select bank1
 19600     26F8  148D               	bsf	13,1	;volatile
 19601                           
 19602                           ;button.c: 17:   WPUBbits.WPUB1 = 1;
 19603     26F9  0024               	movlb	4	; select bank4
 19604     26FA  148D               	bsf	13,1	;volatile
 19605                           
 19606                           ;button.c: 19:   TRISBbits.TRISB2 = 1;
 19607     26FB  0021               	movlb	1	; select bank1
 19608     26FC  150D               	bsf	13,2	;volatile
 19609                           
 19610                           ;button.c: 20:   WPUBbits.WPUB2 = 1;
 19611     26FD  0024               	movlb	4	; select bank4
 19612     26FE  150D               	bsf	13,2	;volatile
 19613     26FF                     l897:
 19614     26FF  0008               	return
 19615     2700                     __end_of_BUTTON_Init:
 19616                           
 19617                           	psect	text84
 19618     071D                     __ptext84:	
 19619 ;; *************** function _ADC_Run *****************
 19620 ;; Defined at:
 19621 ;;		line 57 in file "adc.c"
 19622 ;; Parameters:    Size  Location     Type
 19623 ;;		None
 19624 ;; Auto vars:     Size  Location     Type
 19625 ;;  r_sum           4   24[BANK0 ] long 
 19626 ;;  f_sum           4   20[BANK0 ] long 
 19627 ;;  s               1   29[BANK0 ] unsigned char 
 19628 ;;  i               1   28[BANK0 ] unsigned char 
 19629 ;; Return value:  Size  Location     Type
 19630 ;;                  1    wreg      void 
 19631 ;; Registers used:
 19632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19633 ;; Tracked objects:
 19634 ;;		On entry : 0/0
 19635 ;;		On exit  : 0/0
 19636 ;;		Unchanged: 0/0
 19637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19639 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19640 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19641 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19642 ;;Total ram usage:       16 bytes
 19643 ;; Hardware stack levels used: 1
 19644 ;; Hardware stack levels required when called: 2
 19645 ;; This function calls:
 19646 ;;		_ADC_GetSample
 19647 ;;		___aldiv
 19648 ;; This function is called by:
 19649 ;;		_main
 19650 ;; This function uses a non-reentrant model
 19651 ;;
 19652                           
 19653     071D                     _ADC_Run:	
 19654                           ;psect for function _ADC_Run
 19655                           
 19656     071D                     l9250:	
 19657                           ;incstack = 0
 19658                           ; Regs used in _ADC_Run: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19659                           
 19660                           
 19661                           ;adc.c: 62:   int32_t f_sum =0;
 19662     071D  3000               	movlw	0
 19663     071E  0020               	movlb	0	; select bank0
 19664     071F  00B7               	movwf	ADC_Run@f_sum+3
 19665     0720  3000               	movlw	0
 19666     0721  00B6               	movwf	ADC_Run@f_sum+2
 19667     0722  3000               	movlw	0
 19668     0723  00B5               	movwf	ADC_Run@f_sum+1
 19669     0724  3000               	movlw	0
 19670     0725  00B4               	movwf	ADC_Run@f_sum
 19671                           
 19672                           ;adc.c: 63:   int32_t r_sum =0;
 19673     0726  3000               	movlw	0
 19674     0727  00BB               	movwf	ADC_Run@r_sum+3
 19675     0728  3000               	movlw	0
 19676     0729  00BA               	movwf	ADC_Run@r_sum+2
 19677     072A  3000               	movlw	0
 19678     072B  00B9               	movwf	ADC_Run@r_sum+1
 19679     072C  3000               	movlw	0
 19680     072D  00B8               	movwf	ADC_Run@r_sum
 19681     072E                     l9252:
 19682                           
 19683                           ;adc.c: 65:   uint8_t i;;adc.c: 66:   uint8_t s;;adc.c: 69:   s=0;
 19684     072E  01BD               	clrf	ADC_Run@s
 19685     072F                     l9254:
 19686                           
 19687                           ;adc.c: 70:   for(i=0; i < (10 -1); i++)
 19688     072F  01BC               	clrf	ADC_Run@i
 19689     0730                     l9258:
 19690                           
 19691                           ;adc.c: 71:   {;adc.c: 72:     s++;
 19692     0730  3001               	movlw	1
 19693     0731  07BD               	addwf	ADC_Run@s,f
 19694     0732                     l9260:
 19695                           
 19696                           ;adc.c: 73:     f_sum += f_buffer[i] = f_buffer[s];
 19697     0732  353D               	lslf	ADC_Run@s,w
 19698     0733  3E34               	addlw	(low (_f_buffer| (0+256)))& (0+255)
 19699     0734  0086               	movwf	6
 19700     0735  3001               	movlw	1	; select bank2/3
 19701     0736  0087               	movwf	7
 19702     0737  3F40               	moviw [0]fsr1
 19703     0738  00AE               	movwf	??_ADC_Run
 19704     0739  3F41               	moviw [1]fsr1
 19705     073A  00AF               	movwf	??_ADC_Run+1
 19706     073B  353C               	lslf	ADC_Run@i,w
 19707     073C  3E34               	addlw	(low (_f_buffer| (0+256)))& (0+255)
 19708     073D  0086               	movwf	6
 19709     073E  3001               	movlw	1	; select bank2/3
 19710     073F  0087               	movwf	7
 19711     0740  082E               	movf	??_ADC_Run,w
 19712     0741  3FC0               	movwi [0]fsr1
 19713     0742  082F               	movf	??_ADC_Run+1,w
 19714     0743  3FC1               	movwi [1]fsr1
 19715     0744  082E               	movf	??_ADC_Run,w
 19716     0745  00B0               	movwf	??_ADC_Run+2
 19717     0746  082F               	movf	??_ADC_Run+1,w
 19718     0747  00B1               	movwf	??_ADC_Run+3
 19719     0748  3000               	movlw	0
 19720     0749  1BB1               	btfsc	??_ADC_Run+3,7
 19721     074A  30FF               	movlw	255
 19722     074B  00B2               	movwf	??_ADC_Run+4
 19723     074C  00B3               	movwf	??_ADC_Run+5
 19724     074D  0830               	movf	??_ADC_Run+2,w
 19725     074E  07B4               	addwf	ADC_Run@f_sum,f
 19726     074F  0831               	movf	??_ADC_Run+3,w
 19727     0750  3DB5               	addwfc	ADC_Run@f_sum+1,f
 19728     0751  0832               	movf	??_ADC_Run+4,w
 19729     0752  3DB6               	addwfc	ADC_Run@f_sum+2,f
 19730     0753  0833               	movf	??_ADC_Run+5,w
 19731     0754  3DB7               	addwfc	ADC_Run@f_sum+3,f
 19732     0755                     l9262:
 19733                           
 19734                           ;adc.c: 74:     r_sum += r_buffer[i] = r_buffer[s];
 19735     0755  353D               	lslf	ADC_Run@s,w
 19736     0756  3E20               	addlw	(low (_r_buffer| (0+256)))& (0+255)
 19737     0757  0086               	movwf	6
 19738     0758  3001               	movlw	1	; select bank2/3
 19739     0759  0087               	movwf	7
 19740     075A  3F40               	moviw [0]fsr1
 19741     075B  00AE               	movwf	??_ADC_Run
 19742     075C  3F41               	moviw [1]fsr1
 19743     075D  00AF               	movwf	??_ADC_Run+1
 19744     075E  353C               	lslf	ADC_Run@i,w
 19745     075F  3E20               	addlw	(low (_r_buffer| (0+256)))& (0+255)
 19746     0760  0086               	movwf	6
 19747     0761  3001               	movlw	1	; select bank2/3
 19748     0762  0087               	movwf	7
 19749     0763  082E               	movf	??_ADC_Run,w
 19750     0764  3FC0               	movwi [0]fsr1
 19751     0765  082F               	movf	??_ADC_Run+1,w
 19752     0766  3FC1               	movwi [1]fsr1
 19753     0767  082E               	movf	??_ADC_Run,w
 19754     0768  00B0               	movwf	??_ADC_Run+2
 19755     0769  082F               	movf	??_ADC_Run+1,w
 19756     076A  00B1               	movwf	??_ADC_Run+3
 19757     076B  3000               	movlw	0
 19758     076C  1BB1               	btfsc	??_ADC_Run+3,7
 19759     076D  30FF               	movlw	255
 19760     076E  00B2               	movwf	??_ADC_Run+4
 19761     076F  00B3               	movwf	??_ADC_Run+5
 19762     0770  0830               	movf	??_ADC_Run+2,w
 19763     0771  07B8               	addwf	ADC_Run@r_sum,f
 19764     0772  0831               	movf	??_ADC_Run+3,w
 19765     0773  3DB9               	addwfc	ADC_Run@r_sum+1,f
 19766     0774  0832               	movf	??_ADC_Run+4,w
 19767     0775  3DBA               	addwfc	ADC_Run@r_sum+2,f
 19768     0776  0833               	movf	??_ADC_Run+5,w
 19769     0777  3DBB               	addwfc	ADC_Run@r_sum+3,f
 19770                           
 19771                           ;adc.c: 75:   }
 19772     0778  3001               	movlw	1
 19773     0779  07BC               	addwf	ADC_Run@i,f
 19774     077A                     l9264:
 19775     077A  3009               	movlw	9
 19776     077B  023C               	subwf	ADC_Run@i,w
 19777     077C  1C03               	skipc
 19778     077D  2F7F               	goto	u10921
 19779     077E  2F80               	goto	u10920
 19780     077F                     u10921:
 19781     077F  2F30               	goto	l9258
 19782     0780                     u10920:
 19783     0780                     l9266:
 19784                           
 19785                           ;adc.c: 77:    f_sum += f_buffer[s] = ADC_GetSample(1);
 19786     0780  3001               	movlw	1
 19787     0781  319A  22C6  3187   	fcall	_ADC_GetSample
 19788     0784  0020               	movlb	0	; select bank0
 19789     0785  353D               	lslf	ADC_Run@s,w
 19790     0786  3E34               	addlw	(low (_f_buffer| (0+256)))& (0+255)
 19791     0787  0086               	movwf	6
 19792     0788  3001               	movlw	1	; select bank2/3
 19793     0789  0087               	movwf	7
 19794     078A  0870               	movf	?_ADC_GetSample,w
 19795     078B  3FC0               	movwi [0]fsr1
 19796     078C  0871               	movf	?_ADC_GetSample+1,w
 19797     078D  3FC1               	movwi [1]fsr1
 19798     078E  0870               	movf	?_ADC_GetSample,w
 19799     078F  00AE               	movwf	??_ADC_Run
 19800     0790  0871               	movf	?_ADC_GetSample+1,w
 19801     0791  00AF               	movwf	??_ADC_Run+1
 19802     0792  3000               	movlw	0
 19803     0793  1BAF               	btfsc	??_ADC_Run+1,7
 19804     0794  30FF               	movlw	255
 19805     0795  00B0               	movwf	??_ADC_Run+2
 19806     0796  00B1               	movwf	??_ADC_Run+3
 19807     0797  082E               	movf	??_ADC_Run,w
 19808     0798  07B4               	addwf	ADC_Run@f_sum,f
 19809     0799  082F               	movf	??_ADC_Run+1,w
 19810     079A  3DB5               	addwfc	ADC_Run@f_sum+1,f
 19811     079B  0830               	movf	??_ADC_Run+2,w
 19812     079C  3DB6               	addwfc	ADC_Run@f_sum+2,f
 19813     079D  0831               	movf	??_ADC_Run+3,w
 19814     079E  3DB7               	addwfc	ADC_Run@f_sum+3,f
 19815                           
 19816                           ;adc.c: 78:    r_sum += r_buffer[s] = ADC_GetSample(0);
 19817     079F  3000               	movlw	0
 19818     07A0  319A  22C6  3187   	fcall	_ADC_GetSample
 19819     07A3  0020               	movlb	0	; select bank0
 19820     07A4  353D               	lslf	ADC_Run@s,w
 19821     07A5  3E20               	addlw	(low (_r_buffer| (0+256)))& (0+255)
 19822     07A6  0086               	movwf	6
 19823     07A7  3001               	movlw	1	; select bank2/3
 19824     07A8  0087               	movwf	7
 19825     07A9  0870               	movf	?_ADC_GetSample,w
 19826     07AA  3FC0               	movwi [0]fsr1
 19827     07AB  0871               	movf	?_ADC_GetSample+1,w
 19828     07AC  3FC1               	movwi [1]fsr1
 19829     07AD  0870               	movf	?_ADC_GetSample,w
 19830     07AE  00AE               	movwf	??_ADC_Run
 19831     07AF  0871               	movf	?_ADC_GetSample+1,w
 19832     07B0  00AF               	movwf	??_ADC_Run+1
 19833     07B1  3000               	movlw	0
 19834     07B2  1BAF               	btfsc	??_ADC_Run+1,7
 19835     07B3  30FF               	movlw	255
 19836     07B4  00B0               	movwf	??_ADC_Run+2
 19837     07B5  00B1               	movwf	??_ADC_Run+3
 19838     07B6  082E               	movf	??_ADC_Run,w
 19839     07B7  07B8               	addwf	ADC_Run@r_sum,f
 19840     07B8  082F               	movf	??_ADC_Run+1,w
 19841     07B9  3DB9               	addwfc	ADC_Run@r_sum+1,f
 19842     07BA  0830               	movf	??_ADC_Run+2,w
 19843     07BB  3DBA               	addwfc	ADC_Run@r_sum+2,f
 19844     07BC  0831               	movf	??_ADC_Run+3,w
 19845     07BD  3DBB               	addwfc	ADC_Run@r_sum+3,f
 19846     07BE                     l9268:
 19847                           
 19848                           ;adc.c: 82:   global.adc_f_mV = (int16_t)(f_sum / 10);
 19849     07BE  3000               	movlw	0
 19850     07BF  00A3               	movwf	___aldiv@divisor+3
 19851     07C0  3000               	movlw	0
 19852     07C1  00A2               	movwf	___aldiv@divisor+2
 19853     07C2  3000               	movlw	0
 19854     07C3  00A1               	movwf	___aldiv@divisor+1
 19855     07C4  300A               	movlw	10
 19856     07C5  00A0               	movwf	___aldiv@divisor
 19857     07C6  0837               	movf	ADC_Run@f_sum+3,w
 19858     07C7  00A7               	movwf	___aldiv@dividend+3
 19859     07C8  0836               	movf	ADC_Run@f_sum+2,w
 19860     07C9  00A6               	movwf	___aldiv@dividend+2
 19861     07CA  0835               	movf	ADC_Run@f_sum+1,w
 19862     07CB  00A5               	movwf	___aldiv@dividend+1
 19863     07CC  0834               	movf	ADC_Run@f_sum,w
 19864     07CD  00A4               	movwf	___aldiv@dividend
 19865     07CE  3195  25A2  3187   	fcall	___aldiv
 19866     07D1  0020               	movlb	0	; select bank0
 19867     07D2  0821               	movf	?___aldiv+1,w
 19868     07D3  0021               	movlb	1	; select bank1
 19869     07D4  00D7               	movwf	((_global+1)^(0+128)+25)
 19870     07D5  0020               	movlb	0	; select bank0
 19871     07D6  0820               	movf	?___aldiv,w
 19872     07D7  0021               	movlb	1	; select bank1
 19873     07D8  00D6               	movwf	(_global^(0+128)+25)
 19874     07D9                     l9270:
 19875                           
 19876                           ;adc.c: 83:   global.adc_r_mV = (int16_t)(r_sum / 10);
 19877     07D9  3000               	movlw	0
 19878     07DA  0020               	movlb	0	; select bank0
 19879     07DB  00A3               	movwf	___aldiv@divisor+3
 19880     07DC  3000               	movlw	0
 19881     07DD  00A2               	movwf	___aldiv@divisor+2
 19882     07DE  3000               	movlw	0
 19883     07DF  00A1               	movwf	___aldiv@divisor+1
 19884     07E0  300A               	movlw	10
 19885     07E1  00A0               	movwf	___aldiv@divisor
 19886     07E2  083B               	movf	ADC_Run@r_sum+3,w
 19887     07E3  00A7               	movwf	___aldiv@dividend+3
 19888     07E4  083A               	movf	ADC_Run@r_sum+2,w
 19889     07E5  00A6               	movwf	___aldiv@dividend+2
 19890     07E6  0839               	movf	ADC_Run@r_sum+1,w
 19891     07E7  00A5               	movwf	___aldiv@dividend+1
 19892     07E8  0838               	movf	ADC_Run@r_sum,w
 19893     07E9  00A4               	movwf	___aldiv@dividend
 19894     07EA  3195  25A2  3187   	fcall	___aldiv
 19895     07ED  0020               	movlb	0	; select bank0
 19896     07EE  0821               	movf	?___aldiv+1,w
 19897     07EF  0021               	movlb	1	; select bank1
 19898     07F0  00D5               	movwf	((_global+1)^(0+128)+23)
 19899     07F1  0020               	movlb	0	; select bank0
 19900     07F2  0820               	movf	?___aldiv,w
 19901     07F3  0021               	movlb	1	; select bank1
 19902     07F4  00D4               	movwf	(_global^(0+128)+23)
 19903     07F5                     l1664:
 19904     07F5  0008               	return
 19905     07F6                     __end_of_ADC_Run:
 19906                           
 19907                           	psect	text85
 19908     15A2                     __ptext85:	
 19909 ;; *************** function ___aldiv *****************
 19910 ;; Defined at:
 19911 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\aldiv.c"
 19912 ;; Parameters:    Size  Location     Type
 19913 ;;  divisor         4    0[BANK0 ] long 
 19914 ;;  dividend        4    4[BANK0 ] long 
 19915 ;; Auto vars:     Size  Location     Type
 19916 ;;  quotient        4   10[BANK0 ] long 
 19917 ;;  sign            1    9[BANK0 ] unsigned char 
 19918 ;;  counter         1    8[BANK0 ] unsigned char 
 19919 ;; Return value:  Size  Location     Type
 19920 ;;                  4    0[BANK0 ] long 
 19921 ;; Registers used:
 19922 ;;		wreg, status,2, status,0
 19923 ;; Tracked objects:
 19924 ;;		On entry : 0/0
 19925 ;;		On exit  : 0/0
 19926 ;;		Unchanged: 0/0
 19927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19928 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19929 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19931 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19932 ;;Total ram usage:       14 bytes
 19933 ;; Hardware stack levels used: 1
 19934 ;; Hardware stack levels required when called: 1
 19935 ;; This function calls:
 19936 ;;		Nothing
 19937 ;; This function is called by:
 19938 ;;		_UTILI_deciWatt_to_centiVolt
 19939 ;;		_UTILI_centiVolt_to_deciWatt
 19940 ;;		_UTILI_CalPWR
 19941 ;;		_UTILI_CalSWR
 19942 ;;		_MENU_CalPWR_Run
 19943 ;;		_ADC_Run
 19944 ;; This function uses a non-reentrant model
 19945 ;;
 19946                           
 19947     15A2                     ___aldiv:	
 19948                           ;psect for function ___aldiv
 19949                           
 19950     15A2                     l7552:	
 19951                           ;incstack = 0
 19952                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 19953                           
 19954     15A2  0020               	movlb	0	; select bank0
 19955     15A3  01A9               	clrf	___aldiv@sign
 19956     15A4                     l7554:
 19957     15A4  1FA3               	btfss	___aldiv@divisor+3,7
 19958     15A5  2DA7               	goto	u8071
 19959     15A6  2DA8               	goto	u8070
 19960     15A7                     u8071:
 19961     15A7  2DB5               	goto	l2243
 19962     15A8                     u8070:
 19963     15A8                     l7556:
 19964     15A8  09A0               	comf	___aldiv@divisor,f
 19965     15A9  09A1               	comf	___aldiv@divisor+1,f
 19966     15AA  09A2               	comf	___aldiv@divisor+2,f
 19967     15AB  09A3               	comf	___aldiv@divisor+3,f
 19968     15AC  0AA0               	incf	___aldiv@divisor,f
 19969     15AD  1903               	skipnz
 19970     15AE  0AA1               	incf	___aldiv@divisor+1,f
 19971     15AF  1903               	skipnz
 19972     15B0  0AA2               	incf	___aldiv@divisor+2,f
 19973     15B1  1903               	skipnz
 19974     15B2  0AA3               	incf	___aldiv@divisor+3,f
 19975     15B3  3001               	movlw	1
 19976     15B4  00A9               	movwf	___aldiv@sign
 19977     15B5                     l2243:
 19978     15B5  1FA7               	btfss	___aldiv@dividend+3,7
 19979     15B6  2DB8               	goto	u8081
 19980     15B7  2DB9               	goto	u8080
 19981     15B8                     u8081:
 19982     15B8  2DC6               	goto	l7562
 19983     15B9                     u8080:
 19984     15B9                     l7558:
 19985     15B9  09A4               	comf	___aldiv@dividend,f
 19986     15BA  09A5               	comf	___aldiv@dividend+1,f
 19987     15BB  09A6               	comf	___aldiv@dividend+2,f
 19988     15BC  09A7               	comf	___aldiv@dividend+3,f
 19989     15BD  0AA4               	incf	___aldiv@dividend,f
 19990     15BE  1903               	skipnz
 19991     15BF  0AA5               	incf	___aldiv@dividend+1,f
 19992     15C0  1903               	skipnz
 19993     15C1  0AA6               	incf	___aldiv@dividend+2,f
 19994     15C2  1903               	skipnz
 19995     15C3  0AA7               	incf	___aldiv@dividend+3,f
 19996     15C4                     l7560:
 19997     15C4  3001               	movlw	1
 19998     15C5  06A9               	xorwf	___aldiv@sign,f
 19999     15C6                     l7562:
 20000     15C6  3000               	movlw	0
 20001     15C7  00AD               	movwf	___aldiv@quotient+3
 20002     15C8  3000               	movlw	0
 20003     15C9  00AC               	movwf	___aldiv@quotient+2
 20004     15CA  3000               	movlw	0
 20005     15CB  00AB               	movwf	___aldiv@quotient+1
 20006     15CC  3000               	movlw	0
 20007     15CD  00AA               	movwf	___aldiv@quotient
 20008     15CE                     l7564:
 20009     15CE  0823               	movf	___aldiv@divisor+3,w
 20010     15CF  0422               	iorwf	___aldiv@divisor+2,w
 20011     15D0  0421               	iorwf	___aldiv@divisor+1,w
 20012     15D1  0420               	iorwf	___aldiv@divisor,w
 20013     15D2  1903               	skipnz
 20014     15D3  2DD5               	goto	u8091
 20015     15D4  2DD6               	goto	u8090
 20016     15D5                     u8091:
 20017     15D5  2E15               	goto	l7584
 20018     15D6                     u8090:
 20019     15D6                     l7566:
 20020     15D6  3001               	movlw	1
 20021     15D7  00A8               	movwf	___aldiv@counter
 20022     15D8  2DE2               	goto	l7570
 20023     15D9                     l7568:
 20024     15D9  3001               	movlw	1
 20025     15DA                     u8105:
 20026     15DA  35A0               	lslf	___aldiv@divisor,f
 20027     15DB  0DA1               	rlf	___aldiv@divisor+1,f
 20028     15DC  0DA2               	rlf	___aldiv@divisor+2,f
 20029     15DD  0DA3               	rlf	___aldiv@divisor+3,f
 20030     15DE  0B89               	decfsz	9,f
 20031     15DF  2DDA               	goto	u8105
 20032     15E0  3001               	movlw	1
 20033     15E1  07A8               	addwf	___aldiv@counter,f
 20034     15E2                     l7570:
 20035     15E2  1FA3               	btfss	___aldiv@divisor+3,7
 20036     15E3  2DE5               	goto	u8111
 20037     15E4  2DE6               	goto	u8110
 20038     15E5                     u8111:
 20039     15E5  2DD9               	goto	l7568
 20040     15E6                     u8110:
 20041     15E6                     l7572:
 20042     15E6  3001               	movlw	1
 20043     15E7                     u8125:
 20044     15E7  35AA               	lslf	___aldiv@quotient,f
 20045     15E8  0DAB               	rlf	___aldiv@quotient+1,f
 20046     15E9  0DAC               	rlf	___aldiv@quotient+2,f
 20047     15EA  0DAD               	rlf	___aldiv@quotient+3,f
 20048     15EB  0B89               	decfsz	9,f
 20049     15EC  2DE7               	goto	u8125
 20050     15ED                     l7574:
 20051     15ED  0823               	movf	___aldiv@divisor+3,w
 20052     15EE  0227               	subwf	___aldiv@dividend+3,w
 20053     15EF  1D03               	skipz
 20054     15F0  2DFB               	goto	u8135
 20055     15F1  0822               	movf	___aldiv@divisor+2,w
 20056     15F2  0226               	subwf	___aldiv@dividend+2,w
 20057     15F3  1D03               	skipz
 20058     15F4  2DFB               	goto	u8135
 20059     15F5  0821               	movf	___aldiv@divisor+1,w
 20060     15F6  0225               	subwf	___aldiv@dividend+1,w
 20061     15F7  1D03               	skipz
 20062     15F8  2DFB               	goto	u8135
 20063     15F9  0820               	movf	___aldiv@divisor,w
 20064     15FA  0224               	subwf	___aldiv@dividend,w
 20065     15FB                     u8135:
 20066     15FB  1C03               	skipc
 20067     15FC  2DFE               	goto	u8131
 20068     15FD  2DFF               	goto	u8130
 20069     15FE                     u8131:
 20070     15FE  2E08               	goto	l7580
 20071     15FF                     u8130:
 20072     15FF                     l7576:
 20073     15FF  0820               	movf	___aldiv@divisor,w
 20074     1600  02A4               	subwf	___aldiv@dividend,f
 20075     1601  0821               	movf	___aldiv@divisor+1,w
 20076     1602  3BA5               	subwfb	___aldiv@dividend+1,f
 20077     1603  0822               	movf	___aldiv@divisor+2,w
 20078     1604  3BA6               	subwfb	___aldiv@dividend+2,f
 20079     1605  0823               	movf	___aldiv@divisor+3,w
 20080     1606  3BA7               	subwfb	___aldiv@dividend+3,f
 20081     1607                     l7578:
 20082     1607  142A               	bsf	___aldiv@quotient,0
 20083     1608                     l7580:
 20084     1608  3001               	movlw	1
 20085     1609                     u8145:
 20086     1609  36A3               	lsrf	___aldiv@divisor+3,f
 20087     160A  0CA2               	rrf	___aldiv@divisor+2,f
 20088     160B  0CA1               	rrf	___aldiv@divisor+1,f
 20089     160C  0CA0               	rrf	___aldiv@divisor,f
 20090     160D  0B89               	decfsz	9,f
 20091     160E  2E09               	goto	u8145
 20092     160F                     l7582:
 20093     160F  3001               	movlw	1
 20094     1610  02A8               	subwf	___aldiv@counter,f
 20095     1611  1D03               	btfss	3,2
 20096     1612  2E14               	goto	u8151
 20097     1613  2E15               	goto	u8150
 20098     1614                     u8151:
 20099     1614  2DE6               	goto	l7572
 20100     1615                     u8150:
 20101     1615                     l7584:
 20102     1615  0829               	movf	___aldiv@sign,w
 20103     1616  1903               	btfsc	3,2
 20104     1617  2E19               	goto	u8161
 20105     1618  2E1A               	goto	u8160
 20106     1619                     u8161:
 20107     1619  2E25               	goto	l7588
 20108     161A                     u8160:
 20109     161A                     l7586:
 20110     161A  09AA               	comf	___aldiv@quotient,f
 20111     161B  09AB               	comf	___aldiv@quotient+1,f
 20112     161C  09AC               	comf	___aldiv@quotient+2,f
 20113     161D  09AD               	comf	___aldiv@quotient+3,f
 20114     161E  0AAA               	incf	___aldiv@quotient,f
 20115     161F  1903               	skipnz
 20116     1620  0AAB               	incf	___aldiv@quotient+1,f
 20117     1621  1903               	skipnz
 20118     1622  0AAC               	incf	___aldiv@quotient+2,f
 20119     1623  1903               	skipnz
 20120     1624  0AAD               	incf	___aldiv@quotient+3,f
 20121     1625                     l7588:
 20122     1625  082D               	movf	___aldiv@quotient+3,w
 20123     1626  00A3               	movwf	?___aldiv+3
 20124     1627  082C               	movf	___aldiv@quotient+2,w
 20125     1628  00A2               	movwf	?___aldiv+2
 20126     1629  082B               	movf	___aldiv@quotient+1,w
 20127     162A  00A1               	movwf	?___aldiv+1
 20128     162B  082A               	movf	___aldiv@quotient,w
 20129     162C  00A0               	movwf	?___aldiv
 20130     162D                     l2253:
 20131     162D  0008               	return
 20132     162E                     __end_of___aldiv:
 20133                           
 20134                           	psect	text86
 20135     1AC6                     __ptext86:	
 20136 ;; *************** function _ADC_GetSample *****************
 20137 ;; Defined at:
 20138 ;;		line 44 in file "adc.c"
 20139 ;; Parameters:    Size  Location     Type
 20140 ;;  ch              1    wreg     unsigned char 
 20141 ;; Auto vars:     Size  Location     Type
 20142 ;;  ch              1    7[COMMON] unsigned char 
 20143 ;;  hi              2    8[COMMON] short 
 20144 ;; Return value:  Size  Location     Type
 20145 ;;                  2    0[COMMON] short 
 20146 ;; Registers used:
 20147 ;;		wreg, status,2, status,0
 20148 ;; Tracked objects:
 20149 ;;		On entry : 0/0
 20150 ;;		On exit  : 0/0
 20151 ;;		Unchanged: 0/0
 20152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20154 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20155 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20156 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20157 ;;Total ram usage:       10 bytes
 20158 ;; Hardware stack levels used: 1
 20159 ;; Hardware stack levels required when called: 1
 20160 ;; This function calls:
 20161 ;;		Nothing
 20162 ;; This function is called by:
 20163 ;;		_ADC_Run
 20164 ;; This function uses a non-reentrant model
 20165 ;;
 20166                           
 20167     1AC6                     _ADC_GetSample:	
 20168                           ;psect for function _ADC_GetSample
 20169                           
 20170                           
 20171                           ;incstack = 0
 20172                           ; Regs used in _ADC_GetSample: [wreg+status,2+status,0]
 20173                           ;ADC_GetSample@ch stored from wreg
 20174     1AC6  00F7               	movwf	ADC_GetSample@ch
 20175     1AC7                     l9076:
 20176                           
 20177                           ;adc.c: 44: int16_t ADC_GetSample(uint8_t ch);adc.c: 45: {;adc.c: 46:   ADCON0bits.CHS =
      +                           ch;
 20178     1AC7  0877               	movf	ADC_GetSample@ch,w
 20179     1AC8  00F2               	movwf	??_ADC_GetSample
 20180     1AC9  0DF2               	rlf	??_ADC_GetSample,f
 20181     1ACA  0DF2               	rlf	??_ADC_GetSample,f
 20182     1ACB  0021               	movlb	1	; select bank1
 20183     1ACC  081D               	movf	29,w	;volatile
 20184     1ACD  0672               	xorwf	??_ADC_GetSample,w
 20185     1ACE  3983               	andlw	-125
 20186     1ACF  0672               	xorwf	??_ADC_GetSample,w
 20187     1AD0  009D               	movwf	29	;volatile
 20188     1AD1                     l9078:
 20189                           
 20190                           ;adc.c: 47:   _delay((unsigned long)(20));
 20191     1AD1  3006               	movlw	6
 20192     1AD2                     u11217:
 20193     1AD2  0B89               	decfsz	9,f
 20194     1AD3  2AD2               	goto	u11217
 20195     1AD4  3200               	nop2
 20196     1AD5                     l9080:
 20197                           
 20198                           ;adc.c: 48:   ADCON0bits.ADGO = 1;
 20199     1AD5  0021               	movlb	1	; select bank1
 20200     1AD6  149D               	bsf	29,1	;volatile
 20201     1AD7                     l1656:	
 20202                           ;adc.c: 49:   while (ADCON0bits.ADGO == 1);
 20203                           
 20204     1AD7  189D               	btfsc	29,1	;volatile
 20205     1AD8  2ADA               	goto	u10871
 20206     1AD9  2ADB               	goto	u10870
 20207     1ADA                     u10871:
 20208     1ADA  2AD7               	goto	l1656
 20209     1ADB                     u10870:
 20210     1ADB                     l9082:
 20211                           
 20212                           ;adc.c: 50:   int16_t hi = ADRESH;
 20213     1ADB  081C               	movf	28,w	;volatile
 20214     1ADC  00F2               	movwf	??_ADC_GetSample
 20215     1ADD  01F3               	clrf	??_ADC_GetSample+1
 20216     1ADE  0872               	movf	??_ADC_GetSample,w
 20217     1ADF  00F8               	movwf	ADC_GetSample@hi
 20218     1AE0  0873               	movf	??_ADC_GetSample+1,w
 20219     1AE1  00F9               	movwf	ADC_GetSample@hi+1
 20220     1AE2                     l9084:
 20221                           
 20222                           ;adc.c: 52:   return (((hi << 8) + ADRESL) * 4);
 20223     1AE2  0879               	movf	ADC_GetSample@hi+1,w
 20224     1AE3  00F3               	movwf	??_ADC_GetSample+1
 20225     1AE4  0878               	movf	ADC_GetSample@hi,w
 20226     1AE5  00F2               	movwf	??_ADC_GetSample
 20227     1AE6  0872               	movf	??_ADC_GetSample,w
 20228     1AE7  00F3               	movwf	??_ADC_GetSample+1
 20229     1AE8  01F2               	clrf	??_ADC_GetSample
 20230     1AE9  081B               	movf	27,w	;volatile
 20231     1AEA  0772               	addwf	??_ADC_GetSample,w
 20232     1AEB  00F5               	movwf	??_ADC_GetSample+3
 20233     1AEC  3000               	movlw	0
 20234     1AED  3D73               	addwfc	??_ADC_GetSample+1,w
 20235     1AEE  00F6               	movwf	??_ADC_GetSample+4
 20236     1AEF  35F5               	lslf	??_ADC_GetSample+3,f
 20237     1AF0  0DF6               	rlf	??_ADC_GetSample+4,f
 20238     1AF1  35F5               	lslf	??_ADC_GetSample+3,f
 20239     1AF2  0DF6               	rlf	??_ADC_GetSample+4,f
 20240     1AF3  0875               	movf	??_ADC_GetSample+3,w
 20241     1AF4  00F0               	movwf	?_ADC_GetSample
 20242     1AF5  0876               	movf	??_ADC_GetSample+4,w
 20243     1AF6  00F1               	movwf	?_ADC_GetSample+1
 20244     1AF7                     l1659:
 20245     1AF7  0008               	return
 20246     1AF8                     __end_of_ADC_GetSample:
 20247                           
 20248                           	psect	text87
 20249     27D4                     __ptext87:	
 20250 ;; *************** function _ADC_Init *****************
 20251 ;; Defined at:
 20252 ;;		line 14 in file "adc.c"
 20253 ;; Parameters:    Size  Location     Type
 20254 ;;		None
 20255 ;; Auto vars:     Size  Location     Type
 20256 ;;		None
 20257 ;; Return value:  Size  Location     Type
 20258 ;;                  1    wreg      void 
 20259 ;; Registers used:
 20260 ;;		wreg, status,2, status,0
 20261 ;; Tracked objects:
 20262 ;;		On entry : 0/0
 20263 ;;		On exit  : 0/0
 20264 ;;		Unchanged: 0/0
 20265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20270 ;;Total ram usage:        0 bytes
 20271 ;; Hardware stack levels used: 1
 20272 ;; Hardware stack levels required when called: 1
 20273 ;; This function calls:
 20274 ;;		Nothing
 20275 ;; This function is called by:
 20276 ;;		_main
 20277 ;; This function uses a non-reentrant model
 20278 ;;
 20279                           
 20280     27D4                     _ADC_Init:	
 20281                           ;psect for function _ADC_Init
 20282                           
 20283     27D4                     l9174:	
 20284                           ;incstack = 0
 20285                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
 20286                           
 20287                           
 20288                           ;adc.c: 20:   TRISAbits.TRISA0 = 1;
 20289     27D4  0021               	movlb	1	; select bank1
 20290     27D5  140C               	bsf	12,0	;volatile
 20291                           
 20292                           ;adc.c: 21:   ANSELAbits.ANSA0 = 1;
 20293     27D6  0023               	movlb	3	; select bank3
 20294     27D7  140C               	bsf	12,0	;volatile
 20295                           
 20296                           ;adc.c: 23:   TRISAbits.TRISA1 = 1;
 20297     27D8  0021               	movlb	1	; select bank1
 20298     27D9  148C               	bsf	12,1	;volatile
 20299                           
 20300                           ;adc.c: 24:   ANSELAbits.ANSA1 = 1;
 20301     27DA  0023               	movlb	3	; select bank3
 20302     27DB  148C               	bsf	12,1	;volatile
 20303                           
 20304                           ;adc.c: 29:   FVRCON = 0b10000011;
 20305     27DC  3083               	movlw	131
 20306     27DD  0022               	movlb	2	; select bank2
 20307     27DE  0097               	movwf	23	;volatile
 20308                           
 20309                           ;adc.c: 33:   ADCON1bits.ADFM = 1;
 20310     27DF  0021               	movlb	1	; select bank1
 20311     27E0  179E               	bsf	30,7	;volatile
 20312     27E1                     l9176:
 20313                           
 20314                           ;adc.c: 34:   ADCON1bits.ADCS = 2;
 20315     27E1  081E               	movf	30,w	;volatile
 20316     27E2  398F               	andlw	-113
 20317     27E3  3820               	iorlw	32
 20318     27E4  009E               	movwf	30	;volatile
 20319     27E5                     l9178:
 20320                           
 20321                           ;adc.c: 36:   ADCON1bits.ADNREF = 0;
 20322     27E5  111E               	bcf	30,2	;volatile
 20323                           
 20324                           ;adc.c: 37:   ADCON1bits.ADPREF = 3;
 20325     27E6  3003               	movlw	3
 20326     27E7  049E               	iorwf	30,f	;volatile
 20327     27E8                     l9180:
 20328                           
 20329                           ;adc.c: 41:   ADCON0bits.ADON = 1;
 20330     27E8  141D               	bsf	29,0	;volatile
 20331     27E9                     l1653:
 20332     27E9  0008               	return
 20333     27EA                     __end_of_ADC_Init:
 20334                           
 20335                           	psect	intentry
 20336     0004                     __pintentry:	
 20337 ;; *************** function _myIsr *****************
 20338 ;; Defined at:
 20339 ;;		line 144 in file "main.c"
 20340 ;; Parameters:    Size  Location     Type
 20341 ;;		None
 20342 ;; Auto vars:     Size  Location     Type
 20343 ;;		None
 20344 ;; Return value:  Size  Location     Type
 20345 ;;                  1    wreg      void 
 20346 ;; Registers used:
 20347 ;;		wreg, status,2, status,0
 20348 ;; Tracked objects:
 20349 ;;		On entry : 0/0
 20350 ;;		On exit  : 0/0
 20351 ;;		Unchanged: 0/0
 20352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20357 ;;Total ram usage:        0 bytes
 20358 ;; Hardware stack levels used: 1
 20359 ;; This function calls:
 20360 ;;		Nothing
 20361 ;; This function is called by:
 20362 ;;		Interrupt level 1
 20363 ;; This function uses a non-reentrant model
 20364 ;;
 20365                           
 20366     0004                     _myIsr:
 20367                           
 20368                           ;incstack = 0
 20369     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 20370                           
 20371                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 20372     0005  3180               	pagesel	$
 20373     0006  3000               	movlw	low ___int_sp
 20374     0007  0086               	movwf	6
 20375     0008  3000               	movlw	high ___int_sp
 20376     0009  0087               	movwf	7
 20377     000A                     i1l7070:
 20378                           
 20379                           ;main.c: 147:   if(PIR1bits.TMR2IF)
 20380     000A  0020               	movlb	0	; select bank0
 20381     000B  1C91               	btfss	17,1	;volatile
 20382     000C  280E               	goto	u735_21
 20383     000D  280F               	goto	u735_20
 20384     000E                     u735_21:
 20385     000E  2813               	goto	i1l197
 20386     000F                     u735_20:
 20387     000F                     i1l7072:
 20388                           
 20389                           ;main.c: 148:   {;main.c: 149:     PIR1bits.TMR2IF =0;
 20390     000F  1091               	bcf	17,1	;volatile
 20391     0010                     i1l7074:
 20392                           
 20393                           ;main.c: 150:     tick_count++;
 20394     0010  3001               	movlw	1
 20395     0011  0021               	movlb	1	; select bank1
 20396     0012  07BC               	addwf	_tick_count^(0+128),f	;volatile
 20397     0013                     i1l197:
 20398     0013  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 20399     0014  0009               	retfie
 20400     0015                     __end_of_myIsr:
 20401     0003                     ___latbits      equ	3
 20402     007E                     btemp           set	126	;btemp
 20403     007E                     int$flags       set	126
 20404     007E                     btemp0          set	126
 20405     007F                     btemp1          set	127
 20406     007E                     wtemp0          set	126
 20407     007F                     wtemp0a         set	127
 20408     007F                     ttemp0a         set	127
 20409     0080                     ltemp0a         set	128
 20410                           
 20411                           	psect	idloc
 20412                           
 20413                           ;Config register IDLOC0 @ 0x8000
 20414                           ;	unspecified, using default values
 20415     8000                     	org	32768
 20416     8000  3FFF               	dw	16383
 20417                           
 20418                           ;Config register IDLOC1 @ 0x8001
 20419                           ;	unspecified, using default values
 20420     8001                     	org	32769
 20421     8001  3FFF               	dw	16383
 20422                           
 20423                           ;Config register IDLOC2 @ 0x8002
 20424                           ;	unspecified, using default values
 20425     8002                     	org	32770
 20426     8002  3FFF               	dw	16383
 20427                           
 20428                           ;Config register IDLOC3 @ 0x8003
 20429                           ;	unspecified, using default values
 20430     8003                     	org	32771
 20431     8003  3FFF               	dw	16383
 20432                           
 20433                           	psect	config
 20434                           
 20435                           ;Config register CONFIG1 @ 0x8007
 20436                           ;	Oscillator Selection
 20437                           ;	FOSC = ECH, ECH, External Clock, High Power Mode (4-32 MHz): device clock supplied to 
      +                          CLKIN pin
 20438                           ;	Watchdog Timer Enable
 20439                           ;	WDTE = ON, WDT enabled
 20440                           ;	Power-up Timer Enable
 20441                           ;	PWRTE = OFF, PWRT disabled
 20442                           ;	MCLR Pin Function Select
 20443                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 20444                           ;	Flash Program Memory Code Protection
 20445                           ;	CP = OFF, Program memory code protection is disabled
 20446                           ;	Data Memory Code Protection
 20447                           ;	CPD = OFF, Data memory code protection is disabled
 20448                           ;	Brown-out Reset Enable
 20449                           ;	BOREN = ON, Brown-out Reset enabled
 20450                           ;	Clock Out Enable
 20451                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 20452                           ;	Internal/External Switchover
 20453                           ;	IESO = ON, Internal/External Switchover mode is enabled
 20454                           ;	Fail-Safe Clock Monitor Enable
 20455                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 20456     8007                     	org	32775
 20457     8007  3FFF               	dw	16383
 20458                           
 20459                           ;Config register CONFIG2 @ 0x8008
 20460                           ;	Flash Memory Self-Write Protection
 20461                           ;	WRT = OFF, Write protection off
 20462                           ;	Voltage Regulator Capacitor Enable
 20463                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 20464                           ;	PLL Enable
 20465                           ;	PLLEN = ON, 4x PLL enabled
 20466                           ;	Stack Overflow/Underflow Reset Enable
 20467                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 20468                           ;	Brown-out Reset Voltage Selection
 20469                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 20470                           ;	Low-Voltage Programming Enable
 20471                           ;	LVP = ON, Low-voltage programming enabled
 20472     8008                     	org	32776
 20473     8008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    1308
    Data        162
    BSS         122
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      72
    BANK1            80      0      75
    BANK2            80      0      72
    BANK3            80     10      10
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    current_menu	PTR const struct . size(2) Largest target is 6
		 -> menuAbout(CODE[6]), menuBypass(CODE[6]), menuCal(CODE[6]), menuLoad(CODE[6]), 
		 -> menuMain(CODE[6]), menuNameEdit(CODE[6]), menuRelTest(CODE[6]), menuReset(CODE[6]), 
		 -> menuSave(CODE[6]), menuSleep(CODE[6]), menuStartupSave(CODE[6]), menuSubSetup(CODE[6]), 
		 -> menuSubTop(CODE[6]), menuTParam(CODE[6]), menuTune(CODE[6]), NULL(NULL[0]), 

    current_menu$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    current_menu$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    current_menu$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    DISP_Str@p	PTR const unsigned char  size(2) Largest target is 13
		 -> DISP_Char@str(BANK0[2]), DISP_PWR@str(BANK0[5]), DISP_SWR@str(BANK0[5]), MENU_CalPWR_Update@str(BANK0[2]), 
		 -> MENU_Main_Update@str(BANK0[7]), MENU_Memory_Update@memory(BANK0[11]), MENU_Memory_Update@memory$str_name(COMMON[8]), MENU_Memory_Update@str_index(BANK0[3]), 
		 -> MENU_NameEdit_Init@str_index(BANK0[3]), MENU_RelTest_Update@str(BANK0[7]), MENU_Sleep_Update@str(BANK0[4]), MENU_StartupSave_Init@str_index(BANK0[3]), 
		 -> MENU_var(BANK0[13]), MENU_var$tunemem(COMMON[10]), MENU_var$tunemem$relays(BANK0[2]), MENU_var$tunemem$relays$str_name(COMMON[8]), 
		 -> STR_1(CODE[11]), str__Tune_(CODE[9]), str_ATU100EXT(CODE[8]), str_Auto(CODE[5]), 
		 -> str_Break(CODE[11]), str_by(CODE[3]), str_Bypass(CODE[9]), str_C_(CODE[3]), 
		 -> str_C_L(CODE[5]), str_Delay(CODE[6]), str_designed(CODE[9]), str_DG4SN(CODE[6]), 
		 -> str_Esc(CODE[4]), str_Firmware(CODE[9]), str_Hardware(CODE[9]), str_L_(CODE[3]), 
		 -> str_L_C(CODE[5]), str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), 
		 -> str_MENU_Load(CODE[11]), str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), 
		 -> str_MENU_Setup(CODE[11]), str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), str_N7DCC(CODE[6]), 
		 -> str_Off(CODE[4]), str_Ok(CODE[3]), str_On(CODE[4]), str_Point(CODE[6]), 
		 -> str_Power(CODE[6]), str_PWR(CODE[4]), str_PWR_low(CODE[11]), str_Ready(CODE[11]), 
		 -> str_Running(CODE[11]), str_Save(CODE[5]), str_Sleep(CODE[6]), str_sleeping(CODE[1]), 
		 -> str_SpaceLine(CODE[11]), str_Start(CODE[6]), str_Stop(CODE[5]), str_SWR(CODE[4]), 
		 -> str_Version(CODE[6]), str_WaitForHF(CODE[11]), str_YAF(CODE[10]), str_YetAnother(CODE[9]), 
		 -> NULL(NULL[0]), 

    DISP_Str@str	PTR const unsigned char  size(2) Largest target is 13
		 -> DISP_Char@str(BANK0[2]), DISP_PWR@str(BANK0[5]), DISP_SWR@str(BANK0[5]), MENU_CalPWR_Update@str(BANK0[2]), 
		 -> MENU_Main_Update@str(BANK0[7]), MENU_Memory_Update@memory(BANK0[11]), MENU_Memory_Update@memory$str_name(COMMON[8]), MENU_Memory_Update@str_index(BANK0[3]), 
		 -> MENU_NameEdit_Init@str_index(BANK0[3]), MENU_RelTest_Update@str(BANK0[7]), MENU_Sleep_Update@str(BANK0[4]), MENU_StartupSave_Init@str_index(BANK0[3]), 
		 -> MENU_var(BANK0[13]), MENU_var$tunemem(COMMON[10]), MENU_var$tunemem$relays(BANK0[2]), MENU_var$tunemem$relays$str_name(COMMON[8]), 
		 -> STR_1(CODE[11]), str__Tune_(CODE[9]), str_ATU100EXT(CODE[8]), str_Auto(CODE[5]), 
		 -> str_Break(CODE[11]), str_by(CODE[3]), str_Bypass(CODE[9]), str_C_(CODE[3]), 
		 -> str_C_L(CODE[5]), str_Delay(CODE[6]), str_designed(CODE[9]), str_DG4SN(CODE[6]), 
		 -> str_Esc(CODE[4]), str_Firmware(CODE[9]), str_Hardware(CODE[9]), str_L_(CODE[3]), 
		 -> str_L_C(CODE[5]), str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), 
		 -> str_MENU_Load(CODE[11]), str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), 
		 -> str_MENU_Setup(CODE[11]), str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), str_N7DCC(CODE[6]), 
		 -> str_Off(CODE[4]), str_Ok(CODE[3]), str_On(CODE[4]), str_Point(CODE[6]), 
		 -> str_Power(CODE[6]), str_PWR(CODE[4]), str_PWR_low(CODE[11]), str_Ready(CODE[11]), 
		 -> str_Running(CODE[11]), str_Save(CODE[5]), str_Sleep(CODE[6]), str_sleeping(CODE[1]), 
		 -> str_SpaceLine(CODE[11]), str_Start(CODE[6]), str_Stop(CODE[5]), str_SWR(CODE[4]), 
		 -> str_Version(CODE[6]), str_WaitForHF(CODE[11]), str_YAF(CODE[10]), str_YetAnother(CODE[9]), 
		 -> NULL(NULL[0]), 

    EEPROM_Read@ptr	PTR unsigned char  size(2) Largest target is 30
		 -> global(BANK1[30]), global$cal_point(BANK1[4]), main@tunemem(BANK3[10]), MENU_Memory_Run@tunemem(BANK0[10]), 
		 -> MENU_Memory_Update@memory(BANK0[11]), MENU_var(BANK0[13]), 

    EEPROM_Read@ptrValue	PTR void  size(2) Largest target is 30
		 -> global(BANK1[30]), global$cal_point(BANK1[4]), main@tunemem(BANK3[10]), MENU_Memory_Run@tunemem(BANK0[10]), 
		 -> MENU_Memory_Update@memory(BANK0[11]), MENU_var(BANK0[13]), 

    EEPROM_Write@ptr	PTR unsigned char  size(1) Largest target is 30
		 -> global(BANK1[30]), global$cal_point(BANK1[4]), MENU_var(BANK0[13]), 

    EEPROM_Write@ptrValue	PTR void  size(2) Largest target is 30
		 -> global(BANK1[30]), global$cal_point(BANK1[4]), MENU_var(BANK0[13]), 

    MENU_Main_Update@p_str	PTR const unsigned char  size(2) Largest target is 5
		 -> str_AUTO(CODE[5]), NULL(NULL[0]), 

    MENU_Sub_Update$2999	const PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    MENU_Tune_Update$2998	PTR const unsigned char  size(2) Largest target is 11
		 -> str_Break(CODE[11]), str_PWR_low(CODE[11]), str_Ready(CODE[11]), str_Running(CODE[11]), 
		 -> str_SpaceLine(CODE[11]), str_WaitForHF(CODE[11]), 

    MENU_var$ptrMenu	PTR PTR const struct . size(2) Largest target is 12
		 -> ptrSubSetupMenu(BANK2[8]), ptrSubTopMenu(BANK2[12]), 

    MENU_var$ptrMenu$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    MENU_var$ptrMenu$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    MENU_var$ptrMenu$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    MENU_var$sub$ptrMenu	PTR PTR const struct . size(2) Largest target is 12
		 -> ptrSubSetupMenu(BANK2[8]), ptrSubTopMenu(BANK2[12]), 

    menuAbout$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuAbout$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuAbout$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuBypass$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuBypass$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuBypass$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuCal$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuCal$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuCal$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuLoad$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuLoad$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuLoad$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuMain$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuMain$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuMain$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuNameEdit$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuNameEdit$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuNameEdit$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuRelTest$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuRelTest$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuRelTest$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuReset$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuReset$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuReset$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuSave$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuSave$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuSave$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuSleep$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuSleep$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuSleep$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuStartupSave$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuStartupSave$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuStartupSave$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuSubSetup$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuSubSetup$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuSubSetup$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuSubTop$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuSubTop$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuSubTop$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuTParam$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuTParam$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuTParam$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    menuTune$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    menuTune$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    menuTune$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    ptrSubSetupMenu	PTR const struct .[4] size(2) Largest target is 6
		 -> menuAbout(CODE[6]), menuBypass(CODE[6]), menuCal(CODE[6]), menuLoad(CODE[6]), 
		 -> menuRelTest(CODE[6]), menuReset(CODE[6]), menuSave(CODE[6]), menuSleep(CODE[6]), 
		 -> menuSubSetup(CODE[6]), menuTParam(CODE[6]), 

    ptrSubTopMenu	PTR const struct .[6] size(2) Largest target is 6
		 -> menuAbout(CODE[6]), menuBypass(CODE[6]), menuCal(CODE[6]), menuLoad(CODE[6]), 
		 -> menuRelTest(CODE[6]), menuReset(CODE[6]), menuSave(CODE[6]), menuSleep(CODE[6]), 
		 -> menuSubSetup(CODE[6]), menuTParam(CODE[6]), 

    S1241$Init	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Init(), MENU_Bypass_Init(), MENU_CalPWR_Init(), MENU_Main_Init(), 
		 -> MENU_MemoryLoad_Init(), MENU_MemorySave_Init(), MENU_NameEdit_Init(), MENU_RelTest_Init(), 
		 -> MENU_Reset_Init(), MENU_Sleep_Init(), MENU_StartupSave_Init(), MENU_SubSetup_Init(), 
		 -> MENU_SubTop_Init(), MENU_TParam_Init(), MENU_Tune_Init(), 

    S1241$Run	PTR FTN()void  size(2) Largest target is 1
		 -> MENU_About_Run(), MENU_CalPWR_Run(), MENU_Main_Run(), MENU_Memory_Run(), 
		 -> MENU_NameEdit_Run(), MENU_RelTest_Run(), MENU_Sleep_Run(), MENU_StartupSave_Run(), 
		 -> MENU_Sub_Run(), MENU_TParam_Run(), MENU_Tune_Run(), NULL(), 

    S1241$title	PTR const unsigned char  size(2) Largest target is 11
		 -> str_MENU_About(CODE[11]), str_MENU_Bypass(CODE[11]), str_MENU_Cal(CODE[11]), str_MENU_Load(CODE[11]), 
		 -> str_MENU_RelTest(CODE[11]), str_MENU_Reset(CODE[11]), str_MENU_Save(CODE[11]), str_MENU_Setup(CODE[11]), 
		 -> str_MENU_Sleep(CODE[11]), str_MENU_TunePar(CODE[11]), NULL(NULL[0]), 

    S1264$ptrMenu	PTR PTR const struct . size(2) Largest target is 12
		 -> ptrSubSetupMenu(BANK2[8]), ptrSubTopMenu(BANK2[12]), 

    str_TUNE_State	PTR const unsigned char [6] size(2) Largest target is 11
		 -> str_Break(CODE[11]), str_PWR_low(CODE[11]), str_Ready(CODE[11]), str_Running(CODE[11]), 
		 -> str_SpaceLine(CODE[11]), str_WaitForHF(CODE[11]), 

    UTILI_GetCapValueStr@str	PTR unsigned char  size(1) Largest target is 7
		 -> MENU_Main_Update@str(BANK0[7]), MENU_RelTest_Update@str(BANK0[7]), 

    UTILI_GetIndValueStr@str	PTR unsigned char  size(1) Largest target is 7
		 -> MENU_Main_Update@str(BANK0[7]), MENU_RelTest_Update@str(BANK0[7]), 

    UTILI_Int2Str@output	PTR unsigned char  size(1) Largest target is 7
		 -> DISP_PWR@str(BANK0[5]), DISP_SWR@str(BANK0[5]), MENU_Main_Update@str(BANK0[7]), MENU_RelTest_Update@str(BANK0[7]), 
		 -> MENU_Sleep_Update@str(BANK0[4]), 

    UTILI_Int2Str@p	PTR unsigned char  size(1) Largest target is 7
		 -> DISP_PWR@str(BANK0[5]), DISP_SWR@str(BANK0[5]), MENU_Main_Update@str(BANK0[7]), MENU_RelTest_Update@str(BANK0[7]), 
		 -> MENU_Sleep_Update@str(BANK0[4]), 


Critical Paths under _main in COMMON

    _MENU_Tune_Update->_DISP_Str
    _MENU_Sub_Run->_MENU_Sub_Update
    _MENU_NameEdit_Run->_MENU_NameEdit_Update
    _UTILI_CalSWR->___lmul
    _UTILI_CalPWR->_UTILI_centiVolt_to_deciWatt
    _UTILI_centiVolt_to_deciWatt->___lmul
    _MENU_Tune_Init->_DISP_Str
    _TUNE_Init->_UTILI_SetRelays
    _MENU_SubTop_Init->_MENU_Sub_Update
    _MENU_SubSetup_Init->_MENU_Sub_Update
    _MENU_Sub_Update->_DISP_Str
    _MENU_StartupSave_Init->_DISP_Str
    _MENU_StartupSave_Update->_DISP_Str
    _MENU_Sleep_Update->_UTILI_Int2Str
    _MENU_Reset_Init->_DISP_Str
    _MENU_NameEdit_Init->_MENU_NameEdit_Update
    _MENU_NameEdit_Update->_DISP_Str
    _MENU_MemorySave_Init->_DISP_Str
    _MENU_MemoryLoad_Init->_DISP_Str
    _MENU_Memory_Update->_DISP_Str
    _UTILI_GetIndValueStr->_UTILI_Int2Str
    _UTILI_GetCapValueStr->_UTILI_Int2Str
    _DISP_SWR->_UTILI_Int2Str
    _DISP_Char->_DISP_Str
    _UTILI_Set_LC_Relays->_UTILI_SetRelays
    _MENU_About_Init->_DISP_Str
    _MENU_CalPWR_Run->_UTILI_deciWatt_to_centiVolt
    _UTILI_deciWatt_to_centiVolt->___lmul
    _DISP_PWR->_UTILI_Int2Str
    _UTILI_Int2Str->___awdiv
    _EEPROM_Write->___bmul
    _EEPROM_Write->_eeprom_write
    _MENU_About_Run->_DISP_Str
    _MENU_Main_Init->_DISP_Str
    _DISP_Str->___awdiv
    _EEPROM_InitDefault->_eeprom_write
    _EEPROM_Init->_EEPROM_Read
    _EEPROM_Read->___bmul
    _DISP_Init->_DISP_Clr
    _DISP_Clr->_DISP_DataAddress
    _DISP_On->_DISP_Command
    _DISP_Off->_DISP_Command
    _DISP_Command->_I2C_Write
    _DISP_DataAddress->_I2C_Write
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MENU_Run
    _MENU_Run->_MENU_Memory_Run
    _MENU_Tune_Run->_TUNE_Run
    _TUNE_Run->_UTILI_CalPWR
    _MENU_Tune_Update->_DISP_Str
    _MENU_TParam_Run->_MENU_TParam_Update
    _MENU_Sleep_Run->_MENU_Sleep_Update
    _MENU_RelTest_Run->_DISP_PWR
    _MENU_RelTest_Run->_MENU_RelTest_Update
    _MENU_NameEdit_Run->_MENU_NameEdit_Update
    _MENU_Main_Run->_MENU_Main_Update
    _UTILI_CalSWR->___aldiv
    _UTILI_CalPWR->_UTILI_centiVolt_to_deciWatt
    _UTILI_centiVolt_to_deciWatt->___aldiv
    _MENU_Tune_Init->_DISP_Str
    _MENU_TParam_Init->_MENU_TParam_Update
    _MENU_TParam_Update->_DISP_SWR
    _MENU_SubTop_Init->_MENU_Sub_Update
    _MENU_SubSetup_Init->_MENU_Sub_Update
    _MENU_Sub_Update->_DISP_Str
    _MENU_StartupSave_Init->_DISP_Str
    _MENU_StartupSave_Update->_DISP_Str
    _MENU_Sleep_Init->_MENU_Sleep_Update
    _MENU_Sleep_Update->_DISP_Str
    _MENU_Reset_Init->_DISP_Str
    _MENU_RelTest_Init->_MENU_RelTest_Update
    _MENU_RelTest_Update->_DISP_Str
    _MENU_NameEdit_Init->_MENU_NameEdit_Update
    _MENU_NameEdit_Update->_DISP_Char
    _MENU_Memory_Init->_MENU_Memory_Update
    _MENU_Memory_Update->_DISP_Str
    _MENU_Main_Update->_DISP_PWR
    _UTILI_GetIndValueStr->_UTILI_Int2Str
    _UTILI_GetCapValueStr->_UTILI_Int2Str
    _DISP_SWR->_DISP_Str
    _DISP_Char->_DISP_Str
    _MENU_CalPWR_Init->_MENU_CalPWR_Update
    _MENU_About_Init->_DISP_Str
    _MENU_CalPWR_Run->_MENU_CalPWR_Update
    _UTILI_deciWatt_to_centiVolt->___aldiv
    _MENU_CalPWR_Update->_DISP_PWR
    _DISP_PWR->_DISP_Str
    _MENU_About_Run->_DISP_Str
    _MENU_Main_Init->_DISP_Str
    _ADC_Run->___aldiv

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0  547038
                                              0 BANK3     10    10      0
                           _ADC_Init
                            _ADC_Run
                        _BUTTON_Init
                         _BUTTON_Run
                           _DISP_Clr
                          _DISP_Init
                           _DISP_Str
                        _EEPROM_Init
                 _EEPROM_InitDefault
                        _EEPROM_Read
                          _MAIN_Init
                          _MENU_Init
                           _MENU_Run
                     _UTILI_Delay_ms
                _UTILI_Set_LC_Relays
 ---------------------------------------------------------------------------------
 (1) _UTILI_Delay_ms                                       5     3      2      74
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _MENU_Run                                             2     2      0  533820
                                             49 BANK0      2     2      0
                                NULL *
                     _MENU_About_Run *
                    _MENU_CalPWR_Run *
                      _MENU_Main_Run *
                    _MENU_Memory_Run *
                  _MENU_NameEdit_Run *
                   _MENU_RelTest_Run *
                     _MENU_Sleep_Run *
               _MENU_StartupSave_Run *
                       _MENU_Sub_Run *
                    _MENU_TParam_Run *
                      _MENU_Tune_Run *
 ---------------------------------------------------------------------------------
 (2) _MENU_Tune_Run                                        0     0      0   12369
                          _MENU_Init
                   _MENU_Tune_Update
                           _TUNE_Run
                _UTILI_Set_LC_Relays
 ---------------------------------------------------------------------------------
 (3) _TUNE_Run                                            11    11      0    3375
                                             25 BANK0     11    11      0
                       _UTILI_CalPWR
                       _UTILI_CalSWR
                    _UTILI_SetRelays
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _MENU_Tune_Update                                     1     1      0    3707
                                             12 COMMON     1     1      0
                           _DISP_Str
 ---------------------------------------------------------------------------------
 (2) _MENU_TParam_Run                                      1     1      0   14498
                                             29 BANK0      1     1      0
                       _EEPROM_Write
                          _MENU_Init
                 _MENU_TParam_Update
 ---------------------------------------------------------------------------------
 (2) _MENU_Sub_Run                                         4     4      0  128359
                                             35 BANK0      4     4      0
                    _MENU_About_Init *
                   _MENU_Bypass_Init *
                   _MENU_CalPWR_Init *
                          _MENU_Init
                     _MENU_Main_Init *
               _MENU_MemoryLoad_Init *
               _MENU_MemorySave_Init *
                 _MENU_NameEdit_Init *
                  _MENU_RelTest_Init *
                    _MENU_Reset_Init *
                    _MENU_Sleep_Init *
              _MENU_StartupSave_Init *
                 _MENU_SubSetup_Init *
                   _MENU_SubTop_Init *
                    _MENU_Sub_Update
                   _MENU_TParam_Init *
                     _MENU_Tune_Init *
 ---------------------------------------------------------------------------------
 (2) _MENU_StartupSave_Run                                 0     0      0    8748
                       _EEPROM_Write
                          _MENU_Init
            _MENU_StartupSave_Update
                _UTILI_Get_LC_Relays
 ---------------------------------------------------------------------------------
 (2) _MENU_Sleep_Run                                       1     1      0   10544
                                             22 BANK0      1     1      0
                       _EEPROM_Write
                          _MENU_Init
                  _MENU_Sleep_Update
 ---------------------------------------------------------------------------------
 (2) _MENU_RelTest_Run                                     1     1      0   28057
                                             29 BANK0      1     1      0
                           _DISP_PWR
                           _DISP_SWR
                          _MENU_Init
                _MENU_RelTest_Update
                       _UTILI_CalPWR
                       _UTILI_CalSWR
                    _UTILI_SetRelays
                _UTILI_Set_LC_Relays
 ---------------------------------------------------------------------------------
 (2) _MENU_NameEdit_Run                                    4     4      0   13469
                                             26 BANK0      4     4      0
                       _EEPROM_Write
                          _MENU_Init
               _MENU_NameEdit_Update
                _UTILI_Get_LC_Relays
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _MENU_Memory_Run                                     14    14      0  130230
                                             35 BANK0     14    14      0
                        _EEPROM_Read
                    _MENU_About_Init *
                   _MENU_Bypass_Init *
                   _MENU_CalPWR_Init *
                          _MENU_Init
                     _MENU_Main_Init *
               _MENU_MemoryLoad_Init *
               _MENU_MemorySave_Init *
                 _MENU_Memory_Update
                 _MENU_NameEdit_Init *
                  _MENU_RelTest_Init *
                    _MENU_Reset_Init *
                    _MENU_Sleep_Init *
              _MENU_StartupSave_Init *
                 _MENU_SubSetup_Init *
                   _MENU_SubTop_Init *
                   _MENU_TParam_Init *
                     _MENU_Tune_Init *
                _UTILI_Set_LC_Relays
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _MENU_Main_Run                                        1     1      0  156498
                                             41 BANK0      1     1      0
                           _DISP_Clr
                           _DISP_Str
                    _MENU_About_Init *
                   _MENU_Bypass_Init *
                   _MENU_CalPWR_Init *
                     _MENU_Main_Init *
                   _MENU_Main_Update
                   _MENU_Main_Weakup
               _MENU_MemoryLoad_Init *
               _MENU_MemorySave_Init *
                 _MENU_NameEdit_Init *
                  _MENU_RelTest_Init *
                    _MENU_Reset_Init *
                    _MENU_Sleep_Init *
              _MENU_StartupSave_Init *
                 _MENU_SubSetup_Init *
                   _MENU_SubTop_Init *
                   _MENU_TParam_Init *
                     _MENU_Tune_Init *
                       _UTILI_CalPWR
                       _UTILI_CalSWR
                _UTILI_Get_LC_Relays
                _UTILI_Set_LC_Relays
 ---------------------------------------------------------------------------------
 (4) _UTILI_CalSWR                                         3     3      0     745
                                             12 COMMON     1     1      0
                                             14 BANK0      2     2      0
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _UTILI_CalPWR                                         5     5      0    1543
                                             20 BANK0      5     5      0
        _UTILI_centiVolt_to_deciWatt
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _UTILI_centiVolt_to_deciWatt                          8     6      2     770
                                             12 COMMON     2     0      2
                                             14 BANK0      6     6      0
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _MENU_Tune_Init                                       0     0      0    5167
                       _BUTTON_Reset
                           _DISP_Clr
                           _DISP_Str
                          _TUNE_Init
                _UTILI_Get_LC_Relays
 ---------------------------------------------------------------------------------
 (4) _TUNE_Init                                            0     0      0     440
                    _UTILI_SetRelays
 ---------------------------------------------------------------------------------
 (3) _MENU_TParam_Init                                     0     0      0   14116
                       _BUTTON_Reset
                           _DISP_Clr
                           _DISP_Str
                 _MENU_TParam_Update
 ---------------------------------------------------------------------------------
 (4) _MENU_TParam_Update                                   1     1      0    9426
                                             28 BANK0      1     1      0
                           _DISP_SWR
                           _DISP_Str
 ---------------------------------------------------------------------------------
 (3) _MENU_SubTop_Init                                     0     0      0    4857
                       _BUTTON_Reset
                           _DISP_Clr
                    _MENU_Sub_Update
 ---------------------------------------------------------------------------------
 (3) _MENU_SubSetup_Init                                   0     0      0    4857
                       _BUTTON_Reset
                           _DISP_Clr
                    _MENU_Sub_Update
 ---------------------------------------------------------------------------------
 (4) _MENU_Sub_Update                                      7     7      0    3806
                                             12 COMMON     2     2      0
                                             17 BANK0      5     5      0
                           _DISP_Str
 ---------------------------------------------------------------------------------
 (3) _MENU_StartupSave_Init                                3     3      0    8664
                                             17 BANK0      3     3      0
                       _BUTTON_Reset
                           _DISP_Clr
                           _DISP_Str
                        _EEPROM_Read
            _MENU_StartupSave_Update
 ---------------------------------------------------------------------------------
 (4) _MENU_StartupSave_Update                              0     0      0    3639
                           _DISP_Str
 ---------------------------------------------------------------------------------
 (3) _MENU_Sleep_Init                                      0     0      0   10162
                       _BUTTON_Reset
                           _DISP_Clr
                           _DISP_Str
                  _MENU_Sleep_Update
 ---------------------------------------------------------------------------------
 (4) _MENU_Sleep_Update                                    5     5      0    5472
                                             17 BANK0      5     5      0
                           _DISP_Str
                      _UTILI_Int2Str
 ---------------------------------------------------------------------------------
 (3) _MENU_Reset_Init                                      0     0      0    4814
                           _DISP_Clr
                           _DISP_Str
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _MENU_RelTest_Init                                    0     0      0    9662
                       _BUTTON_Reset
                           _DISP_Clr
                _MENU_RelTest_Update
                _UTILI_Get_LC_Relays
                    _UTILI_SetRelays
 ---------------------------------------------------------------------------------
 (4) _MENU_RelTest_Update                                 12    12      0    8134
                                             17 BANK0     12    12      0
                           _DISP_Str
               _UTILI_GetCapValueStr
               _UTILI_GetIndValueStr
 ---------------------------------------------------------------------------------
 (3) _MENU_NameEdit_Init                                   3     3      0   13218
                                             26 BANK0      3     3      0
                       _BUTTON_Reset
                           _DISP_Clr
                           _DISP_Str
                        _EEPROM_Read
               _MENU_NameEdit_Update
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MENU_NameEdit_Update                                 5     5      0    8001
                                             12 COMMON     2     2      0
                                             23 BANK0      3     3      0
                          _DISP_Char
                           _DISP_Str
 ---------------------------------------------------------------------------------
 (3) _MENU_MemorySave_Init                                 0     0      0    9264
                           _DISP_Clr
                           _DISP_Str
                   _MENU_Memory_Init
 ---------------------------------------------------------------------------------
 (3) _MENU_MemoryLoad_Init                                 0     0      0    9264
                           _DISP_Clr
                           _DISP_Str
                   _MENU_Memory_Init
 ---------------------------------------------------------------------------------
 (4) _MENU_Memory_Init                                     0     0      0    4574
                       _BUTTON_Reset
                 _MENU_Memory_Update
 ---------------------------------------------------------------------------------
 (5) _MENU_Memory_Update                                  16    16      0    4574
                                             17 BANK0     16    16      0
                           _DISP_Str
                        _EEPROM_Read
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _MENU_Main_Weakup                                     0     0      0    5287
                     _MENU_Main_Init
                _UTILI_Set_LC_Relays
 ---------------------------------------------------------------------------------
 (3) _MENU_Main_Update                                    12    12      0   23844
                                             29 BANK0     12    12      0
                          _DISP_Char
                           _DISP_PWR
                           _DISP_SWR
                           _DISP_Str
               _UTILI_GetCapValueStr
               _UTILI_GetIndValueStr
 ---------------------------------------------------------------------------------
 (5) _UTILI_GetIndValueStr                                 4     2      2    1967
                                              3 BANK0      4     2      2
                  _UTILI_GetIndValue
                      _UTILI_Int2Str
 ---------------------------------------------------------------------------------
 (6) _UTILI_GetIndValue                                    9     7      2     198
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) _UTILI_GetCapValueStr                                 4     2      2    1967
                                              3 BANK0      4     2      2
                  _UTILI_GetCapValue
                      _UTILI_Int2Str
 ---------------------------------------------------------------------------------
 (6) _UTILI_GetCapValue                                    9     7      2     198
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) _DISP_SWR                                            11     7      4    5598
                                             17 BANK0     11     7      4
                           _DISP_Str
                      _UTILI_Int2Str
 ---------------------------------------------------------------------------------
 (5) _DISP_Char                                            6     3      3    3901
                                             17 BANK0      6     3      3
                           _DISP_Str
 ---------------------------------------------------------------------------------
 (3) _MENU_CalPWR_Init                                     0     0      0   11006
                       _BUTTON_Reset
                           _DISP_Clr
                 _MENU_CalPWR_Update
 ---------------------------------------------------------------------------------
 (3) _MENU_Bypass_Init                                     0     0      0    5324
                          _MENU_Init
                _UTILI_Get_LC_Relays
                _UTILI_Set_LC_Relays
 ---------------------------------------------------------------------------------
 (4) _UTILI_Set_LC_Relays                                  2     0      2     560
                                              1 COMMON     2     0      2
                    _UTILI_SetRelays
 ---------------------------------------------------------------------------------
 (5) _UTILI_SetRelays                                      1     1      0     440
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MENU_About_Init                                      0     0      0    4690
                       _BUTTON_Reset
                           _DISP_Clr
                           _DISP_Str
 ---------------------------------------------------------------------------------
 (2) _MENU_CalPWR_Run                                     12    12      0   21631
                                             35 BANK0     12    12      0
                           _DISP_Clr
                           _DISP_Str
                       _EEPROM_Write
                 _MENU_CalPWR_Update
                          _MENU_Init
        _UTILI_deciWatt_to_centiVolt
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _UTILI_deciWatt_to_centiVolt                         22    20      2    1005
                                             12 COMMON     2     0      2
                                             14 BANK0     20    20      0
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     166
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (4) _MENU_CalPWR_Update                                   6     6      0    9955
                                             29 BANK0      6     6      0
                           _DISP_PWR
                           _DISP_Str
 ---------------------------------------------------------------------------------
 (5) _DISP_PWR                                            12     8      4    6264
                                             17 BANK0     12     8      4
                           _DISP_Str
                      _UTILI_Int2Str
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) _UTILI_Int2Str                                        9     5      4    1568
                                              8 COMMON     6     2      4
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     439
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Write                                         5     2      3     345
                                              3 COMMON     5     2      3
                             ___bmul (ARG)
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _MENU_About_Run                                       0     0      0    9417
                           _DISP_Clr
                           _DISP_Str
                          _MENU_Init
 ---------------------------------------------------------------------------------
 (4) _MENU_Init                                            0     0      0    4727
                     _MENU_Main_Init
 ---------------------------------------------------------------------------------
 (5) _MENU_Main_Init                                       0     0      0    4727
                       _BUTTON_Reset
                           _DISP_Clr
                           _DISP_Str
                _UTILI_Get_LC_Relays
 ---------------------------------------------------------------------------------
 (6) _UTILI_Get_LC_Relays                                  7     5      2      37
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (6) _DISP_Str                                            21    17      4    3639
                                              8 COMMON     4     0      4
                                              0 BANK0     17    17      0
                   _DISP_DataAddress
                           _I2C_Stop
                          _I2C_Write
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     148
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               3     2      1     189
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     499
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (6) _BUTTON_Reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MAIN_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_InitDefault                                   2     2      0     301
                                              3 COMMON     2     2      0
                        _eeprom_read
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         3     2      1     124
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Init                                          0     0      0     286
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (6) _EEPROM_Read                                          6     3      3     286
                                              3 COMMON     6     3      3
                             ___bmul (ARG)
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (7) _eeprom_read                                          1     1      0      47
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DISP_Init                                            2     1      1    1300
                                              7 COMMON     2     1      1
                           _DISP_Clr
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (6) _DISP_Clr                                             2     2      0    1051
                                              5 COMMON     2     2      0
                   _DISP_DataAddress
                           _DISP_Off
                            _DISP_On
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (7) _DISP_On                                              0     0      0     215
                       _DISP_Command
 ---------------------------------------------------------------------------------
 (7) _DISP_Off                                             0     0      0     215
                       _DISP_Command
 ---------------------------------------------------------------------------------
 (8) _DISP_Command                                         1     1      0     215
                                              2 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (9) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _DISP_DataAddress                                     3     2      1     286
                                              2 COMMON     3     2      1
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (9) _I2C_Write                                            2     2      0     168
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BUTTON_Run                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BUTTON_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Run                                             16    16      0     926
                                             14 BANK0     16    16      0
                      _ADC_GetSample
                            ___aldiv
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     505
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetSample                                       10     8      2      81
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _myIsr                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Run
     _ADC_GetSample
     ___aldiv
       ___lmul (ARG)
   _BUTTON_Init
   _BUTTON_Run
   _DISP_Clr
     _DISP_DataAddress
       _I2C_Start
       _I2C_Write
     _DISP_Off
       _DISP_Command
         _I2C_Start
         _I2C_Stop
         _I2C_Write
     _DISP_On
       _DISP_Command
     _I2C_Stop
     _I2C_Write
   _DISP_Init
     _DISP_Clr
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _DISP_Str
     _DISP_DataAddress
     _I2C_Stop
     _I2C_Write
     ___awdiv
     ___bmul
     ___wmul
   _EEPROM_Init
     _EEPROM_Read
       ___bmul (ARG)
       _eeprom_read (ARG)
   _EEPROM_InitDefault
     _eeprom_read
     _eeprom_write
   _EEPROM_Read
   _MAIN_Init
   _MENU_Init
     _MENU_Main_Init
       _BUTTON_Reset
       _DISP_Clr
       _DISP_Str
       _UTILI_Get_LC_Relays
   _MENU_Run
     NULL(Fake) *
     _MENU_About_Run *
       _DISP_Clr
       _DISP_Str
       _MENU_Init
     _MENU_CalPWR_Run *
       _DISP_Clr
       _DISP_Str
       _EEPROM_Write
         ___bmul (ARG)
         _eeprom_write (ARG)
       _MENU_CalPWR_Update
         _DISP_PWR
           _DISP_Str
           _UTILI_Int2Str
             ___awdiv
             ___awmod
           ___awdiv
         _DISP_Str
       _MENU_Init
       _UTILI_deciWatt_to_centiVolt
         ___aldiv
         ___lmul
       ___aldiv
       ___lmul
     _MENU_Main_Run *
       _DISP_Clr
       _DISP_Str
       _MENU_About_Init *
         _BUTTON_Reset
         _DISP_Clr
         _DISP_Str
       _MENU_Bypass_Init *
         _MENU_Init
         _UTILI_Get_LC_Relays
         _UTILI_Set_LC_Relays
           _UTILI_SetRelays
       _MENU_CalPWR_Init *
         _BUTTON_Reset
         _DISP_Clr
         _MENU_CalPWR_Update
       _MENU_Main_Init *
       _MENU_Main_Update *
         _DISP_Char
           _DISP_Str
         _DISP_PWR
         _DISP_SWR
           _DISP_Str
           _UTILI_Int2Str
         _DISP_Str
         _UTILI_GetCapValueStr
           _UTILI_GetCapValue
           _UTILI_Int2Str
         _UTILI_GetIndValueStr
           _UTILI_GetIndValue
           _UTILI_Int2Str
       _MENU_Main_Weakup *
         _MENU_Main_Init
         _UTILI_Set_LC_Relays
       _MENU_MemoryLoad_Init *
         _DISP_Clr
         _DISP_Str
         _MENU_Memory_Init
           _BUTTON_Reset
           _MENU_Memory_Update
             _DISP_Str
             _EEPROM_Read
             ___bmul
       _MENU_MemorySave_Init *
         _DISP_Clr
         _DISP_Str
         _MENU_Memory_Init
       _MENU_NameEdit_Init *
         _BUTTON_Reset
         _DISP_Clr
         _DISP_Str
         _EEPROM_Read
         _MENU_NameEdit_Update
           _DISP_Char
           _DISP_Str
         ___bmul
       _MENU_RelTest_Init *
         _BUTTON_Reset
         _DISP_Clr
         _MENU_RelTest_Update
           _DISP_Str
           _UTILI_GetCapValueStr
           _UTILI_GetIndValueStr
         _UTILI_Get_LC_Relays
         _UTILI_SetRelays
       _MENU_Reset_Init *
         _DISP_Clr
         _DISP_Str
         _eeprom_write
       _MENU_Sleep_Init *
         _BUTTON_Reset
         _DISP_Clr
         _DISP_Str
         _MENU_Sleep_Update
           _DISP_Str
           _UTILI_Int2Str
       _MENU_StartupSave_Init *
         _BUTTON_Reset
         _DISP_Clr
         _DISP_Str
         _EEPROM_Read
         _MENU_StartupSave_Update
           _DISP_Str
       _MENU_SubSetup_Init *
         _BUTTON_Reset
         _DISP_Clr
         _MENU_Sub_Update
           _DISP_Str
       _MENU_SubTop_Init *
         _BUTTON_Reset
         _DISP_Clr
         _MENU_Sub_Update
       _MENU_TParam_Init *
         _BUTTON_Reset
         _DISP_Clr
         _DISP_Str
         _MENU_TParam_Update
           _DISP_SWR
           _DISP_Str
       _MENU_Tune_Init *
         _BUTTON_Reset
         _DISP_Clr
         _DISP_Str
         _TUNE_Init
           _UTILI_SetRelays
         _UTILI_Get_LC_Relays
       _UTILI_CalPWR *
         _UTILI_centiVolt_to_deciWatt
           ___aldiv
           ___lmul
         ___aldiv
         ___lmul
       _UTILI_CalSWR *
         ___aldiv
         ___lmul
       _UTILI_Get_LC_Relays *
       _UTILI_Set_LC_Relays *
     _MENU_Memory_Run *
       _EEPROM_Read
       _MENU_About_Init *
       _MENU_Bypass_Init *
       _MENU_CalPWR_Init *
       _MENU_Init *
       _MENU_Main_Init *
       _MENU_MemoryLoad_Init *
       _MENU_MemorySave_Init *
       _MENU_Memory_Update *
       _MENU_NameEdit_Init *
       _MENU_RelTest_Init *
       _MENU_Reset_Init *
       _MENU_Sleep_Init *
       _MENU_StartupSave_Init *
       _MENU_SubSetup_Init *
       _MENU_SubTop_Init *
       _MENU_TParam_Init *
       _MENU_Tune_Init *
       _UTILI_Set_LC_Relays *
       ___bmul *
     _MENU_NameEdit_Run *
       _EEPROM_Write
       _MENU_Init
       _MENU_NameEdit_Update
       _UTILI_Get_LC_Relays
       ___bmul
     _MENU_RelTest_Run *
       _DISP_PWR
       _DISP_SWR
       _MENU_Init
       _MENU_RelTest_Update
       _UTILI_CalPWR
       _UTILI_CalSWR
       _UTILI_SetRelays
       _UTILI_Set_LC_Relays
     _MENU_Sleep_Run *
       _EEPROM_Write
       _MENU_Init
       _MENU_Sleep_Update
     _MENU_StartupSave_Run *
       _EEPROM_Write
       _MENU_Init
       _MENU_StartupSave_Update
       _UTILI_Get_LC_Relays
     _MENU_Sub_Run *
       _MENU_About_Init *
       _MENU_Bypass_Init *
       _MENU_CalPWR_Init *
       _MENU_Init *
       _MENU_Main_Init *
       _MENU_MemoryLoad_Init *
       _MENU_MemorySave_Init *
       _MENU_NameEdit_Init *
       _MENU_RelTest_Init *
       _MENU_Reset_Init *
       _MENU_Sleep_Init *
       _MENU_StartupSave_Init *
       _MENU_SubSetup_Init *
       _MENU_SubTop_Init *
       _MENU_Sub_Update *
       _MENU_TParam_Init *
       _MENU_Tune_Init *
     _MENU_TParam_Run *
       _EEPROM_Write
       _MENU_Init
       _MENU_TParam_Update
     _MENU_Tune_Run *
       _MENU_Init
       _MENU_Tune_Update
         _DISP_Str
       _TUNE_Run
         _UTILI_CalPWR
         _UTILI_CalSWR
         _UTILI_SetRelays
         ___awdiv
       _UTILI_Set_LC_Relays
   _UTILI_Delay_ms
   _UTILI_Set_LC_Relays

 _myIsr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     51      72     90.0%
BANK1               80      0      75     93.8%
BANK2               80      0      72     90.0%
BANK3               80     10      10     12.5%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     241      0.0%


Microchip Technology PIC Macro Assembler V3.10 build 20250813170317 
Symbol Table                                                                                   Mon Oct 27 10:27:04 2025

                         _str_PWR_low 2849                       _MENU_Reset_Init 27EA  
                      ___bmul@product 0071                       ADC_GetSample@ch 0077  
                     ADC_GetSample@hi 0078                          ___awdiv@sign 0075  
                _MENU_MemoryLoad_Init 1800               _BUTTON_was_long_pressed 00B8  
                        _UTILI_CalPWR 117D                          _UTILI_CalSWR 0800  
                         ?_BUTTON_Run 0070                       _MENU_Sleep_Init 1A0E  
                 ___wmul@multiplicand 0072              ?_MENU_StartupSave_Update 0070  
                          _TUNE_delay 00B2                                   l191 1BF9  
                                 l503 0912                                   l520 0883  
                                 l513 11D8                                   l506 0928  
                                 l700 2794                                   l532 1BC4  
                                 l540 1A96                                   l516 087B  
                                 l509 1E04                                   l710 196A  
                                 l526 1B90                                   l703 1AC5  
                                 l720 17E1                                   l536 1A68  
                                 l713 26BD                                   l721 17FF  
                                 l491 1498                                   l483 276B  
                                 l475 1876                                   l716 26B8  
                                 l900 26C3                                   l724 2731  
                                 l733 0D92                                   l750 1EF5  
                                 l478 1516                                   l487 182A  
                                 l904 1F03                                   l744 0EA2  
                                 l690 2744                                   l915 1F4C  
                                 l908 1F24                                   l748 1EE6  
                                 l756 1D80                                   l693 1C9D  
                                 l749 1EE4                                   l694 1CC0  
                                 l687 1843                                   l695 1CA4  
                                 l697 1CD2                                   l897 26FF  
                                 _PR2 001B               __end_of_MENU_TParam_Run 0C09  
                        ?_BUTTON_Init 0070                            _TUNE_state 00B5  
                        _str_Hardware 2913                          ___awmod@sign 0075  
                     __end_of_ADC_Run 07F6                                   wreg 0009  
                         _str_Version 29BA                       _MENU_Sub_Update 1C2F  
                        _str_Firmware 291C                           _str_Running 285F  
                      _str_TUNE_State 0148                  _MENU_MemorySave_Init 276C  
                     __end_of_DISP_On 26BE           __end_of_MENU_RelTest_Update 0B3F  
                       _UTILI_Int2Str 141B                  EEPROM_Write@ptrValue 0073  
            MENU_RelTest_Update@c_row 003A                                  l1200 26E6  
                                l1302 0B2A                                  l1230 27FE  
                                l1303 0B3E                                  l1320 0C9B  
                                l2041 185C                                  l1241 198F  
                                l1313 0C77                                  l1410 1FA4  
                                l1306 1892                                  l1226 0FFF  
                                l2035 1FFF                                  l1235 27D3  
                                l1331 0D46                                  l2204 2757  
                                l1500 07FE                                  l1244 1945  
                                l1413 26F2                                  l1229 27FE  
                                l1333 0D01                                  l1342 0D3A  
                                l2047 18AF                                  l1255 139F  
                                l1239 197D                                  l1423 15A1  
                                l2080 26DA                                  l1416 1812  
                                l1504 18E9                                  l1249 19E0  
                                l1265 0B67                                  l1273 0C08  
                                l2074 18FD                                  l1194 09D4  
                                l1450 0A88                                  l1258 1DC0  
                                l1282 1A3A                                  l1338 0CF0  
                                l2243 15B5                                  l2331 117C  
                                l1419 277F                                  l1347 0D29  
                                l2076 1901                                  l2180 1926  
                                l1356 1243                                  l1372 071C  
                                l2253 162D                                  l2077 1907  
                                l2069 1A0D                                  l1197 1B29  
                                l1293 1679                                  l1390 1C64  
                                l1382 27BE                                  l1279 1324  
                                l1359 18CC                                  l1455 1D0A  
                                l1471 175D                                  l2344 1EA4  
                                l2192 1B5C                                  l1480 1D44  
                                l1296 16BF                                  l1449 0A60  
                                l1385 27A9                                  l1289 1656  
                                l2178 1912                                  l1490 1C9A  
                                l1394 12B1                                  l1475 19B6  
                                l1811 270F                                  l1900 036C  
                                l1653 27E9                                  l1494 1E53  
                                l1487 1C2E                                  l1656 1AD7  
                                l1664 07F5                                  l1659 1AF7  
                                l1860 015F                                  l1845 037E  
                                l1862 0173                                  l1854 00D7  
                                l1864 018A                                  l1893 0315  
                                l7200 2747                                  l8000 09CB  
                                l7130 183D                                  l7122 182B  
                                l7202 274B                                  l8002 09CE  
                                l8010 27F2                                  l1898 033F  
                                l7124 182D                                  l7140 1C9C  
                                l7132 2732                                  l7220 112E  
                                l7212 1122                                  l7204 274D  
                                l7300 0D52                                  l8004 26DB  
                                l8012 27BF                                  l8020 196E  
                                l8100 015C                                  l7126 1831  
                                l7150 1CAA                                  l7134 2734  
                                l7230 1141                                  l7222 1132  
                                l7214 1123                                  l7206 274F  
                                l7310 0D62                                  l7302 0D54  
                                l8006 26E3                                  l8030 192A  
                                l8014 27C2                                  l8022 1974  
                                l8110 016E                                  l7128 1837  
                                l7160 1CC6                                  l7152 1CB0  
                                l7136 2738                                  l7240 115E  
                                l7232 1144                                  l7224 1137  
                                l7216 1127                                  l7208 2756  
                                l7400 0E82                                  l7320 0D9E  
                                l7312 0D66                                  l7304 0D5A  
                                l8032 192D                                  l8016 27D0  
                                l8008 27EA                                  l8024 197A  
                                l8200 02B7                                  l8112 017E  
                                l8104 0161                                  l8040 004B  
                                l9000 1714                                  l7162 1CCC  
                                l7154 1CB6                                  l7146 1CA1  
                                l7138 273E                                  l7170 26B9  
                                l7410 1946                                  l7250 1173  
                                l7242 1162                                  l7234 1149  
                                l7226 1139                                  l7218 112C  
                                l7402 0E88                                  l7330 0DC8  
                                l7322 0DB5                                  l7314 0D6F  
                                l7306 0D5B                                  l8034 1938  
                                l8026 197F                                  l8018 196B  
                                l8210 02E3                                  l8202 02BA  
                                l8130 01AB                                  l8114 017F  
                                l8106 0164                                  l8122 018C  
                                l8050 0061                                  l8042 0052  
                                l9002 1716                                  l9010 1733  
                                l7156 1CB8                                  l7148 1CA6  
                                l7164 2781                                  l7420 194F  
                                l7412 1949                                  l7180 26D7  
                                l7172 26D1                                  l9100 1BD7  
                                l7252 1178                                  l7244 1163  
                                l7236 114B                                  l7228 113B  
                                l7404 0E91                                  l7340 0DE0  
                                l7332 0DCC                                  l7308 0D60  
                                l7316 0D8A                                  l8300 1855  
                                l7260 1E59                                  l8036 193A  
                                l8028 1927                                  l8220 02FD  
                                l8212 02ED                                  l8204 02BD  
                                l8140 01B4                                  l8132 01AE  
                                l8124 01A2                                  l8116 0184  
                                l8108 0169                                  l8060 0080  
                                l8052 0064                                  l8044 0059  
                                l9012 173A                                  l9020 1756  
                                l9004 171C                                  l7158 1CC2  
                                l7166 1A98                                  l7430 1956  
                                l7174 26D4                                  l9110 1BE0  
                                l9102 1BD8                                  l7246 1168  
                                l7238 114F                                  l7190 1917  
                                l7406 0E96                                  l7350 0DF3  
                                l7342 0DE5                                  l7334 0DD1  
                                l7318 0D98                                  l8302 1857  
                                l7270 1E6F                                  l7262 1E5E  
                                l7510 1B86                                  l8038 1942  
                                l8310 1A1E                                  l8230 0318  
                                l8222 0303                                  l8214 02F3  
                                l8150 01E6                                  l8142 01BF  
                                l8070 00A3                                  l8062 008F  
                                l8054 0067                                  l8046 005E  
                                l9014 1742                                  l9006 171D  
                                l9030 1C03                                  l7168 26B4  
                                l7432 195C                                  l9200 1771  
                                l7176 26D5                                  l7440 1899  
                                l9120 1BE6                                  l9112 1BE1  
                                l9104 1BDA                                  l7248 116E  
                                l7192 191C                                  l7184 1908  
                                l7408 0E9F                                  l7352 0DF8  
                                l7344 0DEA                                  l7336 0DD6  
                                l7328 0DB6                                  l7360 0E0F  
                                l7280 1E87                                  l7272 1E72  
                                l7264 1E60                                  l7256 1E54  
                                l7600 14B4                                  l7512 1B8C  
                                l7504 1B60                                  l8400 277C  
                                l8312 1A29                                  l8304 1A0E  
                                l8320 1877                                  l8240 032D  
                                l8232 031D                                  l8216 02FA  
                                l8224 0307                                  l8208 02D0  
                                l8160 0218                                  l8152 01E9  
                                l8144 01CA                                  l8128 01A6  
                                l8080 00D2                                  l8072 00A5  
                                l8064 0094                                  l8056 006D  
                                l9016 1752                                  l9008 1730  
                                l9040 1C19                                  l9032 1C09  
                                l7434 195E                                  l7426 1950  
                                l7418 194A                                  l9210 1786  
                                l9202 1776                                  l7178 26D6  
                                l7442 18A2                                  l9130 1BEB  
                                l9122 1BE7                                  l9114 1BE3  
                                l9106 1BDB                                  l7194 1922  
                                l7186 190A                                  l7362 0E18  
                                l7354 0DFB                                  l7346 0DEC  
                                l7338 0DDB                                  l7450 1813  
                                l7290 1EA0                                  l7282 1E8B  
                                l7274 1E77                                  l7266 1E64  
                                l7258 1E55                                  l7610 14DF  
                                l7602 14BC                                  l7506 1B6E  
                                l7530 1BC0                                  l7522 1B94  
                                l8314 1A2B                                  l8306 1A11  
                                l8330 1888                                  l8322 187A  
                                l8410 1CEF                                  l8402 1CD3  
                                l8250 0342                                  l8234 0324  
                                l8242 0331                                  l8226 030D  
                                l8170 0268                                  l8162 023A  
                                l8154 020B                                  l8146 01D5  
                                l8138 01B2                                  l8090 0102  
                                l8082 00EA                                  l8074 00A9  
                                l8066 00A0                                  l8058 007C  
                                l9050 1E13                                  l9042 1C21  
                                l9034 1C0A                                  l9026 1BFA  
                                l9300 1F39                                  l7436 1964  
                                l7428 1954                                  l9220 179A  
                                l9212 178A                                  l9204 177A  
                                l7444 18A4                                  l9140 1BF0  
                                l9132 1BEC                                  l9124 1BE8  
                                l9116 1BE4                                  l9108 1BDE  
                                l7188 190E                                  l7380 0E54  
                                l7364 0E1F                                  l7356 0E01  
                                l7348 0DEF                                  l7452 1825  
                                l7284 1E90                                  l7276 1E79  
                                l7268 1E69                                  l7460 141D  
                                l7540 1B32                                  l7620 1507  
                                l7612 14E7                                  l7604 14C4  
                                l7508 1B84                                  l7524 1BA2  
                                l7516 1B91                                  l7700 1AFB  
                                l8316 1A2F                                  l8308 1A14  
                                l8332 188A                                  l8324 187D  
                                l8340 18B0                                  l8412 1D00  
                                l8404 1CDF                                  l8420 1D0B  
                                l8244 0337                                  l8252 0342  
                                l8180 029A                                  l8172 026B  
                                l8164 023D                                  l8156 020E  
                                l8148 01E0                                  l8092 012A  
                                l8084 00F7                                  l8076 00BB  
                                l8068 00A2                                  l8500 0F65  
                                l9060 1E23                                  l9044 1C2B  
                                l9028 1C01                                  l9036 1C0D  
                                l9302 1F3E                                  l9230 17AE  
                                l9222 179E                                  l9214 178E  
                                l9206 177E                                  l7446 18A6  
                                l7438 1894                                  l9150 1BF8  
                                l9142 1BF1                                  l9134 1BED  
                                l9126 1BE9                                  l9118 1BE5  
                                l7534 26BE                                  l7198 2746  
                                l7390 0E6D                                  l7382 0E59  
                                l7374 0E3D                                  l7366 0E25  
                                l7358 0E0A                                  l7294 0D49  
                                l7454 1826                                  l7278 1E7D  
                                l7286 1E96                                  l7470 1432  
                                l7542 1B36                                  l7622 150F  
                                l7614 14EF                                  l7606 14CC  
                                l7630 1A3B                                  l7526 1BB8  
                                l7710 1B1C                                  l7702 1AFE  
                                l8318 1A37                                  l8334 188B  
                                l8326 187F                                  l8350 18C6  
                                l8342 18B3                                  l8414 1D02  
                                l8406 1CE2                                  l8430 1D31  
                                l8422 1D0E                                  l8254 0347  
                                l8262 035C                                  l8238 0327  
                                l8190 02AA                                  l8182 029D  
                                l8174 0272                                  l8166 0243  
                                l8158 0215                                  l8094 012C  
                                l8086 00F9                                  l8078 00BF  
                                l8270 036F                                  l8510 0F95  
                                l8502 0F68                                  l9070 1E48  
                                l9062 1E25                                  l9054 1E17  
                                l9038 1C14                                  l9310 18CD  
                                l9080 1AD5                                  l7560 15C4  
                                l7552 15A2                                  l9304 1F41  
                                l9240 17C2                                  l9232 17B2  
                                l9224 17A2                                  l9216 1792  
                                l9208 1782                                  l7448 18AA  
                                l9152 19E1                                  l9144 1BF2  
                                l9136 1BEE                                  l9128 1BEA  
                                l7536 26C1                                  l7392 0E72  
                                l7384 0E5E                                  l7376 0E4F  
                                l7368 0E3C                                  l7296 0D4E  
                                l7288 1E9B                                  l7480 144A  
                                l7472 1434                                  l7464 1424  
                                l7544 1B3E                                  l7616 14F7  
                                l7608 14D7                                  l7640 1A5D  
                                l7528 1BBA                                  l7800 2703  
                                l7712 1B24                                  l7704 1B08  
                                l8360 27B2                                  l8440 1C68  
                                l8280 1D9C                                  l8272 1D81  
                                l8336 188C                                  l8328 1887  
                                l8352 18C9                                  l8344 18B5  
                                l8416 1D04                                  l8408 1CE5  
                                l8432 1D3C                                  l8424 1D1A  
                                l7624 1DC1                                  l8256 034C  
                                l8248 0342                                  l8192 02AD  
                                l8184 02A0                                  l8176 0275  
                                l8168 0246                                  l8096 012E  
                                l8088 00FC                                  l8520 0FB4  
                                l8512 0F9A                                  l8504 0F6E  
                                l9064 1E28                                  l9056 1E1C  
                                l9048 1E05                                  l8600 0BA8  
                                l9312 18DD                                  l9320 13A9  
                                l9082 1ADB                                  l7570 15E2  
                                l7562 15C6                                  l7554 15A4  
                                l9250 071D                                  l9306 1F47  
                                l9242 17C6                                  l9234 17B6  
                                l9226 17A6                                  l9218 1796  
                                l9170 1FA5                                  l9162 19ED  
                                l9146 1BF3                                  l9138 1BEF  
                                l9090 1BC8                                  l7394 0E76  
                                l7386 0E63                                  l7378 0E50  
                                l7298 0D51                                  l7490 1486  
                                l7482 145C                                  l7474 1439  
                                l7466 142A                                  l7458 141B  
                                l7546 1B45                                  l7538 1B2A  
                                l7618 14FF                                  l7642 1A63  
                                l7634 1A43                                  l7650 1A79  
                                l7730 1F85                                  l7810 132D  
                                l7802 2709                                  l7714 1B27  
                                l7706 1B13                                  l8370 2795  
                                l8362 27B3                                  l8354 27AA  
                                l8450 1C96                                  l8442 1C72  
                                l8290 1DBD                                  l8282 1DA7  
                                l8274 1D84                                  l8338 188F  
                                l8346 18B6                                  l8418 1D07  
                                l8434 1D3E                                  l8426 1D25  
                                l7626 1E00                                  l8194 02AF  
                                l8186 02A3                                  l8178 0297  
                                l8098 0156                                  l8530 0FDA  
                                l8522 0FBC                                  l8506 0F73  
                                l8514 0FA6                                  l9066 1E32  
                                l9058 1E1E                                  l8602 0BAB  
                                l9330 13C6                                  l9322 13AC  
                                l9314 13A0                                  l9180 27E8  
                                l9084 1AE2                                  l9076 1AC7  
                                l7580 1608                                  l7572 15E6  
                                l7564 15CE                                  l7556 15A8  
                                l9260 0732                                  l9252 072E  
                                l9172 26F3                                  l9308 1F4A  
                                l9244 17CA                                  l9236 17BA  
                                l9228 17AA                                  l9164 19FA  
                                l9156 19EB                                  l9148 1BF4  
                                l9092 1BCC                                  l7396 0E7A  
                                l7388 0E68                                  l7740 07FB  
                                l8292 1845                                  l7492 148B  
                                l7484 146C                                  l7476 143B  
                                l7468 142E                                  l7548 1B54  
                                l7660 2724                                  l7636 1A4B  
                                l7652 1A84                                  l7644 1A69  
                                l7732 1F87                                  l7724 1F5A  
                                l7716 1F4D                                  l7820 12B5  
                                l7812 133F                                  l7804 270C  
                                l7708 1B15                                  l8380 27A0  
                                l8372 2798                                  l8364 27B5  
                                l8356 27AD                                  l8452 1C98  
                                l8444 1C7D                                  l8284 1DA9  
                                l8276 1D87                                  l8348 18BE  
                                l8436 1D41                                  l8428 1D2F  
                                l8196 02B2                                  l8188 02A6  
                                l8540 0FFC                                  l8532 0FDB  
                                l8524 0FC1                                  l8516 0FAD  
                                l8508 0F82                                  l8460 0EB9  
                                l9068 1E3D                                  l8620 0BFD  
                                l8612 0BCB                                  l8604 0BB2  
                                l8700 0C47                                  l9340 13E9  
                                l9332 13D1                                  l9324 13AF  
                                l9316 13A3                                  l9174 27D4  
                                l9078 1AD1                                  l7582 160F  
                                l7574 15ED                                  l7566 15D6  
                                l7558 15B9                                  l9270 07D9  
                                l9262 0755                                  l9254 072F  
                                l9246 17D0                                  l9238 17BE  
                                l9190 1765                                  l9166 19FE  
                                l9094 1BD1                                  l7398 0E7F  
                                l8294 1848                                  l7494 148D  
                                l7486 147B                                  l7478 143D  
                                l7670 1EC7                                  l7750 2765  
                                l7742 2758                                  l7662 2725  
                                l7638 1A56                                  l7654 1A8B  
                                l7734 1F9B                                  l7726 1F60  
                                l7718 1F59                                  l7910 09FB  
                                l7830 12FC                                  l7822 12BA  
                                l7814 1350                                  l7806 1325  
                                l8382 27A2                                  l8374 279B  
                                l8366 27B7                                  l8358 27B0  
                                l8390 180D                                  l8446 1C88  
                                l8438 1C65                                  l8286 1DAD  
                                l8278 1D91                                  l8198 02B4  
                                l8550 19C4                                  l8542 19B7  
                                l8534 0FE3                                  l8518 0FB3  
                                l8526 0FCD                                  l8470 0ED8  
                                l8462 0EBF                                  l8454 0EA3  
                                l8614 0BDF                                  l8606 0BC0  
                                l8630 162E                                  l8710 0C65  
                                l8702 0C4A                                  l9182 185D  
                                l9350 1409                                  l9342 13F3  
                                l9334 13DC                                  l9326 13B6  
                                l9318 13A6                                  l9176 27E1  
                                l7576 15FF                                  l7568 15D9  
                                l7584 1615                                  l9264 077A  
                                l9280 1F0D                                  l9272 1EF6  
                                l9248 17D9                                  l9192 1766  
                                l9168 1A07                                  l9096 1BD3  
                                l9088 1BC5                                  l8296 1851  
                                l7488 1481                                  l7496 1492  
                                l7680 1EE2                                  l7672 1EC8  
                                l7664 1EA7                                  l7592 1499  
                                l7752 2768                                  l7744 275C  
                                l7656 1A91                                  l7648 1A71  
                                l7736 1F9E                                  l7728 1F74  
                                l7920 0A1E                                  l7912 0A01  
                                l7904 09D7                                  l7840 0A90  
                                l7832 1310                                  l7824 12CC  
                                l7816 1363                                  l7808 1328  
                                l8384 27A6                                  l8376 279D  
                                l8368 27BB                                  l8392 180F  
                                l8448 1C93                                  l8288 1DB5  
                                l7760 11CD                                  l8560 19D8  
                                l8552 19C7                                  l8544 19BA  
                                l8536 0FE8                                  l8528 0FD4  
                                l8480 0F07                                  l8472 0EEB  
                                l8464 0ECC                                  l8456 0EA6  
                                l8616 0BE9                                  l8608 0BC7  
                                l8624 0C01                                  l8632 1635  
                                l8640 1641                                  l8720 0C83  
                                l8712 0C6B                                  l8704 0C51  
                                l8800 055F                                  l9184 1863  
                                l9352 1410                                  l9344 13FB  
                                l9336 13E3                                  l9328 13BC  
                                l9178 27E5                                  l7586 161A  
                                l7578 1607                                  l9266 0780  
                                l9258 0730                                  l9282 1F13  
                                l9290 1F26                                  l9274 1EFB  
                                l9194 1767                                  l9098 1BD5  
                                l7738 07F6                                  l8298 1853  
                                l7682 1EE8                                  l7674 1ED4  
                                l7666 1EA9                                  l7594 149C  
                                l7746 2760                                  l7658 2722  
                                l7690 1D62                                  l7498 1B5D  
                                l7930 0A31                                  l7922 0A24  
                                l7914 0A0D                                  l7906 09F2  
                                l7850 0ACB                                  l7842 0A96  
                                l7834 0A89                                  l7826 12DD  
                                l7818 12B2                                  l8378 279E  
                                l8394 276C                                  l8386 1800  
                                l7762 11D0                                  l7754 117D  
                                l7770 0820                                  l8554 19CD  
                                l8546 19BD                                  l8538 0FF6  
                                l8490 0F3C                                  l8482 0F12  
                                l8474 0EF4                                  l8466 0ECF  
                                l8458 0EA9                                  l8618 0BF3  
                                l8570 0B48                                  l8650 165B  
                                l8642 1648                                  l8634 1637  
                                l8730 0CA2                                  l8722 0C89  
                                l8714 0C71                                  l8706 0C59  
                                l8810 057A                                  l8802 0566  
                                l9186 1870                                  l9354 1411  
                                l9346 1402                                  l9338 13E6  
                                l7588 1625                                  l9268 07BE  
                                l9292 1F2B                                  l9284 1F19  
                                l9276 1F01                                  l9196 1769  
                                l9188 175F                                  l7780 18F0  
                                l7684 1EE9                                  l7676 1EDA  
                                l7668 1EB6                                  l7860 11D9  
                                l7596 14A4                                  l7748 2762  
                                l7692 1D6E                                  l7940 0A4E  
                                l7932 0A33                                  l7924 0A2E  
                                l7916 0A0F                                  l7908 09F5  
                                l7852 0AD7                                  l7844 0A9B  
                                l7836 0A8C                                  l7828 12E9  
                                l8396 276F                                  l8388 1803  
                                l7756 11B4                                  l7772 0869  
                                l7764 0800                                  l8556 19D4  
                                l8548 19C3                                  l8492 0F45  
                                l8484 0F1D                                  l8476 0EF5  
                                l8468 0ED2                                  l8900 127A  
                                l8580 0B60                                  l8572 0B4E  
                                l8660 168B                                  l8652 1661  
                                l8644 164F                                  l8636 163D  
                                l8740 0CB5                                  l8732 0CA8  
                                l8724 0C8F                                  l8716 0C74  
                                l8708 0C5F                                  l8820 05AB  
                                l8812 0580                                  l8804 0569  
                                l9356 1414                                  l9348 1406  
                                l9294 1F2E                                  l9286 1F1F  
                                l9278 1F09                                  l9198 176E  
                                l7790 18F8                                  l7782 18F1  
                                l7678 1EDC                                  l7870 1203  
                                l7862 11E1                                  l7950 08C6  
                                l7598 14AC                                  l7694 1D71  
                                l7686 1D47                                  l7934 0A39  
                                l7918 0A11                                  l7942 0A55  
                                l7854 0AFB                                  l7846 0AA7  
                                l7838 0A8E                                  l8398 2779  
                                l7758 11C0                                  l7774 0876  
                                l7766 0803                                  l8494 0F46  
                                l8478 0EF9                                  l8486 0F23  
                                l8902 127E                                  l8910 128F  
                                l8590 0B83                                  l8582 0B65  
                                l8574 0B4F                                  l8566 0B3F  
                                l8670 16B4                                  l8654 166E  
                                l8662 168E                                  l8646 1654  
                                l8638 163E                                  l8750 0CC3  
                                l8742 0CBC                                  l8734 0CAB  
                                l8726 0C95                                  l8718 0C7D  
                                l8830 05D3                                  l8822 05B0  
                                l8814 0593                                  l8806 056C  
                                l9296 1F34                                  l9288 1F22  
                                l7792 18FA                                  l7784 18F2  
                                l7872 120E                                  l7864 11E4  
                                l7952 08CE                                  l7696 1D73  
                                l7688 1D55                                  l7960 0929  
                                l7936 0A3A                                  l7856 0B01  
                                l7848 0AAF                                  l7944 1990  
                                l7768 0811                                  l8496 0F56  
                                l8488 0F36                                  l8912 1296  
                                l8592 0B88                                  l8584 0B69  
                                l8568 0B46                                  l8576 0B52  
                                l8664 1695                                  l8656 1674  
                                l8648 1658                                  l8760 0CDA  
                                l8736 0CAC                                  l8728 0C98  
                                l8752 0CC6                                  l8680 0C09  
                                l8840 05F0                                  l8832 05E1  
                                l8824 05BD                                  l8816 05A0  
                                l8808 0573              MENU_RelTest_Update@l_row 003B  
                                l9298 1F37                                  l7794 18FC  
                                l7786 18F3                                  l7778 18EB  
                                l7874 1230                                  l7866 11EE  
                                l7954 08F6                                  l7946 0884  
                                l7970 0952                                  l7962 092E  
                                l7938 0A4B                                  l7858 0B16  
                                l7890 1C5E                                  l7698 1AF8  
                                l8498 0F5D                                  l8914 12A5  
                                l8906 1281                                  l8930 1539  
                                l8922 1529                                  l8594 0B8B  
                                l8586 0B6C                                  l8578 0B59  
                                l8666 16A0                                  l8674 16B8  
                                l8658 1686                                  l8770 0CF6  
                                l8762 0CE0                                  l8754 0CC8  
                                l8738 0CAF                                  l8690 0C28  
                                l8682 0C12                                  l8850 062B  
                                l8842 0600                                  l8826 05C1  
                                l8818 05A6                                  l8834 05E5  
                                l7796 1902                                  l7788 18F7  
                                l7868 11F8                                  l7956 0924  
                                l7948 08BD                                  l7980 097E  
                                l7972 0957                                  l7964 092E  
                                l7892 26E7                                  l7884 1C33  
                                l7876 1C2F                                  l8908 128C  
                                l8932 154D                                  l8940 155C  
                                l8924 152F                                  l8916 1517  
                                l8596 0B92                                  l8588 0B72  
                                l8668 16AA                                  l8780 0D13  
                                l8772 0CFC                                  l8764 0CE6  
                                l8756 0CCE                                  l8748 0CC0  
                                l8684 0C13                                  l8692 0C37  
                                l8860 064E                                  l8844 060E  
                                l8852 062F                                  l8828 05CE  
                                l7990 09B5                                  l7982 098A  
                                l7974 095D                                  l7966 093C  
                                l7894 26EC                                  l7886 1C5A  
                                l7878 1C32                                  l7798 2700  
                                l8950 1575                                  l8934 1551  
                                l8926 1531                                  l8942 155F  
                                l8918 1525                                  l8598 0BA3  
                                l8790 0D2F                                  l8782 0D19  
                                l8774 0CFE                                  l8766 0CEB  
                                l8758 0CD4                                  l8694 0C3E  
                                l8686 0C16                                  l8870 06EB  
                                l8862 065D                                  l8854 063F  
                                l8846 061D                                  l8838 05E9  
                                l7992 09BA                                  l7984 0996  
                                l7976 096A                                  l7968 094C  
                                l7896 26EF                                  l7888 1C5C  
                                l8960 1598                                  l8952 157B  
                                l8944 1566                                  l8928 1535  
                                l8792 0D35                                  l8784 0D1F  
                                l8776 0D07                                  l8768 0CED  
                                l8696 0C40                                  l8688 0C19  
                                l8872 06F5                                  l8864 0669  
                                l8856 0647                                  l8848 0620  
                                l7978 0976                                  l7986 09AA  
                                l7898 09D5                                  l8890 1256  
                                l8946 156B                                  l8938 1554  
                                l8794 0D37                                  l8786 0D24  
                                l8778 0D0D                                  l8698 0C46  
                                l8874 06FF                                  l8866 0676  
                                l8858 064A                                  l8882 0714  
                                l8970 16C8                                  l7988 09B0  
                                l8892 125C                                  l8884 1244  
                                l8948 1570                                  l8796 0D40  
                                l8788 0D26                                  l8876 0709  
                                l8868 06B5                                  l8972 16CE  
                                l8980 16DA                                  l7998 09BB  
                                l8894 125E                                  l8886 1252  
                                l8958 1588                                  l8798 0D43  
                                l8990 16F1                                  l8982 16E1  
                                l8974 16D0                                  l8966 16C0  
                                STR_1 281D                                  l8896 1262  
                                l8992 16FD                                  l8984 16E3  
                                l8976 16D6                                  l8968 16C6  
                                l8898 1266                                  l8994 16FF  
                                l8986 16E9                                  l8978 16D7  
                                l8996 1701                                  l8988 16EB  
                                l8998 170E                                  _LATA 010C  
                                _LATB 010D                                  _LATC 010E  
                                u8010 1BA2                                  u8011 1BA1  
                                u8020 1BC0                                  u8004 1B99  
                                u8021 1BBF                                  u8005 1B98  
                                u8110 15E6                                  u8030 1B36  
                                u8111 15E5                                  u8031 1B35  
                                u9000 122B                                  u8105 15DA  
                                u8130 15FF                                  u7410 190E  
                                u9010 123D                                  u8210 14B2  
                                u8131 15FE                                  u7411 190D  
                                u9011 123B                                  u8211 14AF  
                                u9020 123E                                  u8060 1B54  
                                u8204 14AC                                  u9100 0A1E  
                                u8125 15E7                                  u7405 1AB1  
                                u8061 1B53                                  u8045 1B3F  
                                u9101 0A1D                                  u8150 1615  
                                u8070 15A8                                  u7510 114F  
                                u8310 14DD                                  u8230 14BA  
                                u9110 0A24                                  u9030 1C54  
                                u8151 1614                                  u8135 15FB  
                                u8071 15A7                                  u7511 114E  
                                u8055 1B46                                  u8311 14DA  
                                u8231 14B7                                  u9111 0A23  
                                u9031 1C52                                  u8160 161A  
                                u8080 15B9                                  u7440 1922  
                                u8304 14D4                                  u8224 14B4  
                                u9120 0A39                                  u9200 19B0  
                                u9040 1C55                                  u8161 1619  
                                u8145 1609                                  u8081 15B8  
                                u7505 1145                                  u7441 1921  
                                u7425 1913                                  u9121 0A38  
                                u9201 19AE                                  u8090 15D6  
                                u7530 115E                                  u7450 274B  
                                u7610 1E7D                                  u8410 1505  
                                u8330 14E5                                  u8250 14C2  
                                u8170 14A2                                  u9130 0A54  
                                u9210 19B1                                  u9050 1C64  
                                u8091 15D5                                  u7531 115D  
                                u7451 274A                                  u7435 1918  
                                u7611 1E7C                                  u8411 1502  
                                u8331 14E2                                  u8251 14BF  
                                u8171 149F                                  u9131 0A53  
                                u9051 1C63                                  u7380 1CA1  
                                u7460 2756                                  u7620 1E87  
                                u9220 0924                                  u8404 14FF  
                                u8324 14DF                                  u8244 14BC  
                                u8500 1D51                                  u9140 0A6E  
                                u9060 09EB                                  u9300 0052  
                                u7381 1CA0                                  u7525 1150  
                                u7461 2755                                  u7621 1E86  
                                u7605 1E73                                  u9221 0923  
                                u9141 0A6C                                  u9061 09E9  
                                u9301 0051                                  u7390 1CC0  
                                u7550 116E                                  u7470 1127  
                                u8430 150D                                  u8350 14ED  
                                u8270 14CA                                  u8190 14AA  
                                u8510 1D62                                  u9230 0952  
                                u9150 0A6F                                  u9070 09EC  
                                u9310 0058                                  u7391 1CBF  
                                u7551 116D                                  u7535 115A  
                                u7471 1126                                  u8431 150A  
                                u8351 14EA                                  u8271 14C7  
                                u8191 14A7                                  u8511 1D61  
                                u9231 0951                                  u9311 0057  
                                u7560 1173                                  u7480 1132  
                                u7640 1E96                                  u8424 1507  
                                u8344 14E7                                  u8264 14C4  
                                u8184 14A4                                  u9240 095D  
                                u8520 1F6E                                  u9160 0A82  
                                u9080 09FB              __end_of_MENU_TParam_Init 1DC1  
                                u8600 0820                                  u9400 012A  
                                u9320 005E                                  u7561 1172  
                                u7545 1164                                  u7481 1131  
                                u7705 0DD1                                  u7641 1E95  
                                u7625 1E83                                  u9225 0920  
                                u9241 095C                                  u8521 1F6C  
                                u9161 0A80                                  u9081 09FA  
                                u8601 081F                                  u9401 0129  
                                u9321 005D                                  u7490 1141  
                                u7650 1E9B                                  u7570 1E59  
                                u8370 14F5                                  u8290 14D2  
                                u8450 1A42                                  u9250 09B0  
                                u8530 1F6F                                  u9170 0A83  
                                u9090 0A01                                  u8610 0876  
                                u9410 0156                                  u9330 006D  
                                u7491 1140                                  u7715 0DD6  
                                u7651 1E9A                                  u7635 1E8C  
                                u7571 1E58                                  u8371 14F2  
                                u8291 14CF                                  u8515 1D5E  
                                u8451 1A41                                  u9251 09AF  
                                u9091 0A00                                  u8611 0875  
                                u9411 0155                                  u9331 006C  
                                u8620 1901                                  u7660 0D4E  
                                u7900 1825                                  u7580 1E64  
                                u8444 150F                                  u8364 14EF  
                                u8284 14CC                                  u8460 1A70  
                                u9260 09B5                                  u8540 1F95  
                                u9180 199D                                  u8700 1371  
                                u9500 02CF                                  u9420 015C  
                                u9340 007C                                  u8621 1900  
                                u7805 0E5E                                  u7725 0DDB  
                                u7661 0D4D                                  u7901 1824  
                                u7581 1E63                                  u8461 1A6F  
                                u9261 09B4                                  u8541 1F93  
                                u9181 199B                                  u8701 136F  
                                u8605 081C                                  u9501 02CE  
                                u9421 015B                                  u9405 0126  
                                u9341 007B                                  u7670 0D5A  
                                u7590 1E6F                                  u7910 1423  
                                u8470 1EB6                                  u8390 14FD  
                                u9270 09D4                                  u8550 1F96  
                                u9190 199E                                  u8710 1372  
                                u8630 132D                                  u9510 02E3  
                                u9430 017E                                  u9350 008F  
                                u7815 0E63                                  u7735 0DE0  
                                u7671 0D59                                  u7591 1E6E  
                                u7911 1422                                  u8471 1EB5  
                                u8391 14FA                                  u9271 09D3  
                                u8631 132C                                  u8615 0872  
                                u9511 02E2                                  u9431 017D  
                                u9415 0152                                  u9351 008E  
                                u7760 0E01                                  u7680 0D6F  
                                u7920 1432                                  u8480 1EDA  
                                u8384 14F7                                  u8560 1FA4  
                                u8800 12D8                                  u8720 1385  
                                u8640 1338                                  u9280 1974  
                                u9600 0337                                  u9520 02F3  
                                u9440 0189                                  u9360 00BB  
                                u7825 0E68                                  u7761 0E00  
                                u7745 0DE5                                  u7681 0D6E  
                                u7921 1431                                  u8481 1ED9  
                                u8561 1FA3                                  u8721 1383  
                                u8641 1336                                  u9281 1973  
                                u9601 0336                                  u9521 02F2  
                                u9505 02CB                                  u9441 0188  
                                u9361 00BA                                  u9345 0078  
                                u7850 0E88                                  u7770 0E18  
                                u7930 144A                                  u8490 1EE2  
                                u8570 275C                                  u8810 12F6  
                                u8730 1386                                  u8650 1339  
                                u9290 197A                                  u9610 033E  
                                u9530 02FA                                  u9450 01AB  
                                u9370 00D2                                  u7851 0E87  
                                u7835 0E6D                                  u7771 0E17  
                                u7755 0DEA                                  u7931 1449  
                                u8491 1EE1                                  u8475 1EB2  
                                u8571 275B                                  u8811 12F4  
                                u9291 1979                                  u9611 033D  
                                u9531 02F9                                  u9515 02DF  
                                u9451 01AA                                  u9371 00D1  
                                u9355 008B                                  u7860 0E9F  
                                u7940 147B                                  u8900 0AF5  
                                u8820 12F7                                  u8740 1399  
                                u8660 134A                                  u8580 11CD  
                                u9620 0347                                  u9540 0303  
                                u9460 01E6                                  u9380 00EA  
                                u9700 0EF4                                  u7861 0E9E  
                                u7845 0E72                                  u7941 147A  
                                u8901 0AF3                                  u8741 1397  
                                u8661 1348                                  u8581 11CC  
                                u9621 0346                                  u9541 0302  
                                u9461 01E5                                  u9381 00E9  
                                u9365 00B7                                  u9701 0EF3  
                                u7870 195C                                  u7950 1486  
                                u8910 0AF6                                  u8830 130A  
                                u8750 139A                                  u8670 134B  
                                u8590 0811                                  u9630 034C  
                                u9550 030D                                  u9470 0215  
                                u9390 0102                                  u9710 0F07  
                                u7871 195B                                  u7695 0DCC  
                                u7951 1485                                  u7935 1446  
                                u8831 1308                                  u8591 0810  
                                u9631 034B                                  u9551 030C  
                                u9471 0214                                  u9391 0101  
                                u9375 00CE                                  u9711 0F06  
                                u7880 1964                                  u9640 185C  
                                u7960 1498                                  u8920 0B01  
                                u8840 130B                                  u8760 12BA  
                                u8680 135D                                  u9560 0314  
                                u9480 0243                                  u9800 0F95  
                                u9720 0F36                                  u7881 1963  
                                u7785 0E54                                  u9641 185B  
                                u7961 1497                                  u8921 0B00  
                                u8761 12B9                                  u8681 135B  
                                u8585 11C9                                  u9561 0313  
                                u9481 0242                                  u9385 00E6  
                                u9801 0F94                                  u9721 0F35  
                                u7890 18AF                                  u8930 0B0F  
                                u8850 131E                                  u8770 12C5  
                                u8690 135E                                  u9570 031D  
                                u9490 0272                                  u9810 0FAD  
                                u9730 0F3C                                  u9650 0EB9  
                                u7891 18AE                                  u7795 0E59  
                                u8931 0B0D                                  u8851 131C  
                                u8771 12C3                                  u8595 080D  
                                u9571 031C                                  u9491 0271  
                                u9811 0FAC                                  u9731 0F3B  
                                u9715 0F03                                  u9651 0EB8  
                                u7980 1B6E                                  u8940 0B10  
                                u8860 131F                                  u8780 12C6  
                                u9580 0324                                  u9820 0FB3  
                                u9740 0F45                                  u9660 0EBF  
                                u9900 0B4E                                  u7981 1B6D  
                                u9581 0323                                  u9821 0FB2  
                                u9805 0F91                                  u9741 0F44  
                                u9725 0F32                                  u9661 0EBE  
                                u9901 0B4D                                  u7990 1B8C  
                                u7974 1B65                                  u8950 0B24  
                                u8870 0A96                                  u8790 12D7  
                                u9590 032D                                  u9830 0FD4  
                                u9750 0F56                                  u9670 0ECC  
                                u9910 0B59                                  u7991 1B8B  
                                u7975 1B64                                  u8951 0B22  
                                u8871 0A95                                  u8791 12D5  
                                u9591 032C                                  u9831 0FD3  
                                u9751 0F55                                  u9671 0ECB  
                                u9655 0EB5                                  u9911 0B58  
                                u8960 0B25                                  u8880 0AC5  
                                u9840 0FDA                                  u9760 0F5D  
                                u9680 0ED8                                  u9920 0B60  
                                u8881 0AC3                                  u9841 0FD9  
                                u9761 0F5C                                  u9681 0ED7  
                                u9921 0B5F                                  u8970 0B38  
                                u8890 0AC6                                  u9850 0FFC  
                                u9770 0F6E                                  u9690 0EEB  
                                u9930 0B65                                  u8971 0B36  
                                u9851 0FFB                                  u9771 0F6D  
                                u9755 0F52                                  u9691 0EEA  
                                u9675 0EC8                                  u9931 0B64  
                                u8980 0B39                                  u9860 19C3  
                                u9780 0F73                                  u9940 0B72  
                                u9861 19C2                                  u9781 0F72  
                                u9941 0B71                                  u8990 122A  
                                u9870 19CD                                  u9790 0F82  
                                u9950 0B83                                  u8991 1228  
                                u9871 19CC                                  u9791 0F81  
                                u9695 0EE7                                  u9951 0B82  
                                u9880 19DF                                  u9960 0B92  
                                u9881 19DE                                  u9961 0B91  
                                u9970 0BA3                                  u9890 0B46  
                                u9795 0F7E                                  u9971 0BA2  
                                u9955 0B7F                                  u9891 0B45  
                                u9980 0BB2                                  u9981 0BB1  
                                u9990 0BC0                                  u9991 0BBF  
                                u9975 0B9F                                  u9995 0BBC  
                      ??_eeprom_write 0071                                  _main 13A0  
                       ?_BUTTON_Reset 0070                                  fsr0h 0005  
                                fsr1h 0007                                  indf0 0000  
                                fsr0l 0004                                  indf1 0001  
                                fsr1l 0006                                  btemp 007E  
                    __end_of_I2C_Stop 2745                      __end_of_ADC_Init 27EA  
                                start 0015                      ?_MENU_CalPWR_Run 0070  
                   _MENU_Sleep_Update 12B2                           main@tunemem 01A0  
                _MENU_StartupSave_Run 1BFA                       EEPROM_Write@ptr 0077  
                    _MENU_SubTop_Init 2795                   _UTILI_Set_LC_Relays 2758  
                   ___bmul@multiplier 0072                        _UTILI_Delay_ms 185D  
                  ?_MENU_Sleep_Update 0070                      __end_of_DISP_PWR 1EF6  
                    __end_of_DISP_SWR 1D81                      __end_of_DISP_Clr 196B  
                    __end_of_DISP_Off 26B9                      __end_of_DISP_Str 0EA3  
                __end_of_EEPROM_Write 185D                 ?_MENU_MemoryLoad_Init 0070  
                     __end_of___aldiv 162E                                 ?_main 0070  
                 ??_MENU_Sleep_Update 007E                       __end_of___awdiv 117D  
                    __end_of_MENU_Run 18EA                       __end_of___awmod 1EA5  
             __end_of_MENU_Memory_Run 15A2              __end_of_MENU_Main_Weakup 26E7  
                               u10000 0C07                                 u10001 0C06  
                               u10010 1635                                 u10011 1634  
                               u10100 16BE                                 u10020 163D  
                               u10101 16BD                                 u10021 163C  
                               u10030 1648                                 u10110 0C12  
                               u10031 1647                                 u10111 0C11  
                               u11000 1F34                                 u10040 164F  
                               u10200 0C7D                                 u10120 0C3E  
                               u11001 1F33                                 u10041 164E  
                               u10201 0C7C                                 u10121 0C3D  
                               u11010 1F3E                                 u10050 1654  
                               u10210 0C83                                 u10130 0C46  
                               u11011 1F3D                                 u10051 1653  
                               u10211 0C82                                 u10131 0C45  
                               u11020 1F47                                 u10060 1661  
                               u10300 0CDA                                 u10220 0C89  
                               u10140 0C51                                 u11021 1F46  
                               u10061 1660                                 u10301 0CD9  
                               u10221 0C88                                 u10141 0C50  
                               u10070 166E                                 u10310 0CE0  
                               u10230 0C8F                                 u10150 0C59  
                               u11030 18DD                                 u10071 166D  
                               u10311 0CDF                                 u10231 0C8E  
                               u10151 0C58                                 u11031 18DC  
                               u10080 1686                                 u10400 0D1F  
                               u10320 0CE6                                 u10240 0C95  
                               u10160 0C5F                                 u11040 1402  
                               u10081 1685                                 u10401 0D1E  
                               u10321 0CE5                                 u10241 0C94  
                               u10161 0C5E                                 u11041 1401  
                               u10090 1695                                 u10410 0D24  
                               u10330 0CEB                                 u10250 0CA2  
                               u10170 0C65                                 u11050 1410  
                               u11107 2741                                 u10091 1694  
                               u10075 166A                                 u10411 0D23  
                               u10331 0CEA                                 u10251 0CA1  
                               u10171 0C64                                 u11051 140F  
                               u10420 0D2F                                 u10340 0CF6  
                               u10260 0CA8                                 u10180 0C6B  
                               u10500 05B0                                 u11117 1CA7  
                               u10085 1682                                 u10421 0D2E  
                               u10341 0CF5                                 u10261 0CA7  
                               u10181 0C6A                                 u10501 05AF  
                               u10430 0D35                                 u10350 0CFC  
                               u10270 0CB5                                 u10190 0C71  
                               u10510 05BD                                 u11207 1840  
                               u11127 1CAD                                 u10431 0D34  
                               u10351 0CFB                                 u10271 0CB4  
                               u10191 0C70                                 u10511 05BC  
                               u10600 125C                                 u10440 0D40  
                               u10360 0D07                                 u10280 0CCE  
                               u10520 05CE                                 u11217 1AD2  
                               u11137 1CB3                                 u10601 125B  
                               u10441 0D3F                                 u10361 0D06  
                               u10281 0CCD                                 u10521 05CD  
                               u10610 127A                                 u10370 0D0D  
                               u10290 0CD4                                 u10530 05F0  
                               u10450 0566                                 u11147 1CC3  
                               u10611 1279                                 u10371 0D0C  
                               u10291 0CD3                                 u10531 05EF  
                               u10515 05B9                                 u10451 0565  
                               u11067 1866                                 u10620 1296  
                               u10380 0D13                                 u10540 0600  
                               u10460 0573                                 u10700 16CE  
                     ___awdiv@divisor 0070                                 u11157 1CC9  
                               u11077 176B                                 u10621 1295  
                               u10381 0D12                                 u10541 05FF  
                               u10525 05CA                                 u10461 0572  
                               u10701 16CD                                 u10630 1525  
                               u10390 0D19                                 u10550 060E  
                               u10470 057A                                 u10710 16D6  
                               u11167 1CCF                                 u11087 2735  
                               u10615 1276                                 u10631 1524  
                               u10391 0D18                                 u10551 060D  
                               u10471 0579                                 u10711 16D5  
                               u10640 152F                                 u10560 063F  
                               u10480 0580                                 u10720 16E1  
                               u10800 1C01                                 u11177 182E  
                               u11097 273B                                 u10641 152E  
                               u10561 063E                                 u10545 05FC  
                               u10481 057F                                 u10721 16E0  
                               u10801 1C00                                 u10650 154D  
                               u10570 0647                                 u10490 05A0  
                               u10730 16E9                                 u10810 1C09  
                               u11187 1834                                 u10651 154C  
                               u10571 0646                                 u10555 060A  
                               u10491 059F                                 u10731 16E8  
                               u10811 1C08                                 u10660 1566  
                               u10580 06A0                                 u10740 16F1  
                               u10820 1C14                                 u10900 1876  
                               u11197 183A                                 u10661 1565  
                               u10565 063B                                 u10741 16F0  
                               u10821 1C13                                 u10901 1875  
                               u10910 17D0                                 u10590 1252  
                               u10670 156B                                 u10750 170E  
                               u10830 1C19                                 u10911 17CF  
                               u10591 1251                                 u10671 156A  
                               u10655 1549                                 u10495 059C  
                               u10751 170D                                 u10831 1C18  
                               u10920 0780                                 u10680 1570  
                               u10840 1E13                                 u10760 1714  
                               u10921 077F                                 u10681 156F  
                               u10841 1E12                                 u10585 069C  
                               u10761 1713                                 u10930 1EFB  
                               u10850 1E1C                                 u10770 171C  
                               u10690 16C6                                 u10931 1EFA  
                               u10851 1E1B                                 u10771 171B  
                               u10691 16C5                                 u10940 1F01  
                               u10860 1E23                                 u10780 173A  
                               u10941 1F00                                 u10861 1E22  
                               u10781 1739                                 u10870 1ADB  
                               u10950 1F09                                 u10790 175C  
                               u10871 1ADA                                 u10951 1F08  
                               u10791 175B                                 u10960 1F13  
                               u10880 19EA                                 u10961 1F12  
                               u10881 19E9                                 u10970 1F19  
                               u10890 1A07                                 u10971 1F18  
                               u10891 1A06              __end_of_MENU_Main_Update 09D5  
                               u10980 1F1F                                 u10981 1F1E  
                               u10990 1F2B                                 u10991 1F2A  
                               i1l197 0013                          _str_designed 290A  
                     ___awdiv@counter 0074                   ___lmul@multiplicand 0074  
                ?_UTILI_Set_LC_Relays 0071                 ?_MENU_MemorySave_Init 0070  
                  UTILI_Int2Str@minus 0020                        ?_UTILI_Int2Str 0078  
                     __end_of_font5x8 055F                         _str_WaitForHF 286A  
          __end_of_MENU_NameEdit_Init 1D0B                       __end_of_menuCal 294E  
                       _str_SpaceLine 2875                                 _myIsr 0004  
                        main@tick_old 00BB                                 btemp0 007E  
                               btemp1 007F          UTILI_GetIndValueStr@str_size 0024  
                   __end_of_I2C_Start 1844                      ?_MENU_About_Init 0070  
                   __end_of_I2C_Write 1CD3                                 pclath 000A  
                    __end_of_TUNE_Run 037F                         _TUNE_Run$2200 0042  
                       _TUNE_Run$2197 003C                         _TUNE_Run$2198 003E  
                       _TUNE_Run$2199 0040                        ??_BUTTON_Reset 0070  
                     __end_of_str_C_L 29DE                       __end_of_str_YAF 28F8  
                     __end_of_str_L_C 29D9                       __end_of_str_PWR 29EE  
                     __end_of_str_SWR 29F2                       __end_of_str_Esc 29EA  
                     __end_of_str_Off 29E6                                 status 0003  
                               wtemp0 007E             __end_of_MENU_Sleep_Update 1325  
                   ?_MENU_CalPWR_Init 0070                  UTILI_CalPWR@deciWatt 0037  
                        _str_sleeping 281C                      EEPROM_Write@addr 0076  
             __end_of_MENU_Reset_Init 2800                 _MENU_StartupSave_Init 1D0B  
              __end_of_UTILI_Delay_ms 1877                 ?_MENU_StartupSave_Run 0070  
                    EEPROM_Write@size 0075                    ??_MENU_CalPWR_Init 007E  
             __end_of_MENU_Sleep_Init 1A3B                     DISP_PWR@low_value 0037  
                     __initialization 0017                          __end_of_main 141B  
            __end_of_MENU_Bypass_Init 27D4       __end_of_MENU_StartupSave_Update 19B7  
                   __end_of_DISP_Char 2732                      _MENU_Tune_Update 196B  
                   __end_of_DISP_Init 1800                             ??_ADC_Run 002E  
             __end_of_MENU_Sub_Update 1C65                                ??_main 007E  
                   __end_of_MAIN_Init 1BFA                             ??_DISP_On 0073  
                    ?_MENU_TParam_Run 0070                         ?_MENU_Sub_Run 0070  
               ??_UTILI_Set_LC_Relays 0073                    MENU_Sub_Update@pos 007C  
                __end_of_DISP_Command 2795   UTILI_deciWatt_to_centiVolt@deciWatt 007C  
                   __end_of_MENU_Init 07FF                                _ADRESH 009C  
                              ?_myIsr 0070                                _ADRESL 009B  
            __end_of_MENU_Memory_Init 26F3                                _EEADRL 0191  
                              _EEDATL 0193                                _EECON2 0196  
                    ___awdiv@dividend 0072                      _eeprom_init_data 1000  
                              i1l7070 000A                                i1l7072 000F  
                              i1l7074 0010                                _FVRCON 0117  
                              _OSCCON 0099            __end_of_MENU_CalPWR_Update 1244  
                              u735_20 000F                                u735_21 000E  
            __end_of_MENU_RelTest_Run 0D47                  __end_of_NameEditChar 2049  
                     ?_UTILI_Delay_ms 0070                       _UTILI_SetRelays 1499  
                              ___bmul 2745                         main@tick_10ms 00BA  
              ??_MENU_MemoryLoad_Init 007C                                ___lmul 1B2A  
                           ??___aldiv 007C                   UTILI_Int2Str@number 0078  
                              ___wmul 1908                             ??___awdiv 0074  
                           ??___awmod 0074                   UTILI_Int2Str@output 007A  
                              _global 00BD                      __end_of_menuMain 2990  
                    __end_of_menuLoad 296C                      __end_of_menuSave 2972  
                    __end_of_menuTune 2948                      ___awdiv@quotient 0076  
                     ___awmod@divisor 0070                  __end_of_eeprom_write 1908  
                     ___awmod@counter 0074                                _str_C_ 29F5  
                              _str_L_ 29F8                                _str_Ok 29F2  
                              _str_On 29DE                                _str_by 29FB  
                    ?_MENU_Memory_Run 0070                          __pdataEEDATA 0000  
                      ??_MENU_Sub_Run 0043                ??_MENU_MemorySave_Init 007C  
                     ??_UTILI_Int2Str 007C                     __end_of_TUNE_Init 2710  
                              ltemp0a 0080                             ?_I2C_Stop 0070  
                           ?_ADC_Init 0070          __end_of_UTILI_GetCapValueStr 1A69  
                    _ee_tune_auto_swr 006E                         _MENU_Main_Run 0EA3  
                    __end_of_str_AUTO 29D4                        _str_YetAnother 2925  
                              ttemp0a 007F                      __end_of_str_Auto 29CF  
                    __end_of_str_Save 29C5                      __end_of_str_Stop 29CA  
                           DISP_Clr@i 0075                                wtemp0a 007F  
            UTILI_Delay_ms@time_in_ms 0070                         _ADC_GetSample 1AC6  
                    _DISP_DataAddress 1A97                    __end_of_CAP_VALUES 281C  
                           ?_DISP_PWR 0031                             DISP_Str@h 002A  
                           ?_DISP_SWR 0031                             DISP_Str@p 002C  
                           ?_DISP_Clr 0070                             DISP_Str@x 0030  
                           DISP_Str@y 002F                             ?_DISP_Off 0070  
                           ?_DISP_Str 0078                MENU_RelTest_Run@update 003D  
             __end_of__initialization 0047             UTILI_Get_LC_Relays@relays 0075  
                  _MENU_TParam_Update 1325                       eeprom_read@addr 0070  
                 _UTILI_Get_LC_Relays 1813                ?_MENU_StartupSave_Init 0070  
                  _MENU_SubSetup_Init 27AA             UTILI_Set_LC_Relays@relays 0071  
              ??_MENU_StartupSave_Run 007C                      ?_MENU_Reset_Init 0070  
                           ?_MENU_Run 0070                 UTILI_CalPWR@centiVolt 0035  
                 DISP_Command@command 0072                MENU_RelTest_Update@str 0033  
                 ___bmul@multiplicand 0070                      _ee_tune_stop_swr 0070  
                    ?_MENU_Sleep_Init 0070                         _MENU_Tune_Run 19B7  
                 ?_MENU_TParam_Update 0070                        __pcstackCOMMON 0070  
                 ?_MENU_SubSetup_Init 0070                          __pidataBANK1 2710  
                        __pidataBANK2 1102                         __end_of_myIsr 0015  
                        ??_BUTTON_Run 0070                      ?_MENU_Sub_Update 0070  
                ?_UTILI_Get_LC_Relays 0070                  __end_of_BUTTON_Reset 26C4  
                           ?_TUNE_Run 0070                       UTILI_CalSWR@swr 002E  
                    MENU_Sub_Update@i 007D        MENU_StartupSave_Init@str_index 0031  
                      _OPTION_REGbits 0095                        ?_MENU_Main_Run 0070  
              __end_of_str_YetAnother 292E                            ??_I2C_Stop 0070  
                          ??_ADC_Init 0070              __end_of_MENU_SubTop_Init 27AA  
                   eeprom_write@value 0070                  ??_MENU_TParam_Update 007E  
                ??_MENU_SubSetup_Init 007E                        ?_ADC_GetSample 0070  
                             ??_myIsr 0070                            ??_DISP_PWR 0035  
                        _EEPROM_Write 1844                            ??_DISP_SWR 0035  
                          ??_DISP_Clr 0075                            __pbssBANK0 0053  
                          __pbssBANK1 00A0                            __pbssBANK2 0120  
                          ??_DISP_Off 0073                            ??_DISP_Str 0020  
             __end_of_UTILI_SetRelays 1517                     ?_MENU_TParam_Init 0070  
                  __end_of_BUTTON_Run 1F4D                    ??_MENU_TParam_Init 007E  
                  __end_of_IND_VALUES 280E             MENU_Memory_Run@cursor_pos 0046  
                          ??_MENU_Run 0051                       DISP_Char@invert 0033  
                      ?_MENU_Tune_Run 0070                            _ee_tunemem 0000  
                    TUNE_Run@cap_step 0057                            __pmaintext 13A0  
                             ?___bmul 0070                               ?___lmul 0070  
                             ?___wmul 0070                      TUNE_Run@best_swr 00AA  
        ?_UTILI_deciWatt_to_centiVolt 007C                            __pintentry 0004  
                 MENU_Memory_Update@i 0040                      TUNE_Run@fine_cap 00A3  
         MENU_Memory_Update@str_index 0031                      TUNE_Run@fine_ind 00A0  
                     _menuStartupSave 2936            TUNE_Run@fine_cap_diff_high 00AE  
                      ___lmul@product 0078                               _ADC_Run 071D  
               ??_UTILI_Get_LC_Relays 0072            __end_of_EEPROM_InitDefault 1A0E  
                          I2C_Write@i 0071                MENU_Sub_Run@cursor_pos 0046  
                    TUNE_Run@ind_step 0058                            ??_TUNE_Run 0039  
                     UTILI_Delay_ms@i 0073                               _DISP_On 26B9  
                   ?_MENU_Main_Weakup 0070                     ?_MENU_Main_Update 0070  
   UTILI_deciWatt_to_centiVolt@number 0036                    ??_MENU_Main_Weakup 007C  
                  ??_MENU_Main_Update 007E                  DISP_DataAddress@page 0074  
                MENU_CalPWR_Run@value 004D                       _ee_sleep_enable 0072  
            __end_of_MENU_Tune_Update 1990                             _I2C_Start 182B  
        __end_of_UTILI_GetIndValueStr 1A97                             _I2C_Write 1C9B  
                __end_of_MENU_Sub_Run 12B2                    _MENU_NameEdit_Init 1CD3  
                __end_of_menuNameEdit 2942                          _DISP_Command 2780  
                        _DISP_i2_addr 005A                  _UTILI_GetCapValueStr 1A3B  
                             ___aldiv 15A2                               ___awdiv 1122  
                          _menuTParam 295A                               ___awmod 1E54  
               MENU_Tune_Update@state 007C                     ?_MENU_Bypass_Init 0070  
                          _menuBypass 2978                   ?_MENU_NameEdit_Init 0070  
            __end_of_eeprom_init_data 1100                            _menuSubTop 2984  
                  ??_MENU_Bypass_Init 007C         ??_UTILI_deciWatt_to_centiVolt 002E  
                             __ptext1 185D                               __ptext2 18CD  
                             __ptext3 1BFA                               __ptext4 16C0  
                             __ptext5 055F                               __ptext6 0C09  
                             __ptext7 162E                               __ptext8 0B3F  
                             __ptext9 1E05                       ??_MENU_Main_Run 0049  
                             _font5x8 037F                         _ee_cal_offset 0066  
                   __end_of_menuAbout 2966          __end_of_MENU_NameEdit_Update 0A89  
                           _DISP_Char 2720                  __end_of_menuSubSetup 2984  
                             _menuCal 2948                             _DISP_Init 175E  
                        _NameEditChar 2000                             _T2CONbits 001C  
                   __end_of_menuReset 2978                     __end_of_menuSleep 295A  
                    ___awmod@dividend 0072                      ___aldiv@dividend 0024  
                     ??_ADC_GetSample 0072                        _MENU_About_Run 1E05  
                TUNE_Run@best_row_swr 00A8                             _MAIN_Init 1BC5  
                             _str_C_L 29D9                               _str_YAF 28EE  
                             _str_L_C 29D4                               _str_PWR 29EA  
                             _str_SWR 29EE                               _str_Esc 29E6  
                             _str_Off 29E2                    MENU_NameEdit_Run@c 003C  
                  MENU_NameEdit_Run@i 003D                 __end_of_str_ATU100EXT 2936  
                             clrloop0 26C5                          ADC_Run@f_sum 0034  
                end_of_initialization 0047                     ?_MENU_Memory_Init 0070  
                        ADC_Run@r_sum 0038                  ??_MENU_NameEdit_Init 007E  
                    ??_UTILI_Delay_ms 0072              MENU_TParam_Update@cursor 003C  
                    ?_UTILI_SetRelays 0070                         ??_EEPROM_Init 0079  
                       ??_EEPROM_Read 0076                               init_ram 26CA  
                  ??_MENU_Memory_Init 007C                             _MENU_Init 07F6  
                        _eeprom_write 18EA                               initloop 26CB  
                   ?_MENU_RelTest_Run 0070                       ??_MENU_Tune_Run 007E  
                          ?_I2C_Start 0070                            ?_I2C_Write 0070  
                      _MENU_Main_Init 1AF8               __end_of_menuStartupSave 293C  
                          _tick_count 00BC                     __end_of_str_DG4SN 29B4  
                   __end_of_str_N7DCC 29BA                    ??_MENU_RelTest_Run 007E  
               ?_UTILI_GetCapValueStr 0023                        _best_swr_valid 00B1  
                    ___aldiv@quotient 002A               MENU_Memory_Update@F3118 00E6  
          __end_of_MENU_Memory_Update 1FA5                     __end_of_str_Delay 29A2  
                   __end_of_str_Break 285F                     __end_of_str_Ready 2849  
                  _MENU_CalPWR_Update 11D9                     __end_of_str_Sleep 299C  
                   __end_of_str_Point 29A8              __end_of_DISP_DataAddress 1AC6  
                   __end_of_str_Power 29AE                     __end_of_str_Start 2996  
                          DISP_Char@c 0032           __end_of_UTILI_Set_LC_Relays 276C  
                           _PORTBbits 000D                UTILI_GetCapValue@value 0076  
              __end_of_MENU_About_Run 1E54                 __end_of_str_MENU_Load 28CD  
                          ?_DISP_Char 0031                 __end_of_str_MENU_Save 28D8  
                          ?_DISP_Init 0077                   ?_MENU_CalPWR_Update 0070  
             MENU_Memory_Update@index 0034                             _TRISAbits 008C  
                           _TRISBbits 008D                             _TRISCbits 008E  
                          ?_MAIN_Init 0070                             _TUNE_Init 2700  
        ?_UTILI_centiVolt_to_deciWatt 007C                        _MENU_Sleep_Run 162E  
             ??_MENU_StartupSave_Init 007C               _MENU_StartupSave_Update 1990  
                          _str_Bypass 28F8                             _TUNE_step 00B3  
                          _str__Tune_ 2901                           _CM1CON0bits 0111  
               MENU_NameEdit_Update@c 0037                 MENU_NameEdit_Update@i 0039  
               MENU_NameEdit_Update@x 0038                            ?_MENU_Init 0070  
                         _CM2CON0bits 0113                __end_of_MENU_Main_Init 1B2A  
                     DISP_Init@rotate 0077                         ??_eeprom_read 0070  
                        _BUTTON_Reset 26BE                  ??_MENU_CalPWR_Update 003D  
                    DISP_PWR@deciWatt 0032                          _BUTTON_count 0059  
                      _MENU_Tune_Init 1927                   __end_of_EEPROM_Init 2000  
                 __end_of_EEPROM_Read 18B0                        __end_of___bmul 2758  
                       ?_UTILI_CalPWR 0070                        __end_of___lmul 1B5D  
                       ?_UTILI_CalSWR 0070                         __pidataEEDATA 0000  
                 _BUTTON_Bypass_count 00B6                        __end_of___wmul 1927  
                   _UTILI_GetCapValue 1B5D                     UTILI_Int2Str@size 007B  
                     ?_MENU_About_Run 0070                         ??_BUTTON_Init 0070  
             MENU_Sleep_Update@cursor 0035                    ?_UTILI_GetCapValue 0070  
                      __end_of_str_C_ 29F8                        __end_of_str_L_ 29FB  
                      __end_of_str_Ok 29F5                        __end_of_str_On 29E2  
                      __end_of_str_by 29FE                   start_initialization 0017  
                _UTILI_GetIndValueStr 1A69                     ??_MENU_CalPWR_Run 0043  
              __end_of_MENU_Sleep_Run 16C0                 __end_of_UTILI_Int2Str 1499  
             UTILI_GetIndValueStr@str 0023                     ?_MENU_SubTop_Init 0070  
                   _UTILI_GetIndValue 1B91                  MENU_Sleep_Update@str 0031  
           UTILI_GetCapValueStr@value 0025                            ?_TUNE_Init 0070  
                 ??_UTILI_GetCapValue 0072                    ??_MENU_SubTop_Init 007E  
                  ?_UTILI_GetIndValue 0070         ??_UTILI_centiVolt_to_deciWatt 002E  
                     ?_MENU_Main_Init 0070                              ADC_Run@i 003C  
                            ADC_Run@s 003D                           ??_I2C_Start 0070  
UTILI_centiVolt_to_deciWatt@centiVolt 007C                           ??_I2C_Write 0070  
              __end_of_MENU_Tune_Init 1946                ??_UTILI_GetCapValueStr 007E  
                 ??_UTILI_GetIndValue 0072                  _MENU_NameEdit_Update 09D5  
                            ??___bmul 0071                           _ee_cal_gain 0064  
                            ??___lmul 0078                              ??___wmul 0074  
                 __end_of_eeprom_read 26DB                        ??_UTILI_CalPWR 0034  
                      ??_UTILI_CalSWR 007C             __end_of_UTILI_GetCapValue 1B91  
                         __pdataBANK1 00DB                           __pdataBANK2 0148  
                            ?_ADC_Run 0070                     ??_MENU_About_Init 007C  
                    _MENU_CalPWR_Init 18B0                        I2C_Write@value 0070  
                   _BUTTON_Auto_count 00B7                              ?_DISP_On 0070  
                         ??_DISP_Char 007C                   _MENU_RelTest_Update 0A89  
                         ??_DISP_Init 0078                           __pbssEEDATA 0072  
               ?_UTILI_GetIndValueStr 0023             __end_of_UTILI_GetIndValue 1BC5  
                        _MENU_Sub_Run 1244                             ___latbits 0003  
                       __pcstackBANK0 0020                         __pcstackBANK3 01A0  
           ??_MENU_StartupSave_Update 007C                          _menuNameEdit 293C  
               __end_of_str_WaitForHF 2875                       ?_MENU_Sleep_Run 0070  
                         ??_MAIN_Init 0070                      DISP_SWR@centiSWR 0032  
               __end_of_str_SpaceLine 2880                        DISP_PWR@invert 0034  
                 __end_of_BUTTON_Init 2700                    _EEPROM_InitDefault 19E1  
                     _ptrSubSetupMenu 0160                      eeprom_write@addr 0071  
                   ?_MENU_Tune_Update 0070                           ??_MENU_Init 007C  
                         _EEPROM_Init 1FA5                           _EEPROM_Read 1893  
                ?_MENU_RelTest_Update 0070                          _current_menu 0053  
                  ??_MENU_Tune_Update 007C                 ?_MENU_NameEdit_Update 0070  
                 ?_EEPROM_InitDefault 0070                          _menuSubSetup 297E  
                     ?_MENU_Tune_Init 0070                     ??_MENU_TParam_Run 003D  
                      DISP_SWR@invert 0034           __end_of_UTILI_Get_LC_Relays 182B  
                            ?___aldiv 0020                              ?___awdiv 0070  
                            ?___awmod 0070             TUNE_Run@fine_cap_diff_low 00AF  
           MENU_RelTest_Update@cursor 003C                      _str_MENU_RelTest 28A1  
                ??_EEPROM_InitDefault 0073                        UTILI_Int2Str@p 0022  
                            _I2C_Stop 2732                              _ADC_Init 27D4  
                   _MENU_NameEdit_Run 16C0                      _str_MENU_TunePar 28B7  
                           _menuAbout 2960                   TUNE_Run@best_cap_sw 00B0  
                 __end_of_menuRelTest 2954                           ??_TUNE_Init 0071  
                           _menuReset 2972                             _menuSleep 2954  
                  ?_MENU_NameEdit_Run 0070            MENU_StartupSave_Init@F3149 00E0  
                            _DISP_PWR 1EA5                              _DISP_SWR 1D45  
                            _DISP_Clr 1946                              _DISP_Off 26B4  
                            _DISP_Str 0D47                       ___aldiv@divisor 0020  
                     ___aldiv@counter 0028                 ??_MENU_RelTest_Update 0031  
                      ___wmul@product 0074                              _LATAbits 010C  
                            _LATBbits 010D                              _LATCbits 010E  
                    _coarse_cap_value 2833                   ??_MENU_NameEdit_Run 003A  
                           clear_ram0 26C4                           _eeprom_read 26D0  
                         _DISP_rotate 00B9                              _PIE1bits 0091  
                   ??_MENU_Memory_Run 0043                              _MENU_Run 18CD  
                            _MENU_var 005B                MENU_Memory_Run@tunemem 0047  
                            _PIR1bits 0011                 DISP_DataAddress@start 0072  
                   MENU_Main_Update@i 0048                             _str_DG4SN 29AE  
                __end_of_str_MENU_Cal 28A1                             _str_N7DCC 29B4  
               eeprom_write@gie_state 0072                     ?_DISP_DataAddress 0072  
                           _str_Delay 299C                            _ADCON0bits 009D  
                           _str_Break 2854                            _ADCON1bits 009E  
                   ___wmul@multiplier 0070                              _TUNE_Run 004B  
              ??_UTILI_GetIndValueStr 007E                             _str_Ready 283E  
                  ??_DISP_DataAddress 0073                             _str_Sleep 2996  
               MENU_CalPWR_Update@str 0041                             _str_Point 29A2  
                           _str_Power 29A8             __end_of_MENU_NameEdit_Run 175E  
                           _str_Start 2990                           _BUTTON_Init 26F3  
                            _WPUBbits 020D                 __end_of_MENU_Main_Run 1000  
                    _coarse_ind_value 2828                     ??_MENU_Reset_Init 007C  
                  _MENU_Memory_Update 1F4D                     ??_MENU_Sleep_Init 007E  
               __end_of_ADC_GetSample 1AF8      _UTILI_deciWatt_to_centiVolt$2997 0032  
        UTILI_GetCapValueStr@str_size 0024                     ___lmul@multiplier 0070  
              UTILI_GetIndValue@value 0076                      UTILI_Int2Str@pos 0021  
                __end_of_UTILI_CalPWR 11D9                  __end_of_UTILI_CalSWR 0884  
                 ?_MENU_Memory_Update 0070         __end_of_MENU_StartupSave_Init 1D45  
              ??_MENU_NameEdit_Update 007C                     ??_MENU_Sub_Update 0031  
                          _EECON1bits 0195                  __end_of_str_Hardware 291C  
     UTILI_deciWatt_to_centiVolt@temp 003E                     MENU_CalPWR_Run@y1 004B  
                   MENU_CalPWR_Run@y2 0049       UTILI_deciWatt_to_centiVolt@sqrt 003A  
               __end_of_MENU_Tune_Run 19E1                  __end_of_str_Firmware 2925  
                          _CAP_VALUES 280E   __end_of_UTILI_deciWatt_to_centiVolt 0929  
         _UTILI_deciWatt_to_centiVolt 0884                      ??_MENU_About_Run 007C  
                       DISP_SWR@F2959 00DB                       _MENU_CalPWR_Run 055F  
                    _MENU_TParam_Init 1D81                  ??_MENU_Memory_Update 007C  
               TUNE_Run@best_cap_step 0056                              ___int_sp 0000  
                          _ANSELAbits 018C                            _ANSELBbits 018D  
                         _menuRelTest 294E                           _MENU_cursor 00B4  
                            _f_buffer 0134                 TUNE_Run@best_ind_step 0055  
                      DISP_Str@h_1074 002B                              __ptext10 1517  
                            __ptext11 1244                              __ptext20 1CD3  
                            __ptext12 0EA3                              __ptext21 18B0  
                            __ptext13 19B7                              __ptext30 27AA  
                            __ptext22 1877                              __ptext14 004B  
                            __ptext31 2795                              __ptext23 1A0E  
                            __ptext15 196B                              __ptext40 09D5  
                            __ptext32 1AF8                              __ptext24 1D81  
                            __ptext16 0800                              __ptext41 26E7  
                            __ptext33 1927                              __ptext25 1C65  
                            __ptext17 117D                              __ptext50 2720  
                            __ptext42 1F4D                              __ptext34 2700  
                            __ptext26 1800                              __ptext18 1DC1  
                            __ptext51 2758                              __ptext43 26DB  
                            __ptext35 1325                              __ptext27 276C  
                            __ptext19 1D0B                              __ptext60 07F6  
                            __ptext52 1499                              __ptext44 0929  
                            __ptext36 1C2F                              __ptext28 27EA  
                            __ptext61 1813                              __ptext53 0884  
                            __ptext45 1A69                              __ptext37 1990  
                            __ptext29 27BF                              __ptext70 1FA5  
                            __ptext62 0D47                              __ptext54 1B2A  
                            __ptext46 1B91                              __ptext38 12B2  
                            __ptext71 1893                              __ptext63 1908  
                            __ptext55 11D9                              __ptext47 1A3B  
                            __ptext39 0A89                              __ptext80 1C9B  
                            __ptext72 26D0                              __ptext64 2745  
                            __ptext56 1EA5                              __ptext48 1B5D  
                            __ptext81 182B                              __ptext73 175E  
                            __ptext65 1122                              __ptext57 141B  
                            __ptext49 1D45                              __ptext82 1EF6  
                            __ptext74 1946                              __ptext66 26BE  
                            __ptext58 1E54                              __ptext83 26F3  
                            __ptext75 26B9                              __ptext67 1BC5  
                            __ptext59 1844                              __ptext84 071D  
                            __ptext76 26B4                              __ptext68 19E1  
                            __ptext85 15A2                              __ptext77 2780  
                            __ptext69 18EA                              __ptext86 1AC6  
                            __ptext78 2732                              __ptext87 27D4  
                            __ptext79 1A97                   _ee_tune_auto_enable 0073  
                    ??_MENU_Main_Init 007C          __end_of_MENU_MemoryLoad_Init 1813  
                  UTILI_GetCapValue@i 0078                         ?_EEPROM_Write 0073  
                     _str_MENU_Bypass 28D8                    __end_of_menuTParam 2960  
               MENU_Main_Update@c_row 0046                        _ee_cal_point_0 006A  
                      _ee_cal_point_1 0068                    __end_of_menuBypass 297E  
               MENU_Main_Update@l_row 0047              __end_of_MENU_CalPWR_Init 18CD  
                            _menuMain 298A                              _menuLoad 2966  
               MENU_Main_Update@p_str 0044                              _menuSave 296C  
                            _r_buffer 0120                      _MENU_Main_Weakup 26DB  
                            _menuTune 2942                      _MENU_Main_Update 0929  
                __end_of_str_designed 2913                        DISP_Str@invert 007B  
                  __end_of_menuSubTop 298A                   EEPROM_InitDefault@i 0073  
                     _MENU_About_Init 1C65          __end_of_MENU_MemorySave_Init 2780  
           UTILI_GetIndValueStr@value 0025                              _str_AUTO 29CF  
                            int$flags 007E                              _str_Auto 29CA  
                            _str_Save 29C0                              _str_Stop 29C5  
                          _BUTTON_Run 1EF6                            _IND_VALUES 2800  
                    ??_MENU_Sleep_Run 0036                  __end_of_str_sleeping 281D  
                 __end_of_str_PWR_low 2854          __end_of_MENU_StartupSave_Run 1C2F  
                          _INTCONbits 000B                        __pstringtext10 2854  
                      __pstringtext11 285F                        __pstringtext20 28C2  
                      __pstringtext12 286A                        __pstringtext21 28CD  
                      __pstringtext13 2875                        __pstringtext30 2925  
                      __pstringtext22 28D8                        __pstringtext14 2880  
                      __pstringtext31 292E                        __pstringtext23 28E3  
                      __pstringtext15 288B                        __pstringtext40 2966  
                      __pstringtext32 2936                        __pstringtext24 28EE  
                      __pstringtext16 2896                        __pstringtext41 296C  
                      __pstringtext33 293C                        __pstringtext25 28F8  
                      __pstringtext17 28A1                        __pstringtext50 29A2  
                      __pstringtext42 2972                        __pstringtext34 2942  
                      __pstringtext26 2901                        __pstringtext18 28AC  
                      __pstringtext51 29A8                        __pstringtext43 2978  
                      __pstringtext35 2948                        __pstringtext27 290A  
                      __pstringtext19 28B7                        __pstringtext60 29D9  
                      __pstringtext52 29AE                        __pstringtext44 297E  
                      __pstringtext36 294E                        __pstringtext28 2913  
                      __pstringtext61 29DE                        __pstringtext53 29B4  
                      __pstringtext45 2984                        __pstringtext37 2954  
                      __pstringtext29 291C                        __pstringtext70 281C  
                      __pstringtext62 29E2                        __pstringtext54 29BA  
                      __pstringtext46 298A                        __pstringtext38 295A  
                      __pstringtext71 0000                        __pstringtext63 29E6  
                      __pstringtext55 29C0                        __pstringtext47 2990  
                      __pstringtext39 2960                        __pstringtext64 29EA  
                      __pstringtext56 29C5                        __pstringtext48 2996  
                      __pstringtext65 29EE                        __pstringtext57 29CA  
                      __pstringtext49 299C                        __pstringtext66 29F2  
                      __pstringtext58 29CF                        __pstringtext67 29F5  
                      __pstringtext59 29D4                        __pstringtext68 29F8  
                      __pstringtext69 29FB                      _MENU_Bypass_Init 27BF  
                   _MENU_RelTest_Init 1877                        ??_EEPROM_Write 0076  
                     _MENU_TParam_Run 0B3F                         _str_ATU100EXT 292E  
                       _ptrSubTopMenu 0154                              intlevel1 0000  
                  ?_MENU_RelTest_Init 0070                      ??_MENU_Tune_Init 007C  
                 EEPROM_Read@ptrValue 0073                   __end_of_str_Version 29C0  
                        DISP_Char@col 0034                          DISP_Char@row 0031  
                        DISP_Char@str 0035                   __end_of_str_Running 286A  
                      _str_MENU_About 2880                          ?_EEPROM_Init 0070  
                        ?_EEPROM_Read 0073                          DISP_Clr@page 0076  
                  UTILI_GetIndValue@i 0078                        _str_MENU_Reset 28E3  
                      _str_MENU_Sleep 28AC                        _str_MENU_Setup 288B  
            __end_of_str_MENU_RelTest 28AC               __end_of_MENU_CalPWR_Run 071D  
                       DISP_Str@empty 002E                   ??_MENU_RelTest_Init 007E  
                       ?_DISP_Command 0070                         DISP_Str@start 0028  
            __end_of_str_MENU_TunePar 28C2                      _MENU_Memory_Init 26E7  
             MENU_NameEdit_Init@F3141 00E3                    __end_of_str_Bypass 2901  
                       __pstringtext1 037F                         __pstringtext2 1000  
                       __pstringtext3 2000                         __pstringtext4 2800  
                       __pstringtext5 280E                         __pstringtext6 2828  
                       __pstringtext7 2833                         __pstringtext8 283E  
                       __pstringtext9 2849                      UTILI_SetRelays@v 0070  
                    _MENU_RelTest_Run 0C09                     ??_UTILI_SetRelays 0070  
                         DISP_PWR@col 0036                           DISP_PWR@row 0031  
                         DISP_PWR@str 0038              __end_of_coarse_cap_value 283E  
                  __end_of_str__Tune_ 290A                           DISP_SWR@col 0036  
                         DISP_SWR@row 0031                           DISP_SWR@str 0037  
         MENU_NameEdit_Init@str_index 003A            __end_of_MENU_TParam_Update 13A0  
                       _str_MENU_Load 28C2               __end_of_str_MENU_Bypass 28E3  
          __end_of_MENU_SubSetup_Init 27BF                         _str_MENU_Save 28CD  
           __end_of_MENU_RelTest_Init 1893                          DISP_Str@page 0025  
                        DISP_Str@fpos 0026                   MENU_Main_Update@str 003D  
                        ___aldiv@sign 0029                       _MENU_Memory_Run 1517  
 __end_of_UTILI_centiVolt_to_deciWatt 1E05           _UTILI_centiVolt_to_deciWatt 1DC1  
             __end_of_MENU_About_Init 1C9B                __end_of_str_MENU_About 288B  
                        _str_MENU_Cal 2896                           DISP_Str@col 0024  
                         DISP_Str@len 0029                __end_of_str_MENU_Reset 28EE  
              __end_of_str_MENU_Sleep 28B7                           DISP_Str@row 0078  
                         DISP_Str@str 0079                __end_of_str_MENU_Setup 2896  
                       ?_eeprom_write 0070             TUNE_Run@best_last_row_swr 00A6  
                  _ee_sleep_delay_sec 006C            TUNE_Run@fine_ind_diff_high 00AC  
                        ?_eeprom_read 0070                       EEPROM_Read@addr 0076  
            MENU_Memory_Update@memory 0035   UTILI_centiVolt_to_deciWatt@deciWatt 0032  
                      ??_DISP_Command 0072                       EEPROM_Read@size 0075  
                    DISP_Init@i2_addr 0078             TUNE_Run@fine_ind_diff_low 00AD  
             UTILI_GetCapValueStr@str 0023              __end_of_coarse_ind_value 2833  
                      EEPROM_Read@ptr 0077               MENU_CalPWR_Update@F3100 00E9  
